{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Implements the [Full Jitter algorithm](\n * https://aws.amazon.com/blogs/architecture/exponential-backoff-and-jitter/)\n * and also allows for specifying a fixed wait added to the full jitter backoff\n * (which can be zero).\n */\n\nclass FullJitterBackoff {\n  constructor(fixedWaitMs, shortBackoffMs, longBackoffMs) {\n    this.fixedWaitMs = fixedWaitMs;\n    this.shortBackoffMs = shortBackoffMs;\n    this.longBackoffMs = longBackoffMs;\n    this.currentRetry = 0;\n\n    if (this.fixedWaitMs < 0) {\n      this.fixedWaitMs = 0;\n    }\n\n    if (this.shortBackoffMs < 0) {\n      this.shortBackoffMs = 0;\n    }\n\n    if (this.longBackoffMs < 0) {\n      this.longBackoffMs = 0;\n    }\n\n    this.reset();\n  }\n\n  reset() {\n    this.currentRetry = 0;\n  }\n\n  nextBackoffAmountMs() {\n    const fullJitterMs = Math.random() * Math.min(this.longBackoffMs, this.shortBackoffMs * Math.pow(2.0, this.currentRetry)) + this.fixedWaitMs;\n    this.currentRetry += 1;\n    return fullJitterMs;\n  }\n\n}\n\nexports.default = FullJitterBackoff;","map":{"version":3,"mappings":"cAAA;AACA;;;;;AAIA;;;;;;;AAMA,MAAqBA,iBAArB,CAAsC;EAGpCC,YACUC,WADV,EAEUC,cAFV,EAGUC,aAHV,EAG+B;IAFrB;IACA;IACA;IALF,oBAAuB,CAAvB;;IAON,IAAI,KAAKF,WAAL,GAAmB,CAAvB,EAA0B;MACxB,KAAKA,WAAL,GAAmB,CAAnB;IACD;;IACD,IAAI,KAAKC,cAAL,GAAsB,CAA1B,EAA6B;MAC3B,KAAKA,cAAL,GAAsB,CAAtB;IACD;;IACD,IAAI,KAAKC,aAAL,GAAqB,CAAzB,EAA4B;MAC1B,KAAKA,aAAL,GAAqB,CAArB;IACD;;IACD,KAAKC,KAAL;EACD;;EAEDA,KAAK;IACH,KAAKC,YAAL,GAAoB,CAApB;EACD;;EAEDC,mBAAmB;IACjB,MAAMC,YAAY,GAChBC,IAAI,CAACC,MAAL,KACED,IAAI,CAACE,GAAL,CAAS,KAAKP,aAAd,EAA6B,KAAKD,cAAL,GAAsBM,IAAI,CAACG,GAAL,CAAS,GAAT,EAAc,KAAKN,YAAnB,CAAnD,CADF,GAEA,KAAKJ,WAHP;IAIA,KAAKI,YAAL,IAAqB,CAArB;IACA,OAAOE,YAAP;EACD;;AA/BmC;;AAAtCK","names":["FullJitterBackoff","constructor","fixedWaitMs","shortBackoffMs","longBackoffMs","reset","currentRetry","nextBackoffAmountMs","fullJitterMs","Math","random","min","pow","exports"],"sourceRoot":"","sources":["../../src/backoff/FullJitterBackoff.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}