{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst BaseTask_1 = require(\"./BaseTask\");\n/*\n * [[CreatePeerConnectionTask]] sets up the peer connection object.\n */\n\n\nclass CreatePeerConnectionTask extends BaseTask_1.default {\n  constructor(context) {\n    super(context.logger);\n    this.context = context;\n    this.taskName = 'CreatePeerConnectionTask';\n    this.removeTrackAddedEventListener = null;\n    this.removeTrackRemovedEventListeners = {};\n    this.trackEvents = ['ended', 'mute', 'unmute', 'isolationchange', 'overconstrained'];\n    this.removeVideoTrackEventListeners = {};\n\n    this.trackAddedHandler = event => {\n      const track = event.track;\n      this.context.logger.info(`received track event: kind=${track.kind} id=${track.id} label=${track.label}`);\n\n      if (event.transceiver && event.transceiver.currentDirection === 'inactive') {\n        return;\n      }\n\n      if (event.streams.length === 0) {\n        this.context.logger.warn(`Track event but no stream`);\n        return;\n      }\n\n      const stream = event.streams[0];\n\n      if (track.kind === 'audio') {\n        this.context.audioMixController.bindAudioStream(stream);\n      } else if (track.kind === 'video' && !this.trackIsVideoInput(track)) {\n        this.addRemoteVideoTrack(track, stream);\n      }\n    };\n  }\n\n  removeObserver() {\n    this.removeTrackAddedEventListener && this.removeTrackAddedEventListener();\n\n    for (const trackId in this.removeTrackRemovedEventListeners) {\n      this.removeTrackRemovedEventListeners[trackId]();\n    }\n  }\n\n  addPeerConnectionEventLogger() {\n    const peer = this.context.peer;\n    peer.addEventListener('connectionstatechange', () => {\n      this.context.logger.info(`peer connection state changed: ${peer.connectionState}`);\n    });\n    peer.addEventListener('negotiationneeded', () => {\n      this.context.logger.info('peer connection negotiation is needed');\n    });\n    peer.addEventListener('icegatheringstatechange', () => {\n      this.context.logger.info(`peer connection ice gathering state changed: ${peer.iceGatheringState}`);\n    });\n    peer.addEventListener('icecandidate', event => {\n      this.context.logger.info(`peer connection ice candidate: ${event.candidate ? event.candidate.candidate : '(null)'}`);\n    });\n    peer.addEventListener('iceconnectionstatechange', () => {\n      this.context.logger.info(`peer connection ice connection state changed: ${peer.iceConnectionState}`);\n    });\n  }\n\n  run() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.context.removableObservers.push(this);\n      const hasTurnCredentials = this.context.turnCredentials && this.context.turnCredentials.uris.length > 0;\n      const configuration = hasTurnCredentials ? {\n        iceServers: [{\n          urls: this.context.turnCredentials.uris,\n          username: this.context.turnCredentials.username,\n          credential: this.context.turnCredentials.password,\n          credentialType: 'password'\n        }],\n        iceTransportPolicy: 'relay'\n      } : {};\n      configuration.bundlePolicy = this.context.browserBehavior.requiresBundlePolicy(); // @ts-ignore\n\n      configuration.sdpSemantics = this.context.browserBehavior.requiresUnifiedPlan() ? 'unified-plan' : 'plan-b'; // @ts-ignore\n\n      this.logger.info(`SDP semantics are ${configuration.sdpSemantics}`);\n      const connectionConstraints = {\n        optional: [{\n          googCpuOveruseDetection: false\n        }, {\n          googCombinedAudioVideoBwe: true\n        }]\n      };\n\n      if (this.context.peer) {\n        this.context.logger.info('reusing peer connection');\n      } else {\n        this.context.logger.info('creating new peer connection'); // @ts-ignore\n\n        this.context.peer = new RTCPeerConnection(configuration, connectionConstraints);\n        this.addPeerConnectionEventLogger();\n      }\n\n      this.removeTrackAddedEventListener = () => {\n        if (this.context.peer) {\n          this.context.peer.removeEventListener('track', this.trackAddedHandler);\n        }\n\n        this.removeTrackAddedEventListener = null;\n      };\n\n      this.context.peer.addEventListener('track', this.trackAddedHandler);\n    });\n  }\n\n  trackIsVideoInput(track) {\n    if (this.context.transceiverController.useTransceivers()) {\n      this.logger.debug(() => {\n        return `getting video track type (unified-plan)`;\n      });\n      return this.context.transceiverController.trackIsVideoInput(track);\n    }\n\n    this.logger.debug(() => {\n      return `getting video track type (plan-b)`;\n    });\n\n    if (this.context.activeVideoInput) {\n      const tracks = this.context.activeVideoInput.getVideoTracks();\n\n      if (tracks && tracks.length > 0 && tracks[0].id === track.id) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  addRemoteVideoTrack(track, stream) {\n    var _a;\n\n    let trackId = stream.id;\n\n    if (!this.context.browserBehavior.requiresUnifiedPlan()) {\n      stream = new MediaStream([track]);\n      trackId = track.id;\n    }\n\n    const attendeeId = this.context.videoStreamIndex.attendeeIdForTrack(trackId);\n    let skipAdding;\n    let tile;\n\n    if (this.context.videoTileController.getVideoTileForAttendeeId) {\n      tile = this.context.videoTileController.getVideoTileForAttendeeId(attendeeId);\n      skipAdding = !!((_a = tile === null || tile === void 0 ? void 0 : tile.state()) === null || _a === void 0 ? void 0 : _a.boundVideoStream);\n    } else {\n      skipAdding = this.context.videoTileController.haveVideoTileForAttendeeId(attendeeId);\n    }\n\n    if (skipAdding) {\n      this.context.logger.info(`Not adding remote track. Already have tile for attendeeId:  ${attendeeId}`);\n      return;\n    }\n\n    if (!tile) {\n      tile = this.context.videoTileController.addVideoTile();\n      this.logger.info(`Created video tile ${tile.id()}`);\n    }\n\n    let streamId = this.context.videoStreamIndex.streamIdForTrack(trackId);\n\n    if (typeof streamId === 'undefined') {\n      this.logger.warn(`stream not found for tile=${tile.id()} track=${trackId}`);\n      streamId = null;\n    }\n\n    for (let i = 0; i < this.trackEvents.length; i++) {\n      const trackEvent = this.trackEvents[i];\n      const videoTracks = stream.getVideoTracks();\n\n      if (videoTracks && videoTracks.length) {\n        const videoTrack = videoTracks[0];\n\n        const callback = () => {\n          this.context.logger.info(`received the ${trackEvent} event for tile=${tile.id()} id=${track.id} streamId=${streamId}`);\n\n          if (trackEvent === 'ended' && this.context.browserBehavior.requiresUnifiedPlan()) {\n            this.removeRemoteVideoTrack(track, tile.state());\n          }\n        };\n\n        videoTrack.addEventListener(trackEvent, callback);\n\n        if (!this.removeVideoTrackEventListeners[track.id]) {\n          this.removeVideoTrackEventListeners[track.id] = [];\n        }\n\n        this.removeVideoTrackEventListeners[track.id].push(() => {\n          videoTrack.removeEventListener(trackEvent, callback);\n        });\n      }\n    }\n\n    let width;\n    let height;\n\n    if (track.getSettings) {\n      const cap = track.getSettings();\n      width = cap.width;\n      height = cap.height;\n    } else {\n      const cap = track.getCapabilities();\n      width = cap.width;\n      height = cap.height;\n    }\n\n    const externalUserId = this.context.videoStreamIndex.externalUserIdForTrack(trackId);\n    tile.bindVideoStream(attendeeId, false, stream, width, height, streamId, externalUserId);\n    this.logger.info(`video track added, use tile=${tile.id()} track=${trackId} streamId=${streamId}`);\n    let endEvent = 'removetrack';\n    let target = stream;\n\n    if (!this.context.browserBehavior.requiresUnifiedPlan()) {\n      this.logger.debug(() => {\n        return 'updating end event and target track (plan-b)';\n      });\n      endEvent = 'ended'; // @ts-ignore\n\n      target = track;\n    }\n\n    const trackRemovedHandler = () => this.removeRemoteVideoTrack(track, tile.state());\n\n    this.removeTrackRemovedEventListeners[track.id] = () => {\n      target.removeEventListener(endEvent, trackRemovedHandler);\n      delete this.removeTrackRemovedEventListeners[track.id];\n    };\n\n    target.addEventListener(endEvent, trackRemovedHandler);\n  }\n\n  removeRemoteVideoTrack(track, tileState) {\n    if (this.removeTrackRemovedEventListeners.hasOwnProperty(track.id)) {\n      this.removeTrackRemovedEventListeners[track.id]();\n\n      for (const removeVideoTrackEventListener of this.removeVideoTrackEventListeners[track.id]) {\n        removeVideoTrackEventListener();\n      }\n\n      delete this.removeVideoTrackEventListeners[track.id];\n    }\n\n    this.logger.info(`video track ended, removing tile=${tileState.tileId} id=${track.id} stream=${tileState.streamId}`);\n\n    if (tileState.streamId) {\n      this.context.videosPaused.remove(tileState.streamId);\n    } else {\n      this.logger.warn(`no stream found for tile=${tileState.tileId}`);\n    }\n\n    this.context.videoTileController.removeVideoTile(tileState.tileId);\n  }\n\n}\n\nexports.default = CreatePeerConnectionTask;\nCreatePeerConnectionTask.REMOVE_HANDLER_INTERVAL_MS = 10000;","map":{"version":3,"mappings":"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","names":["CreatePeerConnectionTask","BaseTask_1","constructor","context","logger","event","track","info","kind","id","label","transceiver","currentDirection","streams","length","warn","stream","audioMixController","bindAudioStream","trackIsVideoInput","addRemoteVideoTrack","removeObserver","removeTrackAddedEventListener","trackId","removeTrackRemovedEventListeners","addPeerConnectionEventLogger","peer","addEventListener","connectionState","iceGatheringState","candidate","iceConnectionState","run","removableObservers","push","hasTurnCredentials","turnCredentials","uris","configuration","iceServers","urls","username","credential","password","credentialType","iceTransportPolicy","bundlePolicy","browserBehavior","requiresBundlePolicy","sdpSemantics","requiresUnifiedPlan","connectionConstraints","optional","googCpuOveruseDetection","googCombinedAudioVideoBwe","RTCPeerConnection","removeEventListener","trackAddedHandler","transceiverController","useTransceivers","debug","activeVideoInput","tracks","getVideoTracks","MediaStream","attendeeId","videoStreamIndex","attendeeIdForTrack","skipAdding","tile","videoTileController","getVideoTileForAttendeeId","state","_a","boundVideoStream","haveVideoTileForAttendeeId","addVideoTile","streamId","streamIdForTrack","i","trackEvents","trackEvent","videoTracks","videoTrack","callback","removeRemoteVideoTrack","removeVideoTrackEventListeners","width","height","getSettings","cap","getCapabilities","externalUserId","externalUserIdForTrack","bindVideoStream","endEvent","target","trackRemovedHandler","tileState","hasOwnProperty","removeVideoTrackEventListener","tileId","videosPaused","remove","removeVideoTile","exports"],"sourceRoot":"","sources":["../../src/task/CreatePeerConnectionTask.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}