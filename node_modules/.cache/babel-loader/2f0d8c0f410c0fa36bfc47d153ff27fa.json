{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst TimeoutScheduler_1 = require(\"../scheduler/TimeoutScheduler\");\n\nconst BaseTask_1 = require(\"./BaseTask\");\n/**\n * [[TimeoutTask]] runs a subtask until it either succeeds or reaches a\n * timeout, at which point the subtask is canceled.\n */\n\n\nclass TimeoutTask extends BaseTask_1.default {\n  constructor(logger, taskToRunBeforeTimeout, timeoutMs) {\n    super(logger);\n    this.taskToRunBeforeTimeout = taskToRunBeforeTimeout;\n    this.timeoutMs = timeoutMs;\n    this.taskName = `Timeout${this.timeoutMs}ms`;\n    taskToRunBeforeTimeout.setParent(this);\n  }\n\n  cancel() {\n    this.logger.info(`canceling timeout task ${this.name()} subtask ${this.taskToRunBeforeTimeout}`);\n    this.taskToRunBeforeTimeout.cancel();\n  }\n\n  run() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const timer = new TimeoutScheduler_1.default(this.timeoutMs);\n      timer.start(() => {\n        this.logger.info(`timeout reached for task ${this.name()}`);\n        this.taskToRunBeforeTimeout.cancel();\n      });\n\n      try {\n        yield this.taskToRunBeforeTimeout.run();\n      } finally {\n        timer.stop();\n      }\n\n      this.logger.info(`timeout task ${this.name()} completed`);\n    });\n  }\n\n}\n\nexports.default = TimeoutTask;","map":{"version":3,"mappings":"cAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;AACA;AAGA;;;;;;AAIA,MAAqBA,WAArB,SAAyCC,kBAAzC,CAAiD;EAG/CC,YAAYC,MAAZ,EAAoCC,sBAApC,EAA0EC,SAA1E,EAA2F;IACzF,MAAMF,MAAN;IADkC;IAAsC;IAExE,KAAKG,QAAL,GAAgB,UAAU,KAAKD,SAAS,IAAxC;IACAD,sBAAsB,CAACG,SAAvB,CAAiC,IAAjC;EACD;;EAEDC,MAAM;IACJ,KAAKL,MAAL,CAAYM,IAAZ,CACE,0BAA0B,KAAKC,IAAL,EAAW,YAAY,KAAKN,sBAAsB,EAD9E;IAGA,KAAKA,sBAAL,CAA4BI,MAA5B;EACD;;EAEKG,GAAG;;MACP,MAAMC,KAAK,GAAG,IAAIC,0BAAJ,CAAqB,KAAKR,SAA1B,CAAd;MACAO,KAAK,CAACE,KAAN,CAAY,MAAK;QACf,KAAKX,MAAL,CAAYM,IAAZ,CAAiB,4BAA4B,KAAKC,IAAL,EAAW,EAAxD;QACA,KAAKN,sBAAL,CAA4BI,MAA5B;MACD,CAHD;;MAIA,IAAI;QACF,MAAM,KAAKJ,sBAAL,CAA4BO,GAA5B,EAAN;MACD,CAFD,SAEU;QACRC,KAAK,CAACG,IAAN;MACD;;MACD,KAAKZ,MAAL,CAAYM,IAAZ,CAAiB,gBAAgB,KAAKC,IAAL,EAAW,YAA5C;IACD;EAAA;;AA5B8C;;AAAjDM","names":["TimeoutTask","BaseTask_1","constructor","logger","taskToRunBeforeTimeout","timeoutMs","taskName","setParent","cancel","info","name","run","timer","TimeoutScheduler_1","start","stop","exports"],"sourceRoot":"","sources":["../../src/task/TimeoutTask.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}