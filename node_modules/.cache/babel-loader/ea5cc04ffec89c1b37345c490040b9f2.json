{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\n\nconst DefaultMediaDeviceFactory_1 = require(\"../mediadevicefactory/DefaultMediaDeviceFactory\");\n\nconst AsyncScheduler_1 = require(\"../scheduler/AsyncScheduler\");\n\nconst IntervalScheduler_1 = require(\"../scheduler/IntervalScheduler\");\n\nconst Types_1 = require(\"../utils/Types\");\n\nconst DefaultVideoTile_1 = require(\"../videotile/DefaultVideoTile\");\n\nconst AudioTransformDevice_1 = require(\"./AudioTransformDevice\");\n\nconst DeviceSelection_1 = require(\"./DeviceSelection\");\n\nconst GetUserMediaError_1 = require(\"./GetUserMediaError\");\n\nconst NotFoundError_1 = require(\"./NotFoundError\");\n\nconst NotReadableError_1 = require(\"./NotReadableError\");\n\nconst OverconstrainedError_1 = require(\"./OverconstrainedError\");\n\nconst PermissionDeniedError_1 = require(\"./PermissionDeniedError\");\n\nconst TypeError_1 = require(\"./TypeError\");\n\nconst VideoQualitySettings_1 = require(\"./VideoQualitySettings\");\n\nconst VideoTransformDevice_1 = require(\"./VideoTransformDevice\");\n\nfunction fillSMPTEColorBars(canvas, xShift) {\n  const w = canvas.width;\n  const h = canvas.height;\n  const h1 = h * 2 / 3;\n  const h2 = h * 3 / 4;\n  const h3 = h;\n  const top = ['#c0c0c0', '#c0c000', '#00c0c0', '#00c000', '#c000c0', '#c00000', '#0000c0'];\n  const middle = ['#0000c0', '#000000', '#c000c0', '#000000', '#00c0c0', '#000000', '#c0c0c0'];\n  const bottom = ['#00214c', '#ffffff', '#32006a', '#131313', '#090909', '#131313', '#1d1d1d', '#131313'];\n  const bottomX = [w * 0, w * 1 / 4 * (5 / 7), w * 2 / 4 * (5 / 7), w * 3 / 4 * (5 / 7), w * (5 / 7), w * (5 / 7 + 1 / 21), w * (5 / 7 + 2 / 21), w * (6 / 7), w * 1];\n  const segmentWidth = w / top.length;\n  const ctx = canvas.getContext('2d');\n\n  for (let i = 0; i < top.length; i++) {\n    ctx.fillStyle = top[i];\n    ctx.fillRect(xShift + i * segmentWidth, 0, segmentWidth, h1);\n    ctx.fillStyle = middle[i];\n    ctx.fillRect(xShift + i * segmentWidth, h1, segmentWidth, h2 - h1);\n  }\n\n  for (let i = 0; i < bottom.length; i++) {\n    ctx.fillStyle = bottom[i];\n    ctx.fillRect(xShift + bottomX[i], h2, bottomX[i + 1] - bottomX[i], h3 - h2);\n  }\n} // This is a top-level function so that its captured environment is as small as possible,\n// minimizing leaks -- the interval scheduler will cause everything here to be retained\n// until it is stopped.\n\n\nfunction makeColorBars(canvas, colorOrPattern) {\n  const scheduler = new IntervalScheduler_1.default(1000);\n  const context = canvas.getContext('2d'); // @ts-ignore\n\n  const stream = canvas.captureStream(5) || null;\n\n  if (!stream) {\n    return undefined;\n  }\n\n  const onTick = () => {\n    if (colorOrPattern === 'smpte') {\n      fillSMPTEColorBars(canvas, 0);\n    } else {\n      context.fillStyle = colorOrPattern;\n      context.fillRect(0, 0, canvas.width, canvas.height);\n    }\n  };\n\n  scheduler.start(onTick);\n\n  const listener = () => {\n    scheduler.stop();\n  }; // This event listener will leak unless you remove it.\n\n\n  stream.getVideoTracks()[0].addEventListener('ended', listener);\n  return {\n    listener,\n    scheduler,\n    stream\n  };\n}\n\nclass DefaultDeviceController {\n  constructor(logger, options) {\n    let browserBehavior = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new DefaultBrowserBehavior_1.default();\n    this.logger = logger;\n    this.browserBehavior = browserBehavior;\n    this.deviceInfoCache = null;\n    this.activeDevices = {\n      audio: null,\n      video: null\n    }; // `chosenVideoTransformDevice` is tracked and owned by device controller.\n    // It is saved when `chooseVideoInputDevice` is called with VideoTransformDevice object.\n\n    this.chosenVideoTransformDevice = null;\n    this.audioOutputDeviceId = null;\n    this.deviceChangeObservers = new Set();\n\n    this.deviceLabelTrigger = () => {\n      return navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: true\n      });\n    };\n\n    this.audioInputDestinationNode = null;\n    this.audioInputSourceNode = null;\n    this.videoInputQualitySettings = null;\n    this.useWebAudio = false;\n    this.inputDeviceCount = 0; // This handles the dispatch of `mute` and `unmute` events from audio tracks.\n    // There's a bit of a semantic mismatch here if input streams allow individual component tracks to be muted,\n    // but addressing that gap is not feasible in our stream-oriented world.\n\n    this.mediaStreamMuteObserver = (id, muted) => {\n      for (const observer of this.deviceChangeObservers) {\n        AsyncScheduler_1.default.nextTick(() => {\n          /* istanbul ignore else */\n          if (this.deviceChangeObservers.has(observer) && observer.audioInputMuteStateChanged) {\n            observer.audioInputMuteStateChanged(id, muted);\n          }\n        });\n      }\n    };\n\n    this.alreadyHandlingDeviceChange = false;\n    const {\n      enableWebAudio = false\n    } = options || {};\n    this.useWebAudio = enableWebAudio;\n\n    this.muteCallback = muted => {\n      var _a;\n\n      (_a = this.transform) === null || _a === void 0 ? void 0 : _a.device.mute(muted);\n    };\n\n    this.videoInputQualitySettings = new VideoQualitySettings_1.default(DefaultDeviceController.defaultVideoWidth, DefaultDeviceController.defaultVideoHeight, DefaultDeviceController.defaultVideoFrameRate, DefaultDeviceController.defaultVideoMaxBandwidthKbps);\n    const dimension = this.browserBehavior.requiresResolutionAlignment(this.videoInputQualitySettings.videoWidth, this.videoInputQualitySettings.videoHeight);\n    this.videoInputQualitySettings.videoWidth = dimension[0];\n    this.videoInputQualitySettings.videoHeight = dimension[1];\n    this.logger.info(`DefaultDeviceController video dimension ${this.videoInputQualitySettings.videoWidth} x ${this.videoInputQualitySettings.videoHeight}`);\n\n    try {\n      this.mediaDeviceWrapper = new DefaultMediaDeviceFactory_1.default().create();\n      const supportedConstraints = navigator.mediaDevices.getSupportedConstraints();\n      this.logger.info(`Supported Constraints in this browser ${JSON.stringify(supportedConstraints)}`);\n    } catch (error) {\n      logger.error(error.message);\n    }\n  }\n\n  isWatchingForDeviceChanges() {\n    return !!this.onDeviceChangeCallback;\n  }\n\n  ensureWatchingDeviceChanges() {\n    var _a;\n\n    if (this.isWatchingForDeviceChanges()) {\n      return;\n    }\n\n    this.logger.info('Starting devicechange listener.');\n\n    this.onDeviceChangeCallback = () => {\n      this.logger.info('Device change event callback is triggered');\n      this.handleDeviceChange();\n    };\n\n    (_a = this.mediaDeviceWrapper) === null || _a === void 0 ? void 0 : _a.addEventListener('devicechange', this.onDeviceChangeCallback);\n  }\n  /**\n   * Unsubscribe from the `devicechange` event, which allows the device controller to\n   * update its device cache.\n   */\n\n\n  stopWatchingDeviceChanges() {\n    var _a;\n\n    if (!this.isWatchingForDeviceChanges()) {\n      return;\n    }\n\n    this.logger.info('Stopping devicechange listener.');\n    (_a = this.mediaDeviceWrapper) === null || _a === void 0 ? void 0 : _a.removeEventListener('devicechange', this.onDeviceChangeCallback);\n    this.onDeviceChangeCallback = undefined;\n  }\n\n  shouldObserveDeviceChanges() {\n    if (this.deviceChangeObservers.size) {\n      return true;\n    }\n\n    const hasActiveDevices = this.activeDevices['audio'] && this.activeDevices['audio'].constraints !== null || this.activeDevices['video'] && this.activeDevices['video'].constraints !== null || !!this.audioOutputDeviceId;\n    return hasActiveDevices;\n  }\n\n  watchForDeviceChangesIfNecessary() {\n    if (this.shouldObserveDeviceChanges()) {\n      this.ensureWatchingDeviceChanges();\n    } else {\n      this.stopWatchingDeviceChanges();\n    }\n  }\n\n  destroy() {\n    var _a, _b;\n\n    return __awaiter(this, void 0, void 0, function* () {\n      // Remove device change callbacks.\n      this.stopWatchingDeviceChanges(); // Deselect any audio input devices and throw away the streams.\n      // Discard the current video device, if there is one.\n      // Discard any audio or video transforms.\n\n      yield this.chooseAudioInputDevice(null);\n      yield this.chooseVideoInputDevice(null); // Tear down any Web Audio infrastructure we have hanging around.\n\n      (_a = this.audioInputSourceNode) === null || _a === void 0 ? void 0 : _a.disconnect();\n      (_b = this.audioInputDestinationNode) === null || _b === void 0 ? void 0 : _b.disconnect();\n      this.audioInputSourceNode = undefined;\n      this.audioInputDestinationNode = undefined;\n    });\n  }\n\n  listAudioInputDevices() {\n    let forceUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return __awaiter(this, void 0, void 0, function* () {\n      const result = yield this.listDevicesOfKind('audioinput', forceUpdate);\n      this.trace('listAudioInputDevices', forceUpdate, result);\n      return result;\n    });\n  }\n\n  listVideoInputDevices() {\n    let forceUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return __awaiter(this, void 0, void 0, function* () {\n      const result = yield this.listDevicesOfKind('videoinput', forceUpdate);\n      this.trace('listVideoInputDevices', forceUpdate, result);\n      return result;\n    });\n  }\n\n  listAudioOutputDevices() {\n    let forceUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return __awaiter(this, void 0, void 0, function* () {\n      const result = yield this.listDevicesOfKind('audiooutput', forceUpdate);\n      this.trace('listAudioOutputDevices', forceUpdate, result);\n      return result;\n    });\n  }\n\n  pushAudioMeetingStateForPermissions(device) {\n    var _a, _b;\n\n    (_b = (_a = this.boundAudioVideoController) === null || _a === void 0 ? void 0 : _a.eventController) === null || _b === void 0 ? void 0 : _b.publishEvent(device === null ? 'audioInputUnselected' : 'audioInputSelected');\n  }\n\n  pushVideoMeetingStateForPermissions(device) {\n    var _a, _b;\n\n    (_b = (_a = this.boundAudioVideoController) === null || _a === void 0 ? void 0 : _a.eventController) === null || _b === void 0 ? void 0 : _b.publishEvent(device === null ? 'videoInputUnselected' : 'videoInputSelected');\n  }\n\n  chooseAudioInputDevice(device) {\n    var _a, _b;\n\n    return __awaiter(this, void 0, void 0, function* () {\n      if (device === undefined) {\n        this.logger.error('Audio input device cannot be undefined');\n        return;\n      }\n      /*\n       * This block of code is a workaround for a Chromium bug:\n       * https://bugs.chromium.org/p/chromium/issues/detail?id=1173656\n       *\n       * In short: if we are about to select an audio device with a transform, which we assume for\n       * safety's sake uses AudioWorklet, we recreate the audio context and the nodes that\n       * are linked to it.\n       *\n       * This causes Chrome to rejig its buffers and the second context works correctly.\n       *\n       * This is theoretically worse for performance, but in practice it is fine.\n       *\n       * This is not safe in the general case: an application that already\n       * retrieved the audio context in order to build an audio graph for some other purpose\n       * will fail at this point as we pull the context out from under it.\n       *\n       * An application that always uses the supplied context in an\n       * `AudioTransformDevice.createAudioNode` call should work correctly.\n       *\n       * If you are confident that your application does not use AudioWorklet, does not run in\n       * an un-fixed Chromium version, or will never be used with sample-rate-switching Bluetooth\n       * devices, you can disable this workaround by suppling a custom {@link ExtendedBrowserBehavior}\n       * when you create your device controller.\n       *\n       * We can't tell in advance whether we need to give the device a different audio context,\n       * because checking whether the resulting node is an AudioWorkletNode needs it to have been\n       * created first.\n       */\n      // Ideally we would only do this work if we knew the device was going to change.\n      // By definition, this is only needed for Web Audio.\n\n\n      let recreateAudioContext = this.useWebAudio;\n\n      if (!this.useWebAudio) {\n        this.logger.debug('Not using Web Audio. No need to recreate audio context.');\n      } // We have a suspended audio context. There's nothing we can do, and there's\n      // certainly no point in recreating it. Choosing the transform device will try to resume.\n\n\n      if (((_a = DefaultDeviceController.audioContext) === null || _a === void 0 ? void 0 : _a.state) === 'suspended') {\n        recreateAudioContext = false;\n      } // Only Chrome needs this fix.\n\n\n      if (recreateAudioContext && !this.browserBehavior.requiresContextRecreationForAudioWorklet()) {\n        this.logger.debug('Browser does not require audio context recreation hack.');\n        recreateAudioContext = false;\n      } // Only need to do this if either device has an audio worklet.\n\n\n      if (recreateAudioContext && !this.transform && AudioTransformDevice_1.isAudioTransformDevice(device)) {\n        this.logger.debug('Neither device is a transform. No need to recreate audio context.');\n        recreateAudioContext = false;\n      }\n\n      if (recreateAudioContext) {\n        this.logger.info('Recreating audio context when selecting new device.');\n        /* istanbul ignore else */\n\n        if (this.transform) {\n          /* istanbul ignore else */\n          if (this.transform.nodes) {\n            this.transform.nodes.end.disconnect();\n            this.transform.nodes = undefined;\n          }\n\n          this.transform = undefined;\n        }\n        /* istanbul ignore else */\n\n\n        if (this.audioInputSourceNode) {\n          this.audioInputSourceNode.disconnect();\n          this.audioInputSourceNode = undefined;\n        }\n        /* istanbul ignore else */\n\n\n        if (this.audioInputDestinationNode) {\n          this.audioInputDestinationNode.disconnect();\n          this.audioInputDestinationNode = undefined;\n        }\n\n        DefaultDeviceController.closeAudioContext();\n      }\n\n      if (AudioTransformDevice_1.isAudioTransformDevice(device)) {\n        // N.B., do not JSON.stringify here — for some kinds of devices this\n        // will cause a cyclic object reference error.\n        this.logger.info(`Choosing transform input device ${device}`);\n        yield this.chooseAudioTransformInputDevice(device);\n      } else {\n        this.logger.info(`Choosing intrinsic audio input device ${device}`);\n        this.removeTransform();\n        yield this.chooseInputIntrinsicDevice('audio', device, false);\n        this.trace('chooseAudioInputDevice', device, `success`);\n      } // Only recreate if there's a peer connection, otherwise `restartLocalAudio` will throw.\n      // This hack is off by default, so tests don't cover it. We can remove this skip soon.\n\n      /* istanbul ignore next */\n\n\n      if (recreateAudioContext && ((_b = this.boundAudioVideoController) === null || _b === void 0 ? void 0 : _b.rtcPeerConnection)) {\n        this.boundAudioVideoController.restartLocalAudio(() => {\n          this.logger.info('Local audio restarted.');\n        });\n      }\n\n      this.pushAudioMeetingStateForPermissions(device);\n    });\n  }\n\n  chooseAudioTransformInputDevice(device) {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, function* () {\n      if (((_a = this.transform) === null || _a === void 0 ? void 0 : _a.device) === device) {\n        return;\n      }\n\n      if (!this.useWebAudio) {\n        throw new Error('Cannot apply transform device without enabling Web Audio.');\n      }\n\n      const context = DefaultDeviceController.getAudioContext();\n\n      if (context instanceof OfflineAudioContext) {// Nothing to do.\n      } else {\n        switch (context.state) {\n          case 'running':\n            // Nothing to do.\n            break;\n\n          case 'closed':\n            // A closed context cannot be used for creating nodes, so the correct\n            // thing to do is to raise a descriptive error sooner.\n            throw new Error('Cannot choose a transform device with a closed audio context.');\n\n          case 'suspended':\n            // A context might be suspended after page load. We try to resume it\n            // here, otherwise audio won't work.\n            yield context.resume();\n        }\n      }\n\n      let nodes;\n\n      try {\n        nodes = yield device.createAudioNode(context);\n      } catch (e) {\n        this.logger.error(`Unable to create transform device node: ${e}.`);\n        throw e;\n      } // Pick the plain ol' inner device as the source. It will be\n      // connected to the node.\n\n\n      const inner = yield device.intrinsicDevice();\n      yield this.chooseInputIntrinsicDevice('audio', inner, false);\n      this.logger.debug(`Got inner stream: ${inner}.`); // Otherwise, continue: hook up the new node.\n\n      this.setTransform(device, nodes);\n    });\n  }\n\n  chooseVideoTransformInputDevice(device) {\n    var _a, _b;\n\n    return __awaiter(this, void 0, void 0, function* () {\n      if (device === this.chosenVideoTransformDevice) {\n        this.logger.info('Reselecting same VideoTransformDevice');\n        return;\n      }\n\n      const prevVideoTransformDevice = this.chosenVideoTransformDevice;\n\n      if (prevVideoTransformDevice) {\n        this.logger.info('Switched from previous VideoTransformDevice');\n      }\n\n      const wasUsingTransformDevice = !!prevVideoTransformDevice;\n      const inner = yield device.intrinsicDevice();\n      const canReuseMediaStream = this.isMediaStreamReusableByDeviceId((_a = this.activeDevices['video']) === null || _a === void 0 ? void 0 : _a.stream, inner);\n\n      if (!canReuseMediaStream) {\n        this.logger.info('video transform device needs new intrinsic device');\n\n        if (wasUsingTransformDevice) {\n          // detach input media stream - turn off the camera or leave it be if inner is media stream\n          prevVideoTransformDevice.onOutputStreamDisconnect();\n        }\n\n        this.chosenVideoTransformDevice = device; // VideoTransformDevice owns input MediaStream\n\n        this.activeDevices['video'] = null;\n        yield this.chooseInputIntrinsicDevice('video', inner, false, true);\n        return;\n      } // When saved stream is reusable, only switch the saved stream to filtered stream for sending\n      // but keep the saved stream intact.\n      // Note: to keep the chosen media stream intact, it is important to avoid a full stop\n      // because videoTileUpdate can be called when video is stopped and user might call `bindVideoElement` to disconnect the element.\n      // In current implementation, disconnecting the element will `hard` stop the media stream.\n      // Update device and stream\n\n\n      this.chosenVideoTransformDevice = device;\n      const newMediaStream = this.activeDevices['video'].stream;\n      this.logger.info('video transform device uses previous stream'); // Input is not a MediaStream. Update constraints\n\n      if (!inner.id) {\n        const constraint = inner;\n        constraint.width = constraint.width || this.videoInputQualitySettings.videoWidth;\n        constraint.height = constraint.height || this.videoInputQualitySettings.videoHeight;\n        constraint.frameRate = constraint.frameRate || this.videoInputQualitySettings.videoFrameRate;\n        yield newMediaStream.getVideoTracks()[0].applyConstraints(constraint);\n      } // `transformStream` will start processing.\n\n\n      yield device.transformStream(this.activeDevices['video'].stream); // Replace video to send\n\n      if ((_b = this.boundAudioVideoController) === null || _b === void 0 ? void 0 : _b.videoTileController.hasStartedLocalVideoTile()) {\n        if (this.boundAudioVideoController.replaceLocalVideo) {\n          this.restartLocalVideoAfterSelection(false, true);\n        } else {\n          // Non-optimal path for backwards compatibility with self implemented controller which will require renegotiation\n          yield this.boundAudioVideoController.update({\n            needsRenegotiation: true\n          });\n        }\n      }\n    });\n  }\n\n  chooseVideoInputDevice(device) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (device === undefined) {\n        this.logger.error('Video input device cannot be undefined');\n        return;\n      }\n\n      if (VideoTransformDevice_1.isVideoTransformDevice(device)) {\n        this.logger.info(`Choosing video transform device ${device}`);\n        return this.chooseVideoTransformInputDevice(device);\n      }\n\n      this.updateMaxBandwidthKbps(); // handle direct switching from VideoTransformDevice to Device\n      // From WebRTC point, it is a device switching.\n\n      if (this.chosenVideoInputIsTransformDevice()) {\n        // disconnect old stream\n        this.chosenVideoTransformDevice.onOutputStreamDisconnect();\n        this.chosenVideoTransformDevice = null;\n      }\n\n      yield this.chooseInputIntrinsicDevice('video', device, false);\n      this.trace('chooseVideoInputDevice', device);\n      this.pushVideoMeetingStateForPermissions(device);\n    });\n  }\n\n  chooseAudioOutputDevice(deviceId) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.audioOutputDeviceId = deviceId;\n      this.watchForDeviceChangesIfNecessary();\n      yield this.bindAudioOutput();\n      this.trace('chooseAudioOutputDevice', deviceId, null);\n      return;\n    });\n  }\n\n  addDeviceChangeObserver(observer) {\n    this.logger.info('adding device change observer');\n    this.deviceChangeObservers.add(observer);\n    this.watchForDeviceChangesIfNecessary();\n    this.trace('addDeviceChangeObserver');\n  }\n\n  removeDeviceChangeObserver(observer) {\n    this.logger.info('removing device change observer');\n    this.deviceChangeObservers.delete(observer);\n    this.watchForDeviceChangesIfNecessary();\n    this.trace('removeDeviceChangeObserver');\n  }\n\n  createAnalyserNodeForAudioInput() {\n    var _a, _b;\n\n    if (!this.activeDevices['audio']) {\n      return null;\n    } // If there is a WebAudio node in the graph, we use that as the source instead of the stream.\n\n\n    const node = (_b = (_a = this.transform) === null || _a === void 0 ? void 0 : _a.nodes) === null || _b === void 0 ? void 0 : _b.end;\n\n    if (node) {\n      const analyser = node.context.createAnalyser();\n\n      analyser.removeOriginalInputs = () => {\n        try {\n          node.disconnect(analyser);\n        } catch (e) {// This can fail in some unusual cases, but this is best-effort.\n        }\n      };\n\n      node.connect(analyser);\n      return analyser;\n    }\n\n    return this.createAnalyserNodeForRawAudioInput();\n  } //\n  // N.B., this bypasses any applied transform node.\n  //\n\n\n  createAnalyserNodeForRawAudioInput() {\n    if (!this.activeDevices['audio']) {\n      return null;\n    }\n\n    return this.createAnalyserNodeForStream(this.activeDevices['audio'].stream);\n  }\n\n  createAnalyserNodeForStream(stream) {\n    const audioContext = DefaultDeviceController.getAudioContext();\n    const analyser = audioContext.createAnalyser();\n    const source = audioContext.createMediaStreamSource(stream);\n    source.connect(analyser);\n    this.trace('createAnalyserNodeForAudioInput');\n\n    analyser.removeOriginalInputs = () => {\n      try {\n        source.disconnect(analyser);\n      } catch (e) {// This can fail in some unusual cases, but this is best-effort.\n      }\n    };\n\n    return analyser;\n  }\n\n  startVideoPreviewForVideoInput(element) {\n    if (!this.activeDevices['video']) {\n      this.logger.warn('cannot bind video preview since video input device has not been chosen');\n      this.trace('startVideoPreviewForVideoInput', element.id);\n      return;\n    }\n\n    const stream = element.srcObject; // TODO: implement MediaDestroyer to provide single release MediaStream function\n    // The video stream should be released only if the video stream in the HTML element is different from current stream.\n    // When a filter is applied the existing stream is reused and in that case the stream should not be released.\n\n    if (stream && this.activeDevices['video'].stream !== stream) {\n      this.releaseMediaStream(element.srcObject);\n      DefaultVideoTile_1.default.disconnectVideoStreamFromVideoElement(element, false);\n    }\n\n    if (this.chosenVideoTransformDevice) {\n      DefaultVideoTile_1.default.connectVideoStreamToVideoElement(this.chosenVideoTransformDevice.outputMediaStream, element, true);\n    } else {\n      DefaultVideoTile_1.default.connectVideoStreamToVideoElement(this.activeDevices['video'].stream, element, true);\n    }\n\n    this.trace('startVideoPreviewForVideoInput', element.id);\n  }\n\n  stopVideoPreviewForVideoInput(element) {\n    const stream = element.srcObject;\n    const activeVideoDevice = this.activeDevices['video']; // Safety.\n\n    /* istanbul ignore else */\n\n    if (activeVideoDevice) {\n      this.releaseActiveDevice(activeVideoDevice);\n    }\n\n    if (stream) {\n      this.releaseMediaStream(stream);\n      DefaultVideoTile_1.default.disconnectVideoStreamFromVideoElement(element, false);\n    }\n\n    this.trace('stopVideoPreviewForVideoInput', element.id);\n  }\n\n  setDeviceLabelTrigger(trigger) {\n    // Discard the cache if it was populated with unlabeled devices.\n    if (this.deviceInfoCache) {\n      for (const device of this.deviceInfoCache) {\n        if (!device.label) {\n          this.deviceInfoCache = null;\n          break;\n        }\n      }\n    }\n\n    this.deviceLabelTrigger = trigger;\n    this.trace('setDeviceLabelTrigger');\n  }\n\n  mixIntoAudioInput(stream) {\n    let node = null;\n\n    if (this.useWebAudio) {\n      node = DefaultDeviceController.getAudioContext().createMediaStreamSource(stream);\n      node.connect(this.getMediaStreamOutputNode());\n    } else {\n      this.logger.warn('WebAudio is not enabled, mixIntoAudioInput will not work');\n    }\n\n    this.trace('mixIntoAudioInput', stream.id);\n    return node;\n  }\n\n  chooseVideoInputQuality(width, height, frameRate, maxBandwidthKbps) {\n    const dimension = this.browserBehavior.requiresResolutionAlignment(width, height);\n    this.videoInputQualitySettings = new VideoQualitySettings_1.default(dimension[0], dimension[1], frameRate, maxBandwidthKbps);\n    this.updateMaxBandwidthKbps();\n  }\n\n  getVideoInputQualitySettings() {\n    return this.videoInputQualitySettings;\n  }\n\n  acquireAudioInputStream() {\n    return this.acquireInputStream('audio');\n  }\n\n  acquireVideoInputStream() {\n    return this.acquireInputStream('video');\n  }\n\n  acquireDisplayInputStream(streamConstraints) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (streamConstraints && streamConstraints.video && // @ts-ignore\n      streamConstraints.video.mandatory && // @ts-ignore\n      streamConstraints.video.mandatory.chromeMediaSource && // @ts-ignore\n      streamConstraints.video.mandatory.chromeMediaSourceId) {\n        return navigator.mediaDevices.getUserMedia(streamConstraints);\n      } // @ts-ignore https://github.com/microsoft/TypeScript/issues/31821\n\n\n      return navigator.mediaDevices.getDisplayMedia(streamConstraints);\n    });\n  }\n  /**\n   * This function helps `releaseMediaStream` do the right thing.\n   *\n   * We need to do three things:\n   *\n   * * Close the tracks of the source stream.\n   * * Remove the transform.\n   * * Clean up the _source_ stream's callback, as if `releaseMediaStream` had\n   *   been called with that stream -- that's the stream that's tracked in\n   *   `activeDevices` and needs to have its callbacks removed.\n   *\n   * This is a little fiddly because the stream broker interface doesn't\n   * know about the innards of the device controller, and only has the\n   * meeting session state's stream to work with.\n   *\n   */\n\n\n  releaseAudioTransformStream() {\n    this.logger.info('Stopping audio track for Web Audio graph');\n    this.stopTracksAndRemoveCallbacks('audio');\n    this.logger.info('Removing audio transform, if there is one.');\n    this.removeTransform(); // Remove the input and output nodes. They will be recreated later if\n    // needed.\n\n    /* istanbul ignore else */\n\n    if (this.audioInputSourceNode) {\n      this.audioInputSourceNode.disconnect();\n      this.audioInputSourceNode = undefined;\n    }\n    /* istanbul ignore else */\n\n\n    if (this.audioInputDestinationNode) {\n      this.audioInputDestinationNode.disconnect();\n      this.audioInputDestinationNode = undefined;\n    }\n  }\n\n  releaseVideoTransformStream() {\n    this.logger.info('Stopping video track for transform');\n    this.stopTracksAndRemoveCallbacks('video');\n    this.logger.info('Disconnecting video transform');\n    this.chosenVideoTransformDevice.onOutputStreamDisconnect();\n    this.chosenVideoTransformDevice = null;\n  }\n\n  stopTracksAndRemoveCallbacks(kind) {\n    const activeDevice = this.activeDevices[kind]; // Just-in-case error handling.\n\n    /* istanbul ignore if */\n\n    if (!activeDevice) {\n      return;\n    }\n    /* istanbul ignore next */\n\n\n    const endedCallback = activeDevice.endedCallback;\n    const trackMuteCallback = activeDevice.trackMuteCallback;\n    const trackUnmuteCallback = activeDevice.trackUnmuteCallback;\n\n    for (const track of activeDevice.stream.getTracks()) {\n      track.stop();\n      /* istanbul ignore else */\n\n      if (endedCallback) {\n        track.removeEventListener('ended', endedCallback);\n      }\n      /* istanbul ignore else */\n\n\n      if (trackMuteCallback) {\n        track.removeEventListener('mute', trackMuteCallback);\n      }\n      /* istanbul ignore else */\n\n\n      if (trackUnmuteCallback) {\n        track.removeEventListener('unmute', trackUnmuteCallback);\n      }\n\n      delete activeDevice.endedCallback;\n      delete activeDevice.trackMuteCallback;\n      delete activeDevice.trackUnmuteCallback;\n      delete this.activeDevices[kind];\n    }\n  }\n\n  releaseOrdinaryStream(mediaStreamToRelease) {\n    var _a;\n\n    const tracksToStop = mediaStreamToRelease.getTracks();\n\n    if (!tracksToStop.length) {\n      return;\n    }\n\n    for (const track of tracksToStop) {\n      track.stop();\n    } // This function is called from `CleanStoppedSessionTask` using the\n    // session state, which does not allow us to clean up any associated 'ended'\n    // or 'mute'/'unmute' callbacks in advance.\n    // Look here to see if we have any to clean up.\n\n\n    for (const kind in this.activeDevices) {\n      const activeDevice = this.activeDevices[kind];\n\n      if ((activeDevice === null || activeDevice === void 0 ? void 0 : activeDevice.stream) !== mediaStreamToRelease) {\n        continue;\n      }\n\n      switch (kind) {\n        case 'audio':\n          {\n            for (const track of mediaStreamToRelease.getAudioTracks()) {\n              track.removeEventListener('mute', activeDevice.trackMuteCallback);\n              track.removeEventListener('unmute', activeDevice.trackUnmuteCallback);\n              track.removeEventListener('ended', activeDevice.endedCallback);\n            }\n\n            delete activeDevice.trackMuteCallback;\n            delete activeDevice.trackUnmuteCallback;\n            delete activeDevice.endedCallback;\n            break;\n          }\n\n        case 'video':\n          {\n            const endedCallback = activeDevice.endedCallback;\n\n            if (endedCallback) {\n              for (const track of mediaStreamToRelease.getTracks()) {\n                track.removeEventListener('ended', activeDevice.endedCallback);\n              }\n\n              delete activeDevice.endedCallback;\n            }\n\n            const tileController = (_a = this.boundAudioVideoController) === null || _a === void 0 ? void 0 : _a.videoTileController;\n\n            if (tileController === null || tileController === void 0 ? void 0 : tileController.hasStartedLocalVideoTile()) {\n              tileController.stopLocalVideoTile();\n            }\n\n            break;\n          }\n      }\n\n      delete this.activeDevices[kind];\n    }\n  }\n\n  releaseMediaStream(mediaStreamToRelease) {\n    var _a, _b;\n\n    if (!mediaStreamToRelease) {\n      return;\n    }\n\n    try {\n      // This method can be called with the output of an audio transform's\n      // Web Audio graph. That graph runs from a `MediaStreamSourceNode`, through\n      // the transform (if present), to a `MediaStreamDestinationNode`, and out to\n      // WebRTC.\n      //\n      // The call teardown task will call `releaseMediaStream` with the stream it\n      // receives — the destination stream.\n      //\n      // This function detects with this comparison:\n      const isReleasingAudioDestinationStream = mediaStreamToRelease === ((_a = this.audioInputDestinationNode) === null || _a === void 0 ? void 0 : _a.stream);\n\n      if (isReleasingAudioDestinationStream) {\n        this.releaseAudioTransformStream();\n        return;\n      } // Similarly, it can be called with a video transform's output stream.\n      // As with the Web Audio case, we need to release the actual input stream to\n      // really stop it.\n\n\n      const isReleasingVideoOutputStream = mediaStreamToRelease === ((_b = this.chosenVideoTransformDevice) === null || _b === void 0 ? void 0 : _b.outputMediaStream);\n\n      if (isReleasingVideoOutputStream) {\n        this.releaseVideoTransformStream();\n        return;\n      } // Otherwise, this is one of our inputs that was plumbed straight through to\n      // WebRTC. Go ahead and release it track by track.\n\n\n      this.releaseOrdinaryStream(mediaStreamToRelease);\n    } finally {\n      this.watchForDeviceChangesIfNecessary();\n    }\n  }\n\n  chosenVideoInputIsTransformDevice() {\n    return !!this.chosenVideoTransformDevice;\n  }\n\n  bindToAudioVideoController(audioVideoController) {\n    if (this.boundAudioVideoController) {\n      this.unsubscribeFromMuteAndUnmuteLocalAudio();\n    }\n\n    this.boundAudioVideoController = audioVideoController;\n    this.subscribeToMuteAndUnmuteLocalAudio();\n\n    if (this.browserBehavior.supportsSetSinkId()) {\n      AsyncScheduler_1.default.nextTick(() => {\n        this.bindAudioOutput();\n      });\n    }\n  }\n\n  subscribeToMuteAndUnmuteLocalAudio() {\n    if (!this.boundAudioVideoController) {\n      return;\n    } // Safety that's hard to test.\n\n    /* istanbul ignore next */\n\n\n    if (!this.boundAudioVideoController.realtimeController) {\n      return;\n    }\n\n    this.boundAudioVideoController.realtimeController.realtimeSubscribeToMuteAndUnmuteLocalAudio(this.muteCallback);\n  }\n\n  unsubscribeFromMuteAndUnmuteLocalAudio() {\n    // Safety that's hard to test.\n\n    /* istanbul ignore next */\n    if (!this.boundAudioVideoController.realtimeController) {\n      return;\n    }\n\n    this.boundAudioVideoController.realtimeController.realtimeUnsubscribeToMuteAndUnmuteLocalAudio(this.muteCallback);\n  }\n\n  static getIntrinsicDeviceId(device) {\n    if (device === undefined) {\n      return undefined;\n    }\n\n    if (device === null) {\n      return null;\n    }\n\n    if (typeof device === 'string') {\n      return device;\n    }\n\n    if (device.id) {\n      return device.id;\n    }\n\n    const constraints = device;\n    const deviceIdConstraints = constraints.deviceId;\n\n    if (deviceIdConstraints === undefined) {\n      return undefined;\n    }\n\n    if (deviceIdConstraints === null) {\n      return null;\n    }\n\n    if (typeof deviceIdConstraints === 'string' || Array.isArray(deviceIdConstraints)) {\n      return deviceIdConstraints;\n    }\n\n    const constraintStringParams = deviceIdConstraints;\n\n    if (typeof constraintStringParams.exact === 'string' || Array.isArray(constraintStringParams.exact)) {\n      return constraintStringParams.exact;\n    }\n\n    return undefined;\n  }\n\n  static createEmptyAudioDevice() {\n    return DefaultDeviceController.synthesizeAudioDevice(0);\n  }\n\n  static createEmptyVideoDevice() {\n    return DefaultDeviceController.synthesizeVideoDevice('black');\n  }\n\n  static synthesizeAudioDevice(toneHz) {\n    const audioContext = DefaultDeviceController.getAudioContext();\n    const outputNode = audioContext.createMediaStreamDestination();\n\n    if (!toneHz) {\n      const source = audioContext.createBufferSource(); // The AudioContext object uses the sample rate of the default output device\n      // if not specified. Creating an AudioBuffer object with the output device's\n      // sample rate fails in some browsers, e.g. Safari with a Bluetooth headphone.\n\n      try {\n        source.buffer = audioContext.createBuffer(1, audioContext.sampleRate * 5, audioContext.sampleRate);\n      } catch (error) {\n        if (error && error.name === 'NotSupportedError') {\n          source.buffer = audioContext.createBuffer(1, DefaultDeviceController.defaultSampleRate * 5, DefaultDeviceController.defaultSampleRate);\n        } else {\n          throw error;\n        }\n      } // Some browsers will not play audio out the MediaStreamDestination\n      // unless there is actually audio to play, so we add a small amount of\n      // noise here to ensure that audio is played out.\n\n\n      source.buffer.getChannelData(0)[0] = 0.0003;\n      source.loop = true;\n      source.connect(outputNode);\n      source.start();\n    } else {\n      const gainNode = audioContext.createGain();\n      gainNode.gain.value = 0.1;\n      gainNode.connect(outputNode);\n      const oscillatorNode = audioContext.createOscillator();\n      oscillatorNode.frequency.value = toneHz;\n      oscillatorNode.connect(gainNode);\n      oscillatorNode.start();\n    }\n\n    return outputNode.stream;\n  }\n\n  static synthesizeVideoDevice(colorOrPattern) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 480;\n    canvas.height = canvas.width / 16 * 9;\n    const colorBars = makeColorBars(canvas, colorOrPattern);\n\n    if (!colorBars) {\n      return null;\n    } // `scheduler` and `listener` will leak.\n\n\n    const {\n      stream\n    } = colorBars;\n    return stream;\n  }\n\n  updateMaxBandwidthKbps() {\n    if (this.boundAudioVideoController) {\n      this.boundAudioVideoController.setVideoMaxBandwidthKbps(this.videoInputQualitySettings.videoMaxBandwidthKbps);\n    }\n  }\n\n  listDevicesOfKind(deviceKind, forceUpdate) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (forceUpdate || this.deviceInfoCache === null || !this.isWatchingForDeviceChanges()) {\n        yield this.updateDeviceInfoCacheFromBrowser();\n      }\n\n      return this.listCachedDevicesOfKind(deviceKind);\n    });\n  }\n\n  updateDeviceInfoCacheFromBrowser() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const doesNotHaveAccessToMediaDevices = typeof MediaDeviceInfo === 'undefined';\n\n      if (doesNotHaveAccessToMediaDevices) {\n        this.deviceInfoCache = [];\n        return;\n      }\n\n      let devices = yield navigator.mediaDevices.enumerateDevices();\n      let hasDeviceLabels = true;\n\n      for (const device of devices) {\n        if (!device.label) {\n          hasDeviceLabels = false;\n          break;\n        }\n      }\n\n      if (!hasDeviceLabels) {\n        try {\n          this.logger.info('attempting to trigger media device labels since they are hidden');\n          const triggerStream = yield this.deviceLabelTrigger();\n          devices = yield navigator.mediaDevices.enumerateDevices();\n\n          for (const track of triggerStream.getTracks()) {\n            track.stop();\n          }\n        } catch (err) {\n          this.logger.info('unable to get media device labels');\n        }\n      }\n\n      this.logger.debug(`Update device info cache with devices: ${JSON.stringify(devices)}`);\n      this.deviceInfoCache = devices;\n    });\n  }\n\n  listCachedDevicesOfKind(deviceKind) {\n    const devicesOfKind = [];\n\n    for (const device of this.deviceInfoCache) {\n      if (device.kind === deviceKind) {\n        devicesOfKind.push(device);\n      }\n    }\n\n    return devicesOfKind;\n  }\n\n  handleDeviceChange() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.deviceInfoCache === null) {\n        return;\n      }\n\n      if (this.alreadyHandlingDeviceChange) {\n        AsyncScheduler_1.default.nextTick(() => {\n          this.handleDeviceChange();\n        });\n        return;\n      }\n\n      this.alreadyHandlingDeviceChange = true;\n      const oldAudioInputDevices = this.listCachedDevicesOfKind('audioinput');\n      const oldVideoInputDevices = this.listCachedDevicesOfKind('videoinput');\n      const oldAudioOutputDevices = this.listCachedDevicesOfKind('audiooutput');\n      yield this.updateDeviceInfoCacheFromBrowser();\n      const newAudioInputDevices = this.listCachedDevicesOfKind('audioinput');\n      const newVideoInputDevices = this.listCachedDevicesOfKind('videoinput');\n      const newAudioOutputDevices = this.listCachedDevicesOfKind('audiooutput');\n      this.forEachObserver(observer => {\n        if (!this.areDeviceListsEqual(oldAudioInputDevices, newAudioInputDevices)) {\n          Types_1.Maybe.of(observer.audioInputsChanged).map(f => f.bind(observer)(newAudioInputDevices));\n        }\n\n        if (!this.areDeviceListsEqual(oldVideoInputDevices, newVideoInputDevices)) {\n          Types_1.Maybe.of(observer.videoInputsChanged).map(f => f.bind(observer)(newVideoInputDevices));\n        }\n\n        if (!this.areDeviceListsEqual(oldAudioOutputDevices, newAudioOutputDevices)) {\n          Types_1.Maybe.of(observer.audioOutputsChanged).map(f => f.bind(observer)(newAudioOutputDevices));\n        }\n      });\n      this.alreadyHandlingDeviceChange = false;\n    });\n  }\n\n  handleDeviceStreamEnded(kind, deviceId) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        yield this.chooseInputIntrinsicDevice(kind, null, false);\n      } catch (e) {\n        /* istanbul ignore next */\n        this.logger.error('Failed to choose null device after stream ended.');\n      }\n\n      if (kind === 'audio') {\n        this.forEachObserver(observer => {\n          Types_1.Maybe.of(observer.audioInputStreamEnded).map(f => f.bind(observer)(deviceId));\n        });\n      } else {\n        this.forEachObserver(observer => {\n          Types_1.Maybe.of(observer.videoInputStreamEnded).map(f => f.bind(observer)(deviceId));\n        });\n      }\n    });\n  }\n\n  forEachObserver(observerFunc) {\n    for (const observer of this.deviceChangeObservers) {\n      AsyncScheduler_1.default.nextTick(() => {\n        /* istanbul ignore else */\n        if (this.deviceChangeObservers.has(observer)) {\n          observerFunc(observer);\n        }\n      });\n    }\n  }\n\n  areDeviceListsEqual(a, b) {\n    return JSON.stringify(a.map(device => JSON.stringify(device)).sort()) === JSON.stringify(b.map(device => JSON.stringify(device)).sort());\n  }\n\n  intrinsicDeviceAsMediaStream(device) {\n    // @ts-ignore\n    return device && device.id ? device : null;\n  }\n\n  hasSameMediaStreamId(kind, selection, proposedConstraints) {\n    var _a, _b, _c, _d; // Checking for stream using the fake constraint created in calculateMediaStreamConstraints\n\n\n    let streamId;\n\n    if (kind === 'audio') {\n      // @ts-ignore\n      streamId = proposedConstraints === null || proposedConstraints === void 0 ? void 0 : proposedConstraints.audio.streamId;\n      /* istanbul ignore next */\n      // @ts-ignore\n\n      return !!streamId && streamId === ((_b = (_a = selection.constraints) === null || _a === void 0 ? void 0 : _a.audio) === null || _b === void 0 ? void 0 : _b.streamId);\n    }\n    /* istanbul ignore next */\n    // @ts-ignore\n\n\n    streamId = proposedConstraints === null || proposedConstraints === void 0 ? void 0 : proposedConstraints.video.streamId;\n    /* istanbul ignore next */\n    // @ts-ignore\n\n    return !!streamId && streamId === ((_d = (_c = selection === null || selection === void 0 ? void 0 : selection.constraints) === null || _c === void 0 ? void 0 : _c.video) === null || _d === void 0 ? void 0 : _d.streamId);\n  }\n\n  hasSameGroupId(groupId, kind, device) {\n    if (groupId === '') {\n      return true;\n    }\n\n    const deviceIds = DefaultDeviceController.getIntrinsicDeviceId(device);\n    this.logger.debug(`Checking deviceIds ${deviceIds} of type ${typeof deviceIds} with groupId ${groupId}`);\n\n    if (typeof deviceIds === 'string' && groupId === this.getGroupIdFromDeviceId(kind, deviceIds)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  getGroupIdFromDeviceId(kind, deviceId) {\n    /* istanbul ignore else */\n    if (this.deviceInfoCache !== null) {\n      const cachedDeviceInfo = this.listCachedDevicesOfKind(`${kind}input`).find(cachedDevice => cachedDevice.deviceId === deviceId);\n\n      if (cachedDeviceInfo && cachedDeviceInfo.groupId) {\n        this.logger.debug(`GroupId of deviceId ${deviceId} found in cache is ${cachedDeviceInfo.groupId}`);\n        return cachedDeviceInfo.groupId;\n      }\n    } else {\n      this.logger.error('Device cache is not populated. Please make sure to call list devices first');\n    }\n\n    this.logger.debug(`GroupId of deviceId ${deviceId} found in cache is empty`);\n    return '';\n  }\n\n  getActiveDeviceId(kind) {\n    /* istanbul ignore else */\n    if (this.activeDevices[kind] && this.activeDevices[kind].constraints) {\n      const activeDeviceMediaTrackConstraints = this.activeDevices[kind].constraints.audio || this.activeDevices[kind].constraints.video;\n      const activeDeviceConstrainDOMStringParameters = activeDeviceMediaTrackConstraints.deviceId;\n      let activeDeviceId;\n\n      if (typeof activeDeviceConstrainDOMStringParameters === 'string') {\n        activeDeviceId = activeDeviceConstrainDOMStringParameters;\n      } else {\n        activeDeviceId = activeDeviceConstrainDOMStringParameters.exact;\n      }\n\n      return activeDeviceId;\n    }\n    /* istanbul ignore next */\n\n\n    return null;\n  }\n\n  restartLocalVideoAfterSelection(fromAcquire, fromVideoTransformDevice) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!fromAcquire && this.boundAudioVideoController && this.boundAudioVideoController.videoTileController.hasStartedLocalVideoTile()) {\n        if (fromVideoTransformDevice) {\n          // similar to `useWebaudio`, either Device or VideoTransformDevice, `this.activeDevices['video']` tracks the supplied inner Device.\n          // Upon in-meeting switching to VideoTransformDevice, device controller releases old \"supplied\" stream and\n          // calls replaceLocalVideo to avoid a full stop-start update.\n          yield this.boundAudioVideoController.replaceLocalVideo();\n          this.logger.info('successfully replaced video track');\n        } else {\n          // not from VideoTransformDevice, usual behavior.\n          this.logger.info('restarting local video to switch to new device');\n          this.boundAudioVideoController.restartLocalVideo(() => {});\n        }\n      }\n    });\n  }\n\n  handleGetUserMediaError(error, errorTimeMs) {\n    if (!error) {\n      throw new GetUserMediaError_1.default(error);\n    }\n\n    switch (error.name) {\n      case 'NotReadableError':\n      case 'TrackStartError':\n        throw new NotReadableError_1.default(error);\n\n      case 'NotFoundError':\n      case 'DevicesNotFoundError':\n        throw new NotFoundError_1.default(error);\n\n      case 'NotAllowedError':\n      case 'PermissionDeniedError':\n      case 'SecurityError':\n        if (errorTimeMs && errorTimeMs < DefaultDeviceController.permissionDeniedOriginDetectionThresholdMs) {\n          throw new PermissionDeniedError_1.default(error, 'Permission denied by browser');\n        } else {\n          throw new PermissionDeniedError_1.default(error, 'Permission denied by user');\n        }\n\n      case 'OverconstrainedError':\n      case 'ConstraintNotSatisfiedError':\n        throw new OverconstrainedError_1.default(error);\n\n      case 'TypeError':\n        throw new TypeError_1.default(error);\n\n      case 'AbortError':\n      default:\n        throw new GetUserMediaError_1.default(error);\n    }\n  }\n\n  releaseActiveDevice(device) {\n    /* istanbul ignore next */\n    if (!device || !device.stream) {\n      return;\n    }\n\n    if (device.endedCallback) {\n      const track = device.stream.getTracks()[0]; // Safety.\n\n      /* istanbul ignore else */\n\n      if (track) {\n        track.removeEventListener('ended', device.endedCallback);\n      }\n    }\n\n    delete device.endedCallback;\n    this.releaseMediaStream(device.stream);\n    delete device.stream;\n  }\n  /**\n   * Check whether a device is already selected.\n   *\n   * @param kind typically 'audio' or 'video'.\n   * @param device the device about to be selected.\n   * @param selection the existing device selection of this kind.\n   * @param proposedConstraints the constraints that will be used when this device is selected.\n   * @returns whether `device` matches `selection` — that is, whether this device is already selected.\n   */\n\n\n  matchesDeviceSelection(kind, device, selection, proposedConstraints) {\n    if (selection && selection.stream.active && (this.hasSameMediaStreamId(kind, selection, proposedConstraints) || selection.groupId !== null && this.hasSameGroupId(selection.groupId, kind, device))) {\n      // TODO: this should be computed within this function.\n      this.logger.debug(`Compare current device constraint ${JSON.stringify(selection.constraints)} to proposed constraints ${JSON.stringify(proposedConstraints)}`);\n      return selection.matchesConstraints(proposedConstraints);\n    }\n\n    return false;\n  }\n\n  chooseInputIntrinsicDevice(kind, device, fromAcquire) {\n    let fromVideoTransformDevice = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n    var _a, _b, _c, _d, _e;\n\n    return __awaiter(this, void 0, void 0, function* () {\n      this.inputDeviceCount += 1;\n      const callCount = this.inputDeviceCount;\n\n      if (device === null && kind === 'video') {\n        this.lastNoVideoInputDeviceCount = this.inputDeviceCount;\n        const active = this.activeDevices[kind];\n\n        if (active) {\n          this.releaseActiveDevice(active);\n          delete this.activeDevices[kind];\n          this.watchForDeviceChangesIfNecessary();\n        }\n\n        return;\n      } // N.B.,: the input device might already have augmented constraints supplied\n      // by an `AudioTransformDevice`. `calculateMediaStreamConstraints` will respect\n      // settings supplied by the device.\n\n\n      const proposedConstraints = this.calculateMediaStreamConstraints(kind, device); // TODO: `matchesConstraints` should really return compatible/incompatible/exact --\n      // `applyConstraints` can be used to reuse the active device while changing the\n      // requested constraints.\n\n      if (this.matchesDeviceSelection(kind, device, this.activeDevices[kind], proposedConstraints)) {\n        this.logger.info(`reusing existing ${kind} input device`);\n        return;\n      }\n\n      if (this.activeDevices[kind] && this.activeDevices[kind].stream) {\n        /* istanbul ignore else */\n        if (kind === 'audio') {\n          this.releaseActiveDevice(this.activeDevices[kind]);\n        } else if (kind === 'video') {\n          this.stopTracksAndRemoveCallbacks('video');\n          delete this.activeDevices[kind];\n        }\n      }\n\n      const startTimeMs = Date.now();\n      const newDevice = new DeviceSelection_1.default();\n\n      try {\n        this.logger.info(`requesting new ${kind} device with constraint ${JSON.stringify(proposedConstraints)}`);\n        const stream = this.intrinsicDeviceAsMediaStream(device);\n\n        if (kind === 'audio' && device === null) {\n          newDevice.stream = DefaultDeviceController.createEmptyAudioDevice();\n          newDevice.constraints = null;\n        } else if (stream) {\n          this.logger.info(`using media stream ${stream.id} for ${kind} device`);\n          newDevice.stream = stream;\n          newDevice.constraints = proposedConstraints;\n        } else {\n          newDevice.stream = yield navigator.mediaDevices.getUserMedia(proposedConstraints);\n          newDevice.constraints = proposedConstraints;\n\n          if (kind === 'video' && this.lastNoVideoInputDeviceCount > callCount) {\n            this.logger.warn(`ignored to get video device for constraints ${JSON.stringify(proposedConstraints)} as no device was requested`);\n            this.releaseMediaStream(newDevice.stream);\n            return;\n          }\n\n          yield this.handleDeviceChange(); // We only monitor the first track, and use its device ID for observer notifications.\n\n          const track = newDevice.stream.getTracks()[0];\n\n          newDevice.endedCallback = () => {\n            // Hard to test, but the safety check is worthwhile.\n\n            /* istanbul ignore else */\n            if (this.activeDevices[kind] && this.activeDevices[kind].stream === newDevice.stream) {\n              this.logger.warn(`${kind} input device which was active is no longer available, resetting to null device`);\n              this.handleDeviceStreamEnded(kind, this.getActiveDeviceId(kind));\n              delete newDevice.endedCallback;\n            }\n          };\n\n          track.addEventListener('ended', newDevice.endedCallback, {\n            once: true\n          });\n        }\n\n        if (device !== null) {\n          const newDeviceId = (_a = this.getMediaTrackSettings(newDevice.stream)) === null || _a === void 0 ? void 0 : _a.deviceId;\n          newDevice.groupId = newDeviceId ? this.getGroupIdFromDeviceId(kind, newDeviceId) : '';\n        } else {\n          newDevice.groupId = '';\n        }\n\n        if (kind === 'audio') {\n          // We only monitor the first track, and use its device ID for observer notifications.\n          const track = newDevice.stream.getAudioTracks()[0];\n\n          if (track) {\n            const id = track.getSettings().deviceId || newDevice.stream;\n\n            newDevice.trackMuteCallback = () => {\n              this.mediaStreamMuteObserver(id, true);\n            };\n\n            newDevice.trackUnmuteCallback = () => {\n              this.mediaStreamMuteObserver(id, false);\n            };\n\n            track.addEventListener('mute', newDevice.trackMuteCallback, {\n              once: false\n            });\n            track.addEventListener('unmute', newDevice.trackUnmuteCallback, {\n              once: false\n            });\n          }\n        }\n      } catch (error) {\n        let errorMessage;\n\n        if ((error === null || error === void 0 ? void 0 : error.name) && error.message) {\n          errorMessage = `${error.name}: ${error.message}`;\n        } else if (error === null || error === void 0 ? void 0 : error.name) {\n          errorMessage = error.name;\n        } else if (error === null || error === void 0 ? void 0 : error.message) {\n          errorMessage = error.message;\n        } else {\n          errorMessage = 'UnknownError';\n        }\n\n        if (kind === 'audio') {\n          (_c = (_b = this.boundAudioVideoController) === null || _b === void 0 ? void 0 : _b.eventController) === null || _c === void 0 ? void 0 : _c.publishEvent('audioInputFailed', {\n            audioInputErrorMessage: errorMessage\n          });\n        } else {\n          (_e = (_d = this.boundAudioVideoController) === null || _d === void 0 ? void 0 : _d.eventController) === null || _e === void 0 ? void 0 : _e.publishEvent('videoInputFailed', {\n            videoInputErrorMessage: errorMessage\n          });\n        }\n\n        this.logger.error(`failed to get ${kind} device for constraints ${JSON.stringify(proposedConstraints)}: ${errorMessage}`); // This is effectively `error instanceof OverconstrainedError` but works in Node.\n\n        if (error && 'constraint' in error) {\n          this.logger.error(`Over-constrained by constraint: ${error.constraint}`);\n        }\n        /*\n         * If there is any error while acquiring the audio device, we fall back to null device.\n         * Reason: If device selection fails (e.g. NotReadableError), the peer connection is left hanging\n         * with no active audio track since we release the previously attached track.\n         * If no audio packet has yet been sent to the server, the server will not emit the joined event.\n         */\n\n\n        if (kind === 'audio') {\n          this.logger.info(`choosing null ${kind} device instead`);\n\n          try {\n            newDevice.stream = DefaultDeviceController.createEmptyAudioDevice();\n            newDevice.constraints = null;\n            yield this.handleNewInputDevice(kind, newDevice, fromAcquire);\n          } catch (error) {\n            this.logger.error(`failed to choose null ${kind} device. ${error.name}: ${error.message}`);\n          }\n        }\n\n        this.handleGetUserMediaError(error, Date.now() - startTimeMs);\n      } finally {\n        this.watchForDeviceChangesIfNecessary();\n      }\n\n      this.logger.info(`got ${kind} device for constraints ${JSON.stringify(proposedConstraints)}`);\n      yield this.handleNewInputDevice(kind, newDevice, fromAcquire, fromVideoTransformDevice); // Notify the device mute state immediately after selection.\n\n      if (kind === 'audio') {\n        this.logger.debug('Notifying mute state after selection');\n\n        for (const track of newDevice.stream.getAudioTracks()) {\n          if (track.muted) {\n            newDevice.trackMuteCallback();\n          } else {\n            newDevice.trackUnmuteCallback();\n          }\n        }\n      }\n\n      return;\n    });\n  }\n\n  handleNewInputDevice(kind, newDevice, fromAcquire) {\n    let fromVideoTransformDevice = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    return __awaiter(this, void 0, void 0, function* () {\n      this.activeDevices[kind] = newDevice;\n      this.logger.debug(`Set activeDevice to ${JSON.stringify(newDevice)}`);\n      this.watchForDeviceChangesIfNecessary();\n\n      if (kind === 'video') {\n        // attempts to mirror `this.useWebAudio`. The difference is that audio destination stream stays the same\n        // but video sending needs to switch streams.\n        if (this.chosenVideoInputIsTransformDevice()) {\n          this.logger.info('apply processors to transform');\n          yield this.chosenVideoTransformDevice.transformStream(this.activeDevices['video'].stream);\n        }\n\n        yield this.restartLocalVideoAfterSelection(fromAcquire, fromVideoTransformDevice);\n      } else {\n        if (this.useWebAudio) {\n          this.attachAudioInputStreamToAudioContext(this.activeDevices[kind].stream);\n        } else if (this.boundAudioVideoController) {\n          try {\n            yield this.boundAudioVideoController.restartLocalAudio(() => {});\n          } catch (error) {\n            this.logger.info(`cannot replace audio track due to: ${error.message}`);\n          }\n        } else {\n          this.logger.info('no audio-video controller is bound to the device controller');\n        }\n      }\n    });\n  }\n\n  bindAudioOutput() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.boundAudioVideoController) {\n        return;\n      }\n\n      const deviceInfo = this.deviceInfoFromDeviceId('audiooutput', this.audioOutputDeviceId);\n      yield this.boundAudioVideoController.audioMixController.bindAudioDevice(deviceInfo);\n    });\n  }\n\n  calculateMediaStreamConstraints(kind, device) {\n    let trackConstraints = {};\n\n    if (device === '') {\n      device = null;\n    }\n\n    const stream = this.intrinsicDeviceAsMediaStream(device);\n\n    if (device === null) {\n      return null;\n    } else if (typeof device === 'string') {\n      if (this.browserBehavior.requiresNoExactMediaStreamConstraints() && this.browserBehavior.requiresGroupIdMediaStreamConstraints()) {\n        // In Samsung Internet browser, navigator.mediaDevices.enumerateDevices()\n        // returns same deviceId but different groupdId for some audioinput and videoinput devices.\n        // To handle this, we select appropriate device using deviceId + groupId.\n        trackConstraints.deviceId = device;\n        trackConstraints.groupId = this.getGroupIdFromDeviceId(kind, device);\n      } else if (this.browserBehavior.requiresNoExactMediaStreamConstraints()) {\n        trackConstraints.deviceId = device;\n      } else {\n        trackConstraints.deviceId = {\n          exact: device\n        };\n      }\n    } else if (stream) {\n      // @ts-ignore - create a fake track constraint using the stream id\n      trackConstraints.streamId = stream.id;\n    } else if (isMediaDeviceInfo(device)) {\n      trackConstraints.deviceId = device.deviceId;\n      trackConstraints.groupId = device.groupId;\n    } else {\n      // Take the input set of constraints. Note that this allows\n      // the builder to specify overrides for properties like `autoGainControl`.\n      // @ts-ignore - device is a MediaTrackConstraints\n      trackConstraints = device;\n    }\n\n    if (kind === 'video') {\n      trackConstraints.width = trackConstraints.width || {\n        ideal: this.videoInputQualitySettings.videoWidth\n      };\n      trackConstraints.height = trackConstraints.height || {\n        ideal: this.videoInputQualitySettings.videoHeight\n      };\n      trackConstraints.frameRate = trackConstraints.frameRate || {\n        ideal: this.videoInputQualitySettings.videoFrameRate\n      };\n    }\n\n    if (kind === 'audio' && this.supportSampleRateConstraint()) {\n      trackConstraints.sampleRate = {\n        ideal: DefaultDeviceController.defaultSampleRate\n      };\n    }\n\n    if (kind === 'audio' && this.supportSampleSizeConstraint()) {\n      trackConstraints.sampleSize = {\n        ideal: DefaultDeviceController.defaultSampleSize\n      };\n    }\n\n    if (kind === 'audio' && this.supportChannelCountConstraint()) {\n      trackConstraints.channelCount = {\n        ideal: DefaultDeviceController.defaultChannelCount\n      };\n    }\n\n    if (kind === 'audio') {\n      const augmented = Object.assign({\n        echoCancellation: true,\n        googEchoCancellation: true,\n        googEchoCancellation2: true,\n        googAutoGainControl: true,\n        googAutoGainControl2: true,\n        googNoiseSuppression: true,\n        googNoiseSuppression2: true,\n        googHighpassFilter: true\n      }, trackConstraints);\n      trackConstraints = augmented;\n    }\n\n    return kind === 'audio' ? {\n      audio: trackConstraints\n    } : {\n      video: trackConstraints\n    };\n  }\n\n  deviceInfoFromDeviceId(deviceKind, deviceId) {\n    if (this.deviceInfoCache === null) {\n      return null;\n    }\n\n    for (const device of this.deviceInfoCache) {\n      if (device.kind === deviceKind && device.deviceId === deviceId) {\n        return device;\n      }\n    }\n\n    return null;\n  }\n\n  acquireInputStream(kind) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (kind === 'audio') {\n        if (this.useWebAudio) {\n          const dest = this.getMediaStreamDestinationNode();\n          return dest.stream;\n        }\n      } // mirrors `this.useWebAudio`\n\n\n      if (kind === 'video') {\n        if (this.chosenVideoInputIsTransformDevice()) {\n          return this.chosenVideoTransformDevice.outputMediaStream;\n        }\n      }\n\n      let existingConstraints = null;\n\n      if (!this.activeDevices[kind]) {\n        if (kind === 'audio') {\n          this.logger.info(`no ${kind} device chosen, creating empty ${kind} device`);\n        } else {\n          this.logger.error(`no ${kind} device chosen, stopping local video tile`);\n          this.boundAudioVideoController.videoTileController.stopLocalVideoTile();\n          throw new Error(`no ${kind} device chosen, stopping local video tile`);\n        }\n      } else {\n        this.logger.info(`checking whether existing ${kind} input device can be reused`);\n        const active = this.activeDevices[kind]; // @ts-ignore\n\n        existingConstraints = active.constraints ? active.constraints[kind] : null;\n      }\n\n      try {\n        yield this.chooseInputIntrinsicDevice(kind, existingConstraints, true);\n      } catch (e) {\n        this.logger.error(`unable to acquire ${kind} device`);\n\n        if (e instanceof PermissionDeniedError_1.default) {\n          throw e;\n        }\n\n        throw new GetUserMediaError_1.default(e, `unable to acquire ${kind} device`);\n      }\n\n      return this.activeDevices[kind].stream;\n    });\n  }\n\n  hasAppliedTransform() {\n    return !!this.transform;\n  }\n\n  isMediaStreamReusableByDeviceId(stream, device) {\n    // for null device, assume the stream is not reusable\n    if (!stream || !stream.active || !device) {\n      return false;\n    }\n\n    if (device.id) {\n      return stream.id === device.id;\n    }\n\n    const settings = this.getMediaTrackSettings(stream); // If a device does not specify deviceId, we have to assume the stream is not reusable.\n\n    if (!settings.deviceId) {\n      return false;\n    }\n\n    const deviceIds = DefaultDeviceController.getIntrinsicDeviceId(device);\n\n    if (typeof deviceIds === 'string') {\n      return settings.deviceId === deviceIds;\n    }\n\n    return false;\n  }\n\n  getMediaTrackSettings(stream) {\n    var _a;\n\n    return (_a = stream.getTracks()[0]) === null || _a === void 0 ? void 0 : _a.getSettings();\n  }\n\n  reconnectAudioInputs() {\n    if (!this.audioInputSourceNode) {\n      return;\n    }\n\n    this.audioInputSourceNode.disconnect();\n    const output = this.getMediaStreamOutputNode();\n    this.audioInputSourceNode.connect(output);\n  }\n\n  setTransform(device, nodes) {\n    var _a, _b;\n\n    (_b = (_a = this.transform) === null || _a === void 0 ? void 0 : _a.nodes) === null || _b === void 0 ? void 0 : _b.end.disconnect();\n    this.transform = {\n      nodes,\n      device\n    };\n    const proc = nodes === null || nodes === void 0 ? void 0 : nodes.end;\n    const dest = this.getMediaStreamDestinationNode();\n    this.logger.debug(`Connecting transform node ${proc} to destination ${dest}.`);\n    proc === null || proc === void 0 ? void 0 : proc.connect(dest);\n    this.reconnectAudioInputs();\n  }\n\n  removeTransform() {\n    var _a;\n\n    const previous = this.transform;\n\n    if (!previous) {\n      return undefined;\n    }\n\n    (_a = this.transform.nodes) === null || _a === void 0 ? void 0 : _a.end.disconnect();\n    this.transform = undefined;\n    this.reconnectAudioInputs();\n    return previous;\n  }\n\n  attachAudioInputStreamToAudioContext(stream) {\n    var _a;\n\n    (_a = this.audioInputSourceNode) === null || _a === void 0 ? void 0 : _a.disconnect();\n    this.audioInputSourceNode = DefaultDeviceController.getAudioContext().createMediaStreamSource(stream);\n    const output = this.getMediaStreamOutputNode();\n    this.audioInputSourceNode.connect(output);\n  }\n  /**\n   * Return the end of the Web Audio graph: post-transform audio.\n   */\n\n\n  getMediaStreamDestinationNode() {\n    if (!this.audioInputDestinationNode) {\n      this.audioInputDestinationNode = DefaultDeviceController.getAudioContext().createMediaStreamDestination();\n    }\n\n    return this.audioInputDestinationNode;\n  }\n  /**\n   * Return the start of the Web Audio graph: pre-transform audio.\n   * If there's no transform node, this is the destination node.\n   */\n\n\n  getMediaStreamOutputNode() {\n    var _a, _b;\n\n    return ((_b = (_a = this.transform) === null || _a === void 0 ? void 0 : _a.nodes) === null || _b === void 0 ? void 0 : _b.start) || this.getMediaStreamDestinationNode();\n  }\n\n  static getAudioContext() {\n    if (!DefaultDeviceController.audioContext) {\n      const options = {};\n\n      if (navigator.mediaDevices.getSupportedConstraints().sampleRate) {\n        options.sampleRate = DefaultDeviceController.defaultSampleRate;\n      } // @ts-ignore\n\n\n      DefaultDeviceController.audioContext = new (window.AudioContext || window.webkitAudioContext)(options);\n    }\n\n    return DefaultDeviceController.audioContext;\n  }\n\n  static closeAudioContext() {\n    if (DefaultDeviceController.audioContext) {\n      try {\n        DefaultDeviceController.audioContext.close();\n      } catch (e) {// Nothing we can do.\n      }\n    }\n\n    DefaultDeviceController.audioContext = null;\n  }\n\n  supportSampleRateConstraint() {\n    return this.useWebAudio && !!navigator.mediaDevices.getSupportedConstraints().sampleRate;\n  }\n\n  supportSampleSizeConstraint() {\n    return this.useWebAudio && !!navigator.mediaDevices.getSupportedConstraints().sampleSize;\n  }\n\n  supportChannelCountConstraint() {\n    return this.useWebAudio && !!navigator.mediaDevices.getSupportedConstraints().channelCount;\n  } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  trace(name, input, output) {\n    let s = `API/DefaultDeviceController/${name}`;\n\n    if (typeof input !== 'undefined') {\n      s += ` ${JSON.stringify(input)}`;\n    }\n\n    if (typeof output !== 'undefined') {\n      s += ` -> ${JSON.stringify(output)}`;\n    }\n\n    this.logger.info(s);\n  }\n\n}\n\nexports.default = DefaultDeviceController;\nDefaultDeviceController.permissionDeniedOriginDetectionThresholdMs = 500;\nDefaultDeviceController.defaultVideoWidth = 960;\nDefaultDeviceController.defaultVideoHeight = 540;\nDefaultDeviceController.defaultVideoFrameRate = 15;\nDefaultDeviceController.defaultVideoMaxBandwidthKbps = 1400;\nDefaultDeviceController.defaultSampleRate = 48000;\nDefaultDeviceController.defaultSampleSize = 16;\nDefaultDeviceController.defaultChannelCount = 1;\nDefaultDeviceController.audioContext = null;\n\nfunction isMediaDeviceInfo(device) {\n  return typeof device === 'object' && 'deviceId' in device && 'groupId' in device && 'kind' in device && 'label' in device;\n}","map":{"version":3,"mappings":"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","names":["fillSMPTEColorBars","canvas","xShift","w","width","h","height","h1","h2","h3","top","middle","bottom","bottomX","segmentWidth","length","ctx","getContext","i","fillStyle","fillRect","makeColorBars","colorOrPattern","scheduler","IntervalScheduler_1","context","stream","captureStream","undefined","onTick","start","listener","stop","getVideoTracks","addEventListener","DefaultDeviceController","constructor","logger","options","browserBehavior","DefaultBrowserBehavior_1","audio","video","Set","navigator","mediaDevices","getUserMedia","id","muted","observer","deviceChangeObservers","AsyncScheduler_1","nextTick","has","audioInputMuteStateChanged","enableWebAudio","useWebAudio","muteCallback","transform","_a","device","mute","videoInputQualitySettings","VideoQualitySettings_1","defaultVideoWidth","defaultVideoHeight","defaultVideoFrameRate","defaultVideoMaxBandwidthKbps","dimension","requiresResolutionAlignment","videoWidth","videoHeight","info","mediaDeviceWrapper","DefaultMediaDeviceFactory_1","create","supportedConstraints","getSupportedConstraints","JSON","stringify","error","message","isWatchingForDeviceChanges","onDeviceChangeCallback","ensureWatchingDeviceChanges","handleDeviceChange","stopWatchingDeviceChanges","removeEventListener","shouldObserveDeviceChanges","size","hasActiveDevices","activeDevices","constraints","audioOutputDeviceId","watchForDeviceChangesIfNecessary","destroy","chooseAudioInputDevice","chooseVideoInputDevice","audioInputSourceNode","disconnect","audioInputDestinationNode","_b","listAudioInputDevices","forceUpdate","result","listDevicesOfKind","trace","listVideoInputDevices","listAudioOutputDevices","pushAudioMeetingStateForPermissions","boundAudioVideoController","eventController","publishEvent","pushVideoMeetingStateForPermissions","recreateAudioContext","debug","audioContext","state","requiresContextRecreationForAudioWorklet","AudioTransformDevice_1","nodes","end","closeAudioContext","chooseAudioTransformInputDevice","removeTransform","chooseInputIntrinsicDevice","rtcPeerConnection","restartLocalAudio","Error","getAudioContext","OfflineAudioContext","resume","createAudioNode","e","inner","intrinsicDevice","setTransform","chooseVideoTransformInputDevice","chosenVideoTransformDevice","prevVideoTransformDevice","wasUsingTransformDevice","canReuseMediaStream","isMediaStreamReusableByDeviceId","onOutputStreamDisconnect","newMediaStream","constraint","frameRate","videoFrameRate","applyConstraints","transformStream","videoTileController","hasStartedLocalVideoTile","replaceLocalVideo","restartLocalVideoAfterSelection","update","needsRenegotiation","VideoTransformDevice_1","updateMaxBandwidthKbps","chosenVideoInputIsTransformDevice","chooseAudioOutputDevice","deviceId","bindAudioOutput","addDeviceChangeObserver","add","removeDeviceChangeObserver","delete","createAnalyserNodeForAudioInput","node","analyser","createAnalyser","removeOriginalInputs","connect","createAnalyserNodeForRawAudioInput","createAnalyserNodeForStream","source","createMediaStreamSource","startVideoPreviewForVideoInput","element","warn","srcObject","releaseMediaStream","DefaultVideoTile_1","disconnectVideoStreamFromVideoElement","connectVideoStreamToVideoElement","outputMediaStream","stopVideoPreviewForVideoInput","activeVideoDevice","releaseActiveDevice","setDeviceLabelTrigger","trigger","deviceInfoCache","label","deviceLabelTrigger","mixIntoAudioInput","getMediaStreamOutputNode","chooseVideoInputQuality","maxBandwidthKbps","getVideoInputQualitySettings","acquireAudioInputStream","acquireInputStream","acquireVideoInputStream","acquireDisplayInputStream","streamConstraints","mandatory","chromeMediaSource","chromeMediaSourceId","getDisplayMedia","releaseAudioTransformStream","stopTracksAndRemoveCallbacks","releaseVideoTransformStream","kind","activeDevice","endedCallback","trackMuteCallback","trackUnmuteCallback","track","getTracks","releaseOrdinaryStream","mediaStreamToRelease","tracksToStop","getAudioTracks","tileController","stopLocalVideoTile","isReleasingAudioDestinationStream","isReleasingVideoOutputStream","bindToAudioVideoController","audioVideoController","unsubscribeFromMuteAndUnmuteLocalAudio","subscribeToMuteAndUnmuteLocalAudio","supportsSetSinkId","realtimeController","realtimeSubscribeToMuteAndUnmuteLocalAudio","realtimeUnsubscribeToMuteAndUnmuteLocalAudio","getIntrinsicDeviceId","deviceIdConstraints","Array","isArray","constraintStringParams","exact","createEmptyAudioDevice","synthesizeAudioDevice","createEmptyVideoDevice","synthesizeVideoDevice","toneHz","outputNode","createMediaStreamDestination","createBufferSource","buffer","createBuffer","sampleRate","name","defaultSampleRate","getChannelData","loop","gainNode","createGain","gain","value","oscillatorNode","createOscillator","frequency","document","createElement","colorBars","setVideoMaxBandwidthKbps","videoMaxBandwidthKbps","deviceKind","updateDeviceInfoCacheFromBrowser","listCachedDevicesOfKind","doesNotHaveAccessToMediaDevices","MediaDeviceInfo","devices","enumerateDevices","hasDeviceLabels","triggerStream","err","devicesOfKind","push","alreadyHandlingDeviceChange","oldAudioInputDevices","oldVideoInputDevices","oldAudioOutputDevices","newAudioInputDevices","newVideoInputDevices","newAudioOutputDevices","forEachObserver","areDeviceListsEqual","Types_1","of","audioInputsChanged","map","f","bind","videoInputsChanged","audioOutputsChanged","handleDeviceStreamEnded","audioInputStreamEnded","videoInputStreamEnded","observerFunc","a","b","sort","intrinsicDeviceAsMediaStream","hasSameMediaStreamId","selection","proposedConstraints","streamId","_c","_d","hasSameGroupId","groupId","deviceIds","getGroupIdFromDeviceId","cachedDeviceInfo","find","cachedDevice","getActiveDeviceId","activeDeviceMediaTrackConstraints","activeDeviceConstrainDOMStringParameters","activeDeviceId","fromAcquire","fromVideoTransformDevice","restartLocalVideo","handleGetUserMediaError","errorTimeMs","GetUserMediaError_1","NotReadableError_1","NotFoundError_1","permissionDeniedOriginDetectionThresholdMs","PermissionDeniedError_1","OverconstrainedError_1","TypeError_1","matchesDeviceSelection","active","matchesConstraints","inputDeviceCount","callCount","lastNoVideoInputDeviceCount","calculateMediaStreamConstraints","startTimeMs","Date","now","newDevice","DeviceSelection_1","once","newDeviceId","getMediaTrackSettings","getSettings","mediaStreamMuteObserver","errorMessage","audioInputErrorMessage","_e","videoInputErrorMessage","handleNewInputDevice","attachAudioInputStreamToAudioContext","deviceInfo","deviceInfoFromDeviceId","audioMixController","bindAudioDevice","trackConstraints","requiresNoExactMediaStreamConstraints","requiresGroupIdMediaStreamConstraints","isMediaDeviceInfo","ideal","supportSampleRateConstraint","supportSampleSizeConstraint","sampleSize","defaultSampleSize","supportChannelCountConstraint","channelCount","defaultChannelCount","augmented","echoCancellation","googEchoCancellation","googEchoCancellation2","googAutoGainControl","googAutoGainControl2","googNoiseSuppression","googNoiseSuppression2","googHighpassFilter","dest","getMediaStreamDestinationNode","existingConstraints","hasAppliedTransform","settings","reconnectAudioInputs","output","proc","previous","window","AudioContext","webkitAudioContext","close","input","s","exports"],"sourceRoot":"","sources":["../../src/devicecontroller/DefaultDeviceController.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}