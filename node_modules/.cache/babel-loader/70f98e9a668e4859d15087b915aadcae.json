{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\n\nconst DefaultDeviceController_1 = require(\"../devicecontroller/DefaultDeviceController\");\n\nclass ContentShareMediaStreamBroker {\n  constructor(logger) {\n    this.logger = logger;\n  }\n\n  get mediaStream() {\n    return this._mediaStream;\n  }\n\n  set mediaStream(mediaStream) {\n    this._mediaStream = mediaStream;\n  }\n\n  acquireAudioInputStream() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this._mediaStream.getAudioTracks().length === 0) {\n        this.logger.info('No audio stream available. Synthesizing an audio stream.');\n        return DefaultDeviceController_1.default.synthesizeAudioDevice(0);\n      }\n\n      return this._mediaStream;\n    });\n  }\n\n  acquireVideoInputStream() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this._mediaStream;\n    });\n  }\n\n  releaseMediaStream(_mediaStreamToRelease) {\n    this.logger.info('release media stream called');\n    return;\n  }\n\n  acquireDisplayInputStream(streamConstraints) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (streamConstraints && streamConstraints.video && // @ts-ignore\n      streamConstraints.video.mandatory && // @ts-ignore\n      streamConstraints.video.mandatory.chromeMediaSource && // @ts-ignore\n      streamConstraints.video.mandatory.chromeMediaSourceId) {\n        return navigator.mediaDevices.getUserMedia(streamConstraints);\n      } // @ts-ignore https://github.com/microsoft/TypeScript/issues/31821\n\n\n      return navigator.mediaDevices.getDisplayMedia(streamConstraints);\n    });\n  }\n\n  bindToAudioVideoController(_audioVideoController) {\n    throw new Error('unsupported');\n  }\n\n  acquireScreenCaptureDisplayInputStream(sourceId, frameRate) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.acquireDisplayInputStream(this.screenCaptureDisplayMediaConstraints(sourceId, frameRate));\n    });\n  }\n\n  screenCaptureDisplayMediaConstraints(sourceId, frameRate) {\n    return {\n      audio: !sourceId && new DefaultBrowserBehavior_1.default().getDisplayMediaAudioCaptureSupport() ? true : false,\n      video: Object.assign(Object.assign({}, !sourceId && {\n        frameRate: {\n          max: frameRate ? frameRate : ContentShareMediaStreamBroker.defaultFrameRate\n        }\n      }), sourceId && {\n        mandatory: {\n          chromeMediaSource: 'desktop',\n          chromeMediaSourceId: sourceId,\n          maxFrameRate: frameRate ? frameRate : ContentShareMediaStreamBroker.defaultFrameRate\n        }\n      })\n    };\n  }\n\n  toggleMediaStream(enable) {\n    let changed = false;\n\n    if (this.mediaStream) {\n      for (let i = 0; i < this.mediaStream.getTracks().length; i++) {\n        if (this.mediaStream.getTracks()[i].enabled !== enable) {\n          this.mediaStream.getTracks()[i].enabled = enable;\n          changed = true;\n        }\n      }\n    }\n\n    return changed;\n  }\n\n  cleanup() {\n    if (this.mediaStream) {\n      for (let i = 0; i < this.mediaStream.getTracks().length; i++) {\n        const track = this.mediaStream.getTracks()[i];\n        track.stop();\n      }\n    }\n\n    this.mediaStream = null;\n  }\n\n}\n\nexports.default = ContentShareMediaStreamBroker;\nContentShareMediaStreamBroker.defaultFrameRate = 15;","map":{"version":3,"mappings":"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","names":["ContentShareMediaStreamBroker","constructor","logger","mediaStream","_mediaStream","acquireAudioInputStream","getAudioTracks","length","info","DefaultDeviceController_1","synthesizeAudioDevice","acquireVideoInputStream","releaseMediaStream","_mediaStreamToRelease","acquireDisplayInputStream","streamConstraints","video","mandatory","chromeMediaSource","chromeMediaSourceId","navigator","mediaDevices","getUserMedia","getDisplayMedia","bindToAudioVideoController","_audioVideoController","Error","acquireScreenCaptureDisplayInputStream","sourceId","frameRate","screenCaptureDisplayMediaConstraints","audio","DefaultBrowserBehavior_1","getDisplayMediaAudioCaptureSupport","max","defaultFrameRate","maxFrameRate","toggleMediaStream","enable","changed","i","getTracks","enabled","cleanup","track","stop","exports"],"sourceRoot":"","sources":["../../src/contentsharecontroller/ContentShareMediaStreamBroker.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}