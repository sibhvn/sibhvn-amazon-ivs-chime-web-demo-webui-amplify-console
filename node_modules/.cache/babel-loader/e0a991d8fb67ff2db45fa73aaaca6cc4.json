{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nclass DefaultVolumeIndicatorAdapter {\n  constructor(logger, realtimeController, minVolumeDecibels, maxVolumeDecibels, selfAttendeeId) {\n    this.logger = logger;\n    this.realtimeController = realtimeController;\n    this.minVolumeDecibels = minVolumeDecibels;\n    this.maxVolumeDecibels = maxVolumeDecibels;\n    this.selfAttendeeId = selfAttendeeId;\n    this.streamIdToAttendeeId = {};\n    this.streamIdToExternalUserId = {};\n    this.warnedAboutMissingStreamIdMapping = {};\n    this.attendeeIdToStreamId = {};\n    this.sessionReconnected = false;\n  }\n\n  onReconnect() {\n    this.sessionReconnected = true;\n  }\n\n  sendRealtimeUpdatesForAudioStreamIdInfo(info) {\n    let streamIndex = 0;\n\n    for (const stream of info.streams) {\n      const hasAttendeeId = !!stream.attendeeId;\n      const hasExternalUserId = !!stream.externalUserId;\n      const hasMuted = stream.hasOwnProperty('muted');\n      const hasDropped = !!stream.dropped;\n\n      if (hasAttendeeId) {\n        if (!!this.attendeeIdToStreamId[stream.attendeeId] && this.attendeeIdToStreamId[stream.attendeeId] < stream.audioStreamId) {\n          delete this.attendeeIdToStreamId[stream.attendeeId];\n        }\n\n        this.streamIdToAttendeeId[stream.audioStreamId] = stream.attendeeId;\n        const externalUserId = hasExternalUserId ? stream.externalUserId : stream.attendeeId;\n        this.streamIdToExternalUserId[stream.audioStreamId] = externalUserId;\n        this.attendeeIdToStreamId[stream.attendeeId] = stream.audioStreamId;\n        this.realtimeController.realtimeSetAttendeeIdPresence(stream.attendeeId, true, externalUserId, false, {\n          attendeeIndex: streamIndex++,\n          attendeesInFrame: info.streams.length\n        });\n      }\n\n      if (hasMuted) {\n        const attendeeId = this.streamIdToAttendeeId[stream.audioStreamId];\n        const externalUserId = this.streamIdToExternalUserId[stream.audioStreamId];\n        this.realtimeController.realtimeUpdateVolumeIndicator(attendeeId, null, stream.muted, null, externalUserId);\n      }\n\n      if (!hasAttendeeId && !hasMuted) {\n        const attendeeId = this.streamIdToAttendeeId[stream.audioStreamId];\n\n        if (attendeeId) {\n          const externalUserId = this.streamIdToExternalUserId[stream.audioStreamId];\n          delete this.streamIdToAttendeeId[stream.audioStreamId];\n          delete this.streamIdToExternalUserId[stream.audioStreamId];\n          delete this.warnedAboutMissingStreamIdMapping[stream.audioStreamId];\n\n          if (this.attendeeIdToStreamId[attendeeId] === stream.audioStreamId) {\n            delete this.attendeeIdToStreamId[attendeeId];\n          }\n\n          let attendeeHasNewStreamId = false;\n\n          for (const otherStreamId of Object.keys(this.streamIdToAttendeeId)) {\n            const otherStreamIdNumber = parseInt(otherStreamId);\n\n            if (otherStreamIdNumber > stream.audioStreamId && this.streamIdToAttendeeId[otherStreamIdNumber] === attendeeId) {\n              attendeeHasNewStreamId = true;\n              break;\n            }\n          }\n\n          if (!attendeeHasNewStreamId) {\n            this.realtimeController.realtimeSetAttendeeIdPresence(attendeeId, false, externalUserId, hasDropped, {\n              attendeeIndex: streamIndex++,\n              attendeesInFrame: info.streams.length\n            });\n          }\n        }\n      }\n    }\n\n    if (this.sessionReconnected) {\n      this.cleanUpState(info);\n      this.sessionReconnected = false;\n    }\n  }\n\n  cleanUpState(info) {\n    const localAttendeeIds = Object.values(this.streamIdToAttendeeId);\n    const remoteAttendeeIds = info.streams.map(stream => stream.attendeeId);\n    const deletedAttendeeIds = localAttendeeIds.filter(id => {\n      return !remoteAttendeeIds.includes(id);\n    });\n\n    for (const [index, deletedAttendeeId] of deletedAttendeeIds.entries()) {\n      const streamId = this.attendeeIdToStreamId[deletedAttendeeId];\n      const externalUserId = this.streamIdToExternalUserId[streamId];\n      delete this.streamIdToAttendeeId[streamId];\n      delete this.streamIdToExternalUserId[streamId];\n      delete this.warnedAboutMissingStreamIdMapping[streamId];\n      delete this.attendeeIdToStreamId[deletedAttendeeId]; // During reconnection, the audio info frame might not include self attendee.\n      // However, if that happens, there would be another audio info frame with the self attendee after reconnection.\n      // So we should not send leave event here for self attendee.\n\n      if (deletedAttendeeId === this.selfAttendeeId) {\n        this.logger.warn(`the volume indicator adapter cleans up the current attendee (presence = false) after reconnection`);\n        continue;\n      } // The reconnect event does not have information whether the attendee is dropped/left.\n      // Defaulting to attendee leaving the meeting\n\n\n      this.realtimeController.realtimeSetAttendeeIdPresence(deletedAttendeeId, false, externalUserId, false, {\n        attendeeIndex: index,\n        attendeesInFrame: deletedAttendeeId.length\n      });\n    }\n  }\n\n  sendRealtimeUpdatesForAudioMetadata(metadata) {\n    let volumes = null;\n    let signalStrengths = null;\n\n    for (const state of metadata.attendeeStates) {\n      const attendeeId = this.attendeeIdForStreamId(state.audioStreamId);\n\n      if (state.hasOwnProperty('volume')) {\n        if (volumes === null) {\n          volumes = {};\n        }\n\n        if (attendeeId !== null) {\n          // @ts-ignore: TODO fix this protobufjs issue\n          volumes[attendeeId] = this.normalizedVolume(state);\n        }\n      }\n\n      if (state.hasOwnProperty('signalStrength')) {\n        if (signalStrengths === null) {\n          signalStrengths = {};\n        }\n\n        if (attendeeId !== null) {\n          // @ts-ignore: TODO fix this protobufjs issue\n          signalStrengths[attendeeId] = this.normalizedSignalStrength(state);\n        }\n      }\n    }\n\n    this.applyRealtimeUpdatesForAudioMetadata(volumes, signalStrengths);\n  }\n\n  normalizedVolume(state) {\n    const dBVolume = -state.volume;\n    const normalized = 1.0 - (dBVolume - this.maxVolumeDecibels) / (this.minVolumeDecibels - this.maxVolumeDecibels);\n    const clipped = Math.min(Math.max(normalized, 0.0), 1.0);\n    return clipped;\n  }\n\n  normalizedSignalStrength(state) {\n    const normalized = state.signalStrength / DefaultVolumeIndicatorAdapter.MAX_SIGNAL_STRENGTH_LEVELS;\n    const clipped = Math.min(Math.max(normalized, 0.0), 1.0);\n    return clipped;\n  }\n\n  applyRealtimeUpdatesForAudioMetadata(volumes, signalStrengths) {\n    for (const streamId in this.streamIdToAttendeeId) {\n      const attendeeId = this.streamIdToAttendeeId[streamId];\n      const externalUserId = this.streamIdToExternalUserId[streamId];\n      let volumeUpdate = null;\n      let signalStrengthUpdate = null;\n\n      if (volumes !== null) {\n        if (volumes.hasOwnProperty(attendeeId)) {\n          volumeUpdate = volumes[attendeeId];\n        } else {\n          volumeUpdate = DefaultVolumeIndicatorAdapter.IMPLICIT_VOLUME;\n        }\n      }\n\n      if (signalStrengths !== null) {\n        if (signalStrengths.hasOwnProperty(attendeeId)) {\n          signalStrengthUpdate = signalStrengths[attendeeId];\n        } else {\n          signalStrengthUpdate = DefaultVolumeIndicatorAdapter.IMPLICIT_SIGNAL_STRENGTH;\n        }\n      }\n\n      if (volumeUpdate !== null || signalStrengthUpdate !== null) {\n        this.realtimeController.realtimeUpdateVolumeIndicator(attendeeId, volumeUpdate, null, signalStrengthUpdate, externalUserId);\n      }\n    }\n  }\n\n  attendeeIdForStreamId(streamId) {\n    if (streamId === 0) {\n      return null;\n    }\n\n    const attendeeId = this.streamIdToAttendeeId[streamId];\n\n    if (attendeeId) {\n      return attendeeId;\n    }\n\n    if (!this.warnedAboutMissingStreamIdMapping[streamId]) {\n      this.warnedAboutMissingStreamIdMapping[streamId] = true;\n      this.logger.warn(`volume indicator stream id ${streamId} seen before being defined`);\n    }\n\n    return null;\n  }\n\n}\n\nexports.default = DefaultVolumeIndicatorAdapter;\nDefaultVolumeIndicatorAdapter.MAX_SIGNAL_STRENGTH_LEVELS = 2;\nDefaultVolumeIndicatorAdapter.IMPLICIT_VOLUME = 0;\nDefaultVolumeIndicatorAdapter.IMPLICIT_SIGNAL_STRENGTH = 1;","map":{"version":3,"mappings":"cAAA;AACA;;;;;;AAWA,MAAqBA,6BAArB,CAAkD;EAUhDC,YACUC,MADV,EAEUC,kBAFV,EAGUC,iBAHV,EAIUC,iBAJV,EAKUC,cALV,EAKiC;IAJvB;IACA;IACA;IACA;IACA;IAdF,4BAAkD,EAAlD;IACA,gCAAsD,EAAtD;IACA,yCAAgE,EAAhE;IACA,4BAAkD,EAAlD;IACA,0BAA8B,KAA9B;EAWJ;;EAEJC,WAAW;IACT,KAAKC,kBAAL,GAA0B,IAA1B;EACD;;EAEDC,uCAAuC,CAACC,IAAD,EAAgC;IACrE,IAAIC,WAAW,GAAG,CAAlB;;IACA,KAAK,MAAMC,MAAX,IAAqBF,IAAI,CAACG,OAA1B,EAAmC;MACjC,MAAMC,aAAa,GAAG,CAAC,CAACF,MAAM,CAACG,UAA/B;MACA,MAAMC,iBAAiB,GAAG,CAAC,CAACJ,MAAM,CAACK,cAAnC;MACA,MAAMC,QAAQ,GAAGN,MAAM,CAACO,cAAP,CAAsB,OAAtB,CAAjB;MACA,MAAMC,UAAU,GAAG,CAAC,CAACR,MAAM,CAACS,OAA5B;;MACA,IAAIP,aAAJ,EAAmB;QACjB,IACE,CAAC,CAAC,KAAKQ,oBAAL,CAA0BV,MAAM,CAACG,UAAjC,CAAF,IACA,KAAKO,oBAAL,CAA0BV,MAAM,CAACG,UAAjC,IAA+CH,MAAM,CAACW,aAFxD,EAGE;UACA,OAAO,KAAKD,oBAAL,CAA0BV,MAAM,CAACG,UAAjC,CAAP;QACD;;QACD,KAAKS,oBAAL,CAA0BZ,MAAM,CAACW,aAAjC,IAAkDX,MAAM,CAACG,UAAzD;QACA,MAAME,cAAc,GAAGD,iBAAiB,GAAGJ,MAAM,CAACK,cAAV,GAA2BL,MAAM,CAACG,UAA1E;QACA,KAAKU,wBAAL,CAA8Bb,MAAM,CAACW,aAArC,IAAsDN,cAAtD;QACA,KAAKK,oBAAL,CAA0BV,MAAM,CAACG,UAAjC,IAA+CH,MAAM,CAACW,aAAtD;QACA,KAAKpB,kBAAL,CAAwBuB,6BAAxB,CACEd,MAAM,CAACG,UADT,EAEE,IAFF,EAGEE,cAHF,EAIE,KAJF,EAKE;UAAEU,aAAa,EAAEhB,WAAW,EAA5B;UAAgCiB,gBAAgB,EAAElB,IAAI,CAACG,OAAL,CAAagB;QAA/D,CALF;MAOD;;MACD,IAAIX,QAAJ,EAAc;QACZ,MAAMH,UAAU,GAAG,KAAKS,oBAAL,CAA0BZ,MAAM,CAACW,aAAjC,CAAnB;QACA,MAAMN,cAAc,GAAG,KAAKQ,wBAAL,CAA8Bb,MAAM,CAACW,aAArC,CAAvB;QACA,KAAKpB,kBAAL,CAAwB2B,6BAAxB,CACEf,UADF,EAEE,IAFF,EAGEH,MAAM,CAACmB,KAHT,EAIE,IAJF,EAKEd,cALF;MAOD;;MACD,IAAI,CAACH,aAAD,IAAkB,CAACI,QAAvB,EAAiC;QAC/B,MAAMH,UAAU,GAAG,KAAKS,oBAAL,CAA0BZ,MAAM,CAACW,aAAjC,CAAnB;;QACA,IAAIR,UAAJ,EAAgB;UACd,MAAME,cAAc,GAAG,KAAKQ,wBAAL,CAA8Bb,MAAM,CAACW,aAArC,CAAvB;UACA,OAAO,KAAKC,oBAAL,CAA0BZ,MAAM,CAACW,aAAjC,CAAP;UACA,OAAO,KAAKE,wBAAL,CAA8Bb,MAAM,CAACW,aAArC,CAAP;UACA,OAAO,KAAKS,iCAAL,CAAuCpB,MAAM,CAACW,aAA9C,CAAP;;UACA,IAAI,KAAKD,oBAAL,CAA0BP,UAA1B,MAA0CH,MAAM,CAACW,aAArD,EAAoE;YAClE,OAAO,KAAKD,oBAAL,CAA0BP,UAA1B,CAAP;UACD;;UACD,IAAIkB,sBAAsB,GAAG,KAA7B;;UACA,KAAK,MAAMC,aAAX,IAA4BC,MAAM,CAACC,IAAP,CAAY,KAAKZ,oBAAjB,CAA5B,EAAoE;YAClE,MAAMa,mBAAmB,GAAGC,QAAQ,CAACJ,aAAD,CAApC;;YACA,IACEG,mBAAmB,GAAGzB,MAAM,CAACW,aAA7B,IACA,KAAKC,oBAAL,CAA0Ba,mBAA1B,MAAmDtB,UAFrD,EAGE;cACAkB,sBAAsB,GAAG,IAAzB;cACA;YACD;UACF;;UACD,IAAI,CAACA,sBAAL,EAA6B;YAC3B,KAAK9B,kBAAL,CAAwBuB,6BAAxB,CACEX,UADF,EAEE,KAFF,EAGEE,cAHF,EAIEG,UAJF,EAKE;cAAEO,aAAa,EAAEhB,WAAW,EAA5B;cAAgCiB,gBAAgB,EAAElB,IAAI,CAACG,OAAL,CAAagB;YAA/D,CALF;UAOD;QACF;MACF;IACF;;IACD,IAAI,KAAKrB,kBAAT,EAA6B;MAC3B,KAAK+B,YAAL,CAAkB7B,IAAlB;MACA,KAAKF,kBAAL,GAA0B,KAA1B;IACD;EACF;;EAEO+B,YAAY,CAAC7B,IAAD,EAAgC;IAClD,MAAM8B,gBAAgB,GAAGL,MAAM,CAACM,MAAP,CAAc,KAAKjB,oBAAnB,CAAzB;IACA,MAAMkB,iBAAiB,GAAGhC,IAAI,CAACG,OAAL,CAAa8B,GAAb,CAAiB/B,MAAM,IAAIA,MAAM,CAACG,UAAlC,CAA1B;IACA,MAAM6B,kBAAkB,GAAGJ,gBAAgB,CAACK,MAAjB,CAAwBC,EAAE,IAAG;MACtD,OAAO,CAACJ,iBAAiB,CAACK,QAAlB,CAA2BD,EAA3B,CAAR;IACD,CAF0B,CAA3B;;IAIA,KAAK,MAAM,CAACE,KAAD,EAAQC,iBAAR,CAAX,IAAyCL,kBAAkB,CAACM,OAAnB,EAAzC,EAAuE;MACrE,MAAMC,QAAQ,GAAG,KAAK7B,oBAAL,CAA0B2B,iBAA1B,CAAjB;MACA,MAAMhC,cAAc,GAAG,KAAKQ,wBAAL,CAA8B0B,QAA9B,CAAvB;MACA,OAAO,KAAK3B,oBAAL,CAA0B2B,QAA1B,CAAP;MACA,OAAO,KAAK1B,wBAAL,CAA8B0B,QAA9B,CAAP;MACA,OAAO,KAAKnB,iCAAL,CAAuCmB,QAAvC,CAAP;MACA,OAAO,KAAK7B,oBAAL,CAA0B2B,iBAA1B,CAAP,CANqE,CAQrE;MACA;MACA;;MACA,IAAIA,iBAAiB,KAAK,KAAK3C,cAA/B,EAA+C;QAC7C,KAAKJ,MAAL,CAAYkD,IAAZ,CACE,mGADF;QAGA;MACD,CAhBoE,CAiBrE;MACA;;;MACA,KAAKjD,kBAAL,CAAwBuB,6BAAxB,CACEuB,iBADF,EAEE,KAFF,EAGEhC,cAHF,EAIE,KAJF,EAKE;QAAEU,aAAa,EAAEqB,KAAjB;QAAwBpB,gBAAgB,EAAEqB,iBAAiB,CAACpB;MAA5D,CALF;IAOD;EACF;;EAEDwB,mCAAmC,CAACC,QAAD,EAAgC;IACjE,IAAIC,OAAO,GAAqC,IAAhD;IACA,IAAIC,eAAe,GAAqC,IAAxD;;IACA,KAAK,MAAMC,KAAX,IAAoBH,QAAQ,CAACI,cAA7B,EAA6C;MAC3C,MAAM3C,UAAU,GAAG,KAAK4C,qBAAL,CAA2BF,KAAK,CAAClC,aAAjC,CAAnB;;MACA,IAAIkC,KAAK,CAACtC,cAAN,CAAqB,QAArB,CAAJ,EAAoC;QAClC,IAAIoC,OAAO,KAAK,IAAhB,EAAsB;UACpBA,OAAO,GAAG,EAAV;QACD;;QACD,IAAIxC,UAAU,KAAK,IAAnB,EAAyB;UACvB;UACAwC,OAAO,CAACxC,UAAD,CAAP,GAAsB,KAAK6C,gBAAL,CAAsBH,KAAtB,CAAtB;QACD;MACF;;MACD,IAAIA,KAAK,CAACtC,cAAN,CAAqB,gBAArB,CAAJ,EAA4C;QAC1C,IAAIqC,eAAe,KAAK,IAAxB,EAA8B;UAC5BA,eAAe,GAAG,EAAlB;QACD;;QACD,IAAIzC,UAAU,KAAK,IAAnB,EAAyB;UACvB;UACAyC,eAAe,CAACzC,UAAD,CAAf,GAA8B,KAAK8C,wBAAL,CAA8BJ,KAA9B,CAA9B;QACD;MACF;IACF;;IACD,KAAKK,oCAAL,CAA0CP,OAA1C,EAAmDC,eAAnD;EACD;;EAEOI,gBAAgB,CAACH,KAAD,EAA6B;IACnD,MAAMM,QAAQ,GAAG,CAACN,KAAK,CAACO,MAAxB;IACA,MAAMC,UAAU,GACd,MAAM,CAACF,QAAQ,GAAG,KAAK1D,iBAAjB,KAAuC,KAAKD,iBAAL,GAAyB,KAAKC,iBAArE,CADR;IAEA,MAAM6D,OAAO,GAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASJ,UAAT,EAAqB,GAArB,CAAT,EAAoC,GAApC,CAAhB;IACA,OAAOC,OAAP;EACD;;EAEOL,wBAAwB,CAACJ,KAAD,EAA6B;IAC3D,MAAMQ,UAAU,GACdR,KAAK,CAACa,cAAN,GAAuBtE,6BAA6B,CAACuE,0BADvD;IAEA,MAAML,OAAO,GAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASJ,UAAT,EAAqB,GAArB,CAAT,EAAoC,GAApC,CAAhB;IACA,OAAOC,OAAP;EACD;;EAEOJ,oCAAoC,CAC1CP,OAD0C,EAE1CC,eAF0C,EAEO;IAEjD,KAAK,MAAML,QAAX,IAAuB,KAAK3B,oBAA5B,EAAkD;MAChD,MAAMT,UAAU,GAAG,KAAKS,oBAAL,CAA0B2B,QAA1B,CAAnB;MACA,MAAMlC,cAAc,GAAG,KAAKQ,wBAAL,CAA8B0B,QAA9B,CAAvB;MACA,IAAIqB,YAAY,GAAkB,IAAlC;MACA,IAAIC,oBAAoB,GAAkB,IAA1C;;MACA,IAAIlB,OAAO,KAAK,IAAhB,EAAsB;QACpB,IAAIA,OAAO,CAACpC,cAAR,CAAuBJ,UAAvB,CAAJ,EAAwC;UACtCyD,YAAY,GAAGjB,OAAO,CAACxC,UAAD,CAAtB;QACD,CAFD,MAEO;UACLyD,YAAY,GAAGxE,6BAA6B,CAAC0E,eAA7C;QACD;MACF;;MACD,IAAIlB,eAAe,KAAK,IAAxB,EAA8B;QAC5B,IAAIA,eAAe,CAACrC,cAAhB,CAA+BJ,UAA/B,CAAJ,EAAgD;UAC9C0D,oBAAoB,GAAGjB,eAAe,CAACzC,UAAD,CAAtC;QACD,CAFD,MAEO;UACL0D,oBAAoB,GAAGzE,6BAA6B,CAAC2E,wBAArD;QACD;MACF;;MACD,IAAIH,YAAY,KAAK,IAAjB,IAAyBC,oBAAoB,KAAK,IAAtD,EAA4D;QAC1D,KAAKtE,kBAAL,CAAwB2B,6BAAxB,CACEf,UADF,EAEEyD,YAFF,EAGE,IAHF,EAIEC,oBAJF,EAKExD,cALF;MAOD;IACF;EACF;;EAEO0C,qBAAqB,CAACR,QAAD,EAAiB;IAC5C,IAAIA,QAAQ,KAAK,CAAjB,EAAoB;MAClB,OAAO,IAAP;IACD;;IACD,MAAMpC,UAAU,GAAG,KAAKS,oBAAL,CAA0B2B,QAA1B,CAAnB;;IACA,IAAIpC,UAAJ,EAAgB;MACd,OAAOA,UAAP;IACD;;IACD,IAAI,CAAC,KAAKiB,iCAAL,CAAuCmB,QAAvC,CAAL,EAAuD;MACrD,KAAKnB,iCAAL,CAAuCmB,QAAvC,IAAmD,IAAnD;MACA,KAAKjD,MAAL,CAAYkD,IAAZ,CAAiB,8BAA8BD,QAAQ,4BAAvD;IACD;;IACD,OAAO,IAAP;EACD;;AAhO+C;;AAAlDyB;AAMS5E,2DAAqC,CAArC;AACAA,gDAA0B,CAA1B;AACAA,yDAAmC,CAAnC","names":["DefaultVolumeIndicatorAdapter","constructor","logger","realtimeController","minVolumeDecibels","maxVolumeDecibels","selfAttendeeId","onReconnect","sessionReconnected","sendRealtimeUpdatesForAudioStreamIdInfo","info","streamIndex","stream","streams","hasAttendeeId","attendeeId","hasExternalUserId","externalUserId","hasMuted","hasOwnProperty","hasDropped","dropped","attendeeIdToStreamId","audioStreamId","streamIdToAttendeeId","streamIdToExternalUserId","realtimeSetAttendeeIdPresence","attendeeIndex","attendeesInFrame","length","realtimeUpdateVolumeIndicator","muted","warnedAboutMissingStreamIdMapping","attendeeHasNewStreamId","otherStreamId","Object","keys","otherStreamIdNumber","parseInt","cleanUpState","localAttendeeIds","values","remoteAttendeeIds","map","deletedAttendeeIds","filter","id","includes","index","deletedAttendeeId","entries","streamId","warn","sendRealtimeUpdatesForAudioMetadata","metadata","volumes","signalStrengths","state","attendeeStates","attendeeIdForStreamId","normalizedVolume","normalizedSignalStrength","applyRealtimeUpdatesForAudioMetadata","dBVolume","volume","normalized","clipped","Math","min","max","signalStrength","MAX_SIGNAL_STRENGTH_LEVELS","volumeUpdate","signalStrengthUpdate","IMPLICIT_VOLUME","IMPLICIT_SIGNAL_STRENGTH","exports"],"sourceRoot":"","sources":["../../src/volumeindicatoradapter/DefaultVolumeIndicatorAdapter.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}