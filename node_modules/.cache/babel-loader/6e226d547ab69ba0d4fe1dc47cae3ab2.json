{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nclass CSPMonitor {\n  /* istanbul ignore next */\n  static register() {\n    if (!('document' in global) || !document.addEventListener) {\n      return;\n    }\n\n    if (CSPMonitor.shouldRegisterCSPMonitor) {\n      if (!CSPMonitor.added) {\n        document.addEventListener('securitypolicyviolation', CSPMonitor.listener);\n        CSPMonitor.added = true;\n      }\n    }\n  }\n  /* istanbul ignore next */\n\n\n  static unregister() {\n    if (!('document' in global) || !document.removeEventListener) {\n      return;\n    }\n\n    document.removeEventListener('securitypolicyviolation', CSPMonitor.listener);\n    CSPMonitor.loggers = new Set();\n    CSPMonitor.added = false;\n  }\n\n  static disable() {\n    CSPMonitor.shouldRegisterCSPMonitor = false;\n    CSPMonitor.unregister();\n  }\n\n  static addLogger(logger) {\n    if (logger) {\n      CSPMonitor.loggers.add(logger);\n    }\n  }\n\n  static removeLogger(logger) {\n    if (logger) {\n      CSPMonitor.loggers.delete(logger);\n    }\n  }\n\n}\n\nexports.default = CSPMonitor;\nCSPMonitor.loggers = new Set();\nCSPMonitor.shouldRegisterCSPMonitor = true;\nCSPMonitor.added = false;\n/* istanbul ignore next */\n\nCSPMonitor.listener = event => {\n  const message = 'Security Policy Violation\\n' + `Blocked URI: ${event.blockedURI}\\n` + `Violated Directive: ${event.violatedDirective}\\n` + `Original Policy: ${event.originalPolicy}\\n` + `Document URI: ${event.documentURI}\\n` + `Source File: ${event.sourceFile}\\n` + `Line No.: ${event.lineNumber}\\n`;\n\n  for (const logger of CSPMonitor.loggers) {\n    logger.error(message);\n  }\n\n  if (CSPMonitor.loggers.size === 0) {\n    console.error(message);\n  }\n};","map":{"version":3,"mappings":"cAAA;AACA;;;;;;AAIA,MAAqBA,UAArB,CAA+B;EAK7B;EACe,OAARC,QAAQ;IACb,IAAI,EAAE,cAAcC,MAAhB,KAA2B,CAACC,QAAQ,CAACC,gBAAzC,EAA2D;MACzD;IACD;;IACD,IAAIJ,UAAU,CAACK,wBAAf,EAAyC;MACvC,IAAI,CAACL,UAAU,CAACM,KAAhB,EAAuB;QACrBH,QAAQ,CAACC,gBAAT,CAA0B,yBAA1B,EAAqDJ,UAAU,CAACO,QAAhE;QACAP,UAAU,CAACM,KAAX,GAAmB,IAAnB;MACD;IACF;EACF;EAED;;;EACiB,OAAVE,UAAU;IACf,IAAI,EAAE,cAAcN,MAAhB,KAA2B,CAACC,QAAQ,CAACM,mBAAzC,EAA8D;MAC5D;IACD;;IACDN,QAAQ,CAACM,mBAAT,CAA6B,yBAA7B,EAAwDT,UAAU,CAACO,QAAnE;IACAP,UAAU,CAACU,OAAX,GAAqB,IAAIC,GAAJ,EAArB;IACAX,UAAU,CAACM,KAAX,GAAmB,KAAnB;EACD;;EAEa,OAAPM,OAAO;IACZZ,UAAU,CAACK,wBAAX,GAAsC,KAAtC;IACAL,UAAU,CAACQ,UAAX;EACD;;EAEe,OAATK,SAAS,CAACC,MAAD,EAAe;IAC7B,IAAIA,MAAJ,EAAY;MACVd,UAAU,CAACU,OAAX,CAAmBK,GAAnB,CAAuBD,MAAvB;IACD;EACF;;EAEkB,OAAZE,YAAY,CAACF,MAAD,EAAe;IAChC,IAAIA,MAAJ,EAAY;MACVd,UAAU,CAACU,OAAX,CAAmBO,MAAnB,CAA0BH,MAA1B;IACD;EACF;;AA3C4B;;AAA/BI;AACiBlB,qBAAuB,IAAIW,GAAJ,EAAvB;AACAX,sCAAoC,IAApC;AACAA,mBAAQ,KAAR;AA0Cf;;AACeA,sBAAYmB,KAAD,IAA8C;EACtE,MAAMC,OAAO,GACX,gCACA,gBAAgBD,KAAK,CAACE,UAAU,IADhC,GAEA,uBAAuBF,KAAK,CAACG,iBAAiB,IAF9C,GAGA,oBAAoBH,KAAK,CAACI,cAAc,IAHxC,GAIA,iBAAiBJ,KAAK,CAACK,WAAW,IAJlC,GAKA,gBAAgBL,KAAK,CAACM,UAAU,IALhC,GAMA,aAAaN,KAAK,CAACO,UAAU,IAP/B;;EASA,KAAK,MAAMZ,MAAX,IAAqBd,UAAU,CAACU,OAAhC,EAAyC;IACvCI,MAAM,CAACa,KAAP,CAAaP,OAAb;EACD;;EACD,IAAIpB,UAAU,CAACU,OAAX,CAAmBkB,IAAnB,KAA4B,CAAhC,EAAmC;IACjCC,OAAO,CAACF,KAAR,CAAcP,OAAd;EACD;AACF,CAhBc","names":["CSPMonitor","register","global","document","addEventListener","shouldRegisterCSPMonitor","added","listener","unregister","removeEventListener","loggers","Set","disable","addLogger","logger","add","removeLogger","delete","exports","event","message","blockedURI","violatedDirective","originalPolicy","documentURI","sourceFile","lineNumber","error","size","console"],"sourceRoot":"","sources":["../../src/cspmonitor/CSPMonitor.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}