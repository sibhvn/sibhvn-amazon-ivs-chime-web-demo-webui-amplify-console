{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst support_js_1 = require(\"./support.js\");\n\nconst types_js_1 = require(\"./types.js\");\n\nconst INDICES = {\n  ready: 0,\n  enabled: 1\n};\nconst STATES = {\n  disabled: 0,\n  enabled: 1,\n  stopped: 2\n};\n\nclass VoiceFocusWorkerBufferNode extends types_js_1.VoiceFocusAudioWorkletNode {\n  constructor(context, options) {\n    super(context, options.processor, options);\n    this.channelCountMode = 'explicit';\n    this.channelCount = 1;\n    const {\n      modelURL,\n      resamplerURL,\n      worker,\n      fetchBehavior,\n      delegate\n    } = options;\n    this.delegate = delegate;\n    this.worker = worker;\n    this.worker.onmessage = this.onWorkerMessage.bind(this);\n    this.port.onmessage = this.onProcessorMessage.bind(this);\n    const {\n      enabled,\n      supportFarendStream\n    } = options.processorOptions;\n    this.worker.postMessage({\n      message: 'init',\n      approach: 'sab',\n      frames: context.sampleRate === 16000 ? 160 : 480,\n      enabled,\n      model: modelURL,\n      supportFarendStream\n    });\n    const message = support_js_1.supportsWASMPostMessage(globalThis) ? 'get-module' : 'get-module-buffer';\n    this.worker.postMessage({\n      message,\n      key: 'resampler',\n      fetchBehavior,\n      path: resamplerURL\n    });\n  }\n\n  enable() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.state) {\n        Atomics.store(this.state, INDICES.enabled, STATES.enabled);\n        Atomics.notify(this.state, INDICES.ready, 1);\n      } else {\n        this.worker.postMessage({\n          message: 'enable'\n        });\n      }\n    });\n  }\n\n  disable() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.state) {\n        Atomics.store(this.state, INDICES.enabled, STATES.disabled);\n        Atomics.notify(this.state, INDICES.ready, 1);\n      } else {\n        this.worker.postMessage({\n          message: 'disable'\n        });\n      }\n    });\n  }\n\n  stop() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.state) {\n        Atomics.store(this.state, INDICES.enabled, STATES.stopped);\n        Atomics.notify(this.state, INDICES.ready, 1);\n      } else {\n        try {\n          this.worker.postMessage({\n            message: 'stop'\n          });\n        } catch (e) {}\n      }\n\n      this.disconnect();\n    });\n  }\n\n  onWorkerMessage(event) {\n    var _a;\n\n    const data = event.data;\n\n    switch (data.message) {\n      case 'ready':\n        if (!data.shared) {\n          throw new Error('No shared state.');\n        }\n\n        this.state = new Int32Array(data.shared.state);\n        this.port.postMessage(data);\n        break;\n\n      case 'stopped':\n        this.worker.terminate();\n        break;\n\n      case 'module-buffer':\n      case 'module':\n        this.port.postMessage(data);\n        break;\n\n      case 'cpu':\n        (_a = this.delegate) === null || _a === void 0 ? void 0 : _a.onCPUWarning();\n        break;\n\n      case 'processing':\n        this.port.postMessage(data);\n        break;\n\n      default:\n        return;\n    }\n  }\n\n  onProcessorMessage(event) {\n    var _a;\n\n    const data = event.data;\n\n    switch (data.message) {\n      case 'cpu':\n        (_a = this.delegate) === null || _a === void 0 ? void 0 : _a.onCPUWarning();\n        break;\n\n      case 'prepare-for-frames':\n        this.worker.postMessage(data);\n        break;\n\n      default:\n    }\n  }\n\n}\n\nexports.default = VoiceFocusWorkerBufferNode;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","support_js_1","require","types_js_1","INDICES","ready","enabled","STATES","disabled","stopped","VoiceFocusWorkerBufferNode","VoiceFocusAudioWorkletNode","constructor","context","options","processor","channelCountMode","channelCount","modelURL","resamplerURL","worker","fetchBehavior","delegate","onmessage","onWorkerMessage","bind","port","onProcessorMessage","supportFarendStream","processorOptions","postMessage","message","approach","frames","sampleRate","model","supportsWASMPostMessage","globalThis","key","path","enable","state","Atomics","store","notify","disable","stop","disconnect","event","_a","data","shared","Error","Int32Array","terminate","onCPUWarning","default"],"sources":["/Users/kshiba01/projects/DXサービス/AWS/amplify/amazon-ivs-chime-web-demo/web-ui/node_modules/amazon-chime-sdk-js/libs/voicefocus/worklet-worker-sab-node.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst support_js_1 = require(\"./support.js\");\nconst types_js_1 = require(\"./types.js\");\nconst INDICES = {\n    ready: 0,\n    enabled: 1,\n};\nconst STATES = {\n    disabled: 0,\n    enabled: 1,\n    stopped: 2,\n};\nclass VoiceFocusWorkerBufferNode extends types_js_1.VoiceFocusAudioWorkletNode {\n    constructor(context, options) {\n        super(context, options.processor, options);\n        this.channelCountMode = 'explicit';\n        this.channelCount = 1;\n        const { modelURL, resamplerURL, worker, fetchBehavior, delegate, } = options;\n        this.delegate = delegate;\n        this.worker = worker;\n        this.worker.onmessage = this.onWorkerMessage.bind(this);\n        this.port.onmessage = this.onProcessorMessage.bind(this);\n        const { enabled, supportFarendStream } = options.processorOptions;\n        this.worker.postMessage({\n            message: 'init',\n            approach: 'sab',\n            frames: context.sampleRate === 16000 ? 160 : 480,\n            enabled,\n            model: modelURL,\n            supportFarendStream,\n        });\n        const message = support_js_1.supportsWASMPostMessage(globalThis) ? 'get-module' : 'get-module-buffer';\n        this.worker.postMessage({\n            message,\n            key: 'resampler',\n            fetchBehavior,\n            path: resamplerURL,\n        });\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state) {\n                Atomics.store(this.state, INDICES.enabled, STATES.enabled);\n                Atomics.notify(this.state, INDICES.ready, 1);\n            }\n            else {\n                this.worker.postMessage({ message: 'enable' });\n            }\n        });\n    }\n    disable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state) {\n                Atomics.store(this.state, INDICES.enabled, STATES.disabled);\n                Atomics.notify(this.state, INDICES.ready, 1);\n            }\n            else {\n                this.worker.postMessage({ message: 'disable' });\n            }\n        });\n    }\n    stop() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state) {\n                Atomics.store(this.state, INDICES.enabled, STATES.stopped);\n                Atomics.notify(this.state, INDICES.ready, 1);\n            }\n            else {\n                try {\n                    this.worker.postMessage({ message: 'stop' });\n                }\n                catch (e) {\n                }\n            }\n            this.disconnect();\n        });\n    }\n    onWorkerMessage(event) {\n        var _a;\n        const data = event.data;\n        switch (data.message) {\n            case 'ready':\n                if (!data.shared) {\n                    throw new Error('No shared state.');\n                }\n                this.state = new Int32Array(data.shared.state);\n                this.port.postMessage(data);\n                break;\n            case 'stopped':\n                this.worker.terminate();\n                break;\n            case 'module-buffer':\n            case 'module':\n                this.port.postMessage(data);\n                break;\n            case 'cpu':\n                (_a = this.delegate) === null || _a === void 0 ? void 0 : _a.onCPUWarning();\n                break;\n            case 'processing':\n                this.port.postMessage(data);\n                break;\n            default:\n                return;\n        }\n    }\n    onProcessorMessage(event) {\n        var _a;\n        const data = event.data;\n        switch (data.message) {\n            case 'cpu':\n                (_a = this.delegate) === null || _a === void 0 ? void 0 : _a.onCPUWarning();\n                break;\n            case 'prepare-for-frames':\n                this.worker.postMessage(data);\n                break;\n            default:\n        }\n    }\n}\nexports.default = VoiceFocusWorkerBufferNode;\n"],"mappings":"AAAA;;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;EACrF,SAASC,KAAT,CAAeC,KAAf,EAAsB;IAAE,OAAOA,KAAK,YAAYH,CAAjB,GAAqBG,KAArB,GAA6B,IAAIH,CAAJ,CAAM,UAAUI,OAAV,EAAmB;MAAEA,OAAO,CAACD,KAAD,CAAP;IAAiB,CAA5C,CAApC;EAAoF;;EAC5G,OAAO,KAAKH,CAAC,KAAKA,CAAC,GAAGK,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;IACvD,SAASC,SAAT,CAAmBJ,KAAnB,EAA0B;MAAE,IAAI;QAAEK,IAAI,CAACP,SAAS,CAACQ,IAAV,CAAeN,KAAf,CAAD,CAAJ;MAA8B,CAApC,CAAqC,OAAOO,CAAP,EAAU;QAAEJ,MAAM,CAACI,CAAD,CAAN;MAAY;IAAE;;IAC3F,SAASC,QAAT,CAAkBR,KAAlB,EAAyB;MAAE,IAAI;QAAEK,IAAI,CAACP,SAAS,CAAC,OAAD,CAAT,CAAmBE,KAAnB,CAAD,CAAJ;MAAkC,CAAxC,CAAyC,OAAOO,CAAP,EAAU;QAAEJ,MAAM,CAACI,CAAD,CAAN;MAAY;IAAE;;IAC9F,SAASF,IAAT,CAAcI,MAAd,EAAsB;MAAEA,MAAM,CAACC,IAAP,GAAcT,OAAO,CAACQ,MAAM,CAACT,KAAR,CAArB,GAAsCD,KAAK,CAACU,MAAM,CAACT,KAAR,CAAL,CAAoBW,IAApB,CAAyBP,SAAzB,EAAoCI,QAApC,CAAtC;IAAsF;;IAC9GH,IAAI,CAAC,CAACP,SAAS,GAAGA,SAAS,CAACc,KAAV,CAAgBjB,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDU,IAAzD,EAAD,CAAJ;EACH,CALM,CAAP;AAMH,CARD;;AASAO,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEf,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMgB,YAAY,GAAGC,OAAO,CAAC,cAAD,CAA5B;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,YAAD,CAA1B;;AACA,MAAME,OAAO,GAAG;EACZC,KAAK,EAAE,CADK;EAEZC,OAAO,EAAE;AAFG,CAAhB;AAIA,MAAMC,MAAM,GAAG;EACXC,QAAQ,EAAE,CADC;EAEXF,OAAO,EAAE,CAFE;EAGXG,OAAO,EAAE;AAHE,CAAf;;AAKA,MAAMC,0BAAN,SAAyCP,UAAU,CAACQ,0BAApD,CAA+E;EAC3EC,WAAW,CAACC,OAAD,EAAUC,OAAV,EAAmB;IAC1B,MAAMD,OAAN,EAAeC,OAAO,CAACC,SAAvB,EAAkCD,OAAlC;IACA,KAAKE,gBAAL,GAAwB,UAAxB;IACA,KAAKC,YAAL,GAAoB,CAApB;IACA,MAAM;MAAEC,QAAF;MAAYC,YAAZ;MAA0BC,MAA1B;MAAkCC,aAAlC;MAAiDC;IAAjD,IAA+DR,OAArE;IACA,KAAKQ,QAAL,GAAgBA,QAAhB;IACA,KAAKF,MAAL,GAAcA,MAAd;IACA,KAAKA,MAAL,CAAYG,SAAZ,GAAwB,KAAKC,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAxB;IACA,KAAKC,IAAL,CAAUH,SAAV,GAAsB,KAAKI,kBAAL,CAAwBF,IAAxB,CAA6B,IAA7B,CAAtB;IACA,MAAM;MAAEnB,OAAF;MAAWsB;IAAX,IAAmCd,OAAO,CAACe,gBAAjD;IACA,KAAKT,MAAL,CAAYU,WAAZ,CAAwB;MACpBC,OAAO,EAAE,MADW;MAEpBC,QAAQ,EAAE,KAFU;MAGpBC,MAAM,EAAEpB,OAAO,CAACqB,UAAR,KAAuB,KAAvB,GAA+B,GAA/B,GAAqC,GAHzB;MAIpB5B,OAJoB;MAKpB6B,KAAK,EAAEjB,QALa;MAMpBU;IANoB,CAAxB;IAQA,MAAMG,OAAO,GAAG9B,YAAY,CAACmC,uBAAb,CAAqCC,UAArC,IAAmD,YAAnD,GAAkE,mBAAlF;IACA,KAAKjB,MAAL,CAAYU,WAAZ,CAAwB;MACpBC,OADoB;MAEpBO,GAAG,EAAE,WAFe;MAGpBjB,aAHoB;MAIpBkB,IAAI,EAAEpB;IAJc,CAAxB;EAMH;;EACDqB,MAAM,GAAG;IACL,OAAO7D,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;MAChD,IAAI,KAAK8D,KAAT,EAAgB;QACZC,OAAO,CAACC,KAAR,CAAc,KAAKF,KAAnB,EAA0BrC,OAAO,CAACE,OAAlC,EAA2CC,MAAM,CAACD,OAAlD;QACAoC,OAAO,CAACE,MAAR,CAAe,KAAKH,KAApB,EAA2BrC,OAAO,CAACC,KAAnC,EAA0C,CAA1C;MACH,CAHD,MAIK;QACD,KAAKe,MAAL,CAAYU,WAAZ,CAAwB;UAAEC,OAAO,EAAE;QAAX,CAAxB;MACH;IACJ,CARe,CAAhB;EASH;;EACDc,OAAO,GAAG;IACN,OAAOlE,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;MAChD,IAAI,KAAK8D,KAAT,EAAgB;QACZC,OAAO,CAACC,KAAR,CAAc,KAAKF,KAAnB,EAA0BrC,OAAO,CAACE,OAAlC,EAA2CC,MAAM,CAACC,QAAlD;QACAkC,OAAO,CAACE,MAAR,CAAe,KAAKH,KAApB,EAA2BrC,OAAO,CAACC,KAAnC,EAA0C,CAA1C;MACH,CAHD,MAIK;QACD,KAAKe,MAAL,CAAYU,WAAZ,CAAwB;UAAEC,OAAO,EAAE;QAAX,CAAxB;MACH;IACJ,CARe,CAAhB;EASH;;EACDe,IAAI,GAAG;IACH,OAAOnE,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;MAChD,IAAI,KAAK8D,KAAT,EAAgB;QACZC,OAAO,CAACC,KAAR,CAAc,KAAKF,KAAnB,EAA0BrC,OAAO,CAACE,OAAlC,EAA2CC,MAAM,CAACE,OAAlD;QACAiC,OAAO,CAACE,MAAR,CAAe,KAAKH,KAApB,EAA2BrC,OAAO,CAACC,KAAnC,EAA0C,CAA1C;MACH,CAHD,MAIK;QACD,IAAI;UACA,KAAKe,MAAL,CAAYU,WAAZ,CAAwB;YAAEC,OAAO,EAAE;UAAX,CAAxB;QACH,CAFD,CAGA,OAAOvC,CAAP,EAAU,CACT;MACJ;;MACD,KAAKuD,UAAL;IACH,CAbe,CAAhB;EAcH;;EACDvB,eAAe,CAACwB,KAAD,EAAQ;IACnB,IAAIC,EAAJ;;IACA,MAAMC,IAAI,GAAGF,KAAK,CAACE,IAAnB;;IACA,QAAQA,IAAI,CAACnB,OAAb;MACI,KAAK,OAAL;QACI,IAAI,CAACmB,IAAI,CAACC,MAAV,EAAkB;UACd,MAAM,IAAIC,KAAJ,CAAU,kBAAV,CAAN;QACH;;QACD,KAAKX,KAAL,GAAa,IAAIY,UAAJ,CAAeH,IAAI,CAACC,MAAL,CAAYV,KAA3B,CAAb;QACA,KAAKf,IAAL,CAAUI,WAAV,CAAsBoB,IAAtB;QACA;;MACJ,KAAK,SAAL;QACI,KAAK9B,MAAL,CAAYkC,SAAZ;QACA;;MACJ,KAAK,eAAL;MACA,KAAK,QAAL;QACI,KAAK5B,IAAL,CAAUI,WAAV,CAAsBoB,IAAtB;QACA;;MACJ,KAAK,KAAL;QACI,CAACD,EAAE,GAAG,KAAK3B,QAAX,MAAyB,IAAzB,IAAiC2B,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACM,YAAH,EAA1D;QACA;;MACJ,KAAK,YAAL;QACI,KAAK7B,IAAL,CAAUI,WAAV,CAAsBoB,IAAtB;QACA;;MACJ;QACI;IAtBR;EAwBH;;EACDvB,kBAAkB,CAACqB,KAAD,EAAQ;IACtB,IAAIC,EAAJ;;IACA,MAAMC,IAAI,GAAGF,KAAK,CAACE,IAAnB;;IACA,QAAQA,IAAI,CAACnB,OAAb;MACI,KAAK,KAAL;QACI,CAACkB,EAAE,GAAG,KAAK3B,QAAX,MAAyB,IAAzB,IAAiC2B,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACM,YAAH,EAA1D;QACA;;MACJ,KAAK,oBAAL;QACI,KAAKnC,MAAL,CAAYU,WAAZ,CAAwBoB,IAAxB;QACA;;MACJ;IAPJ;EASH;;AAzG0E;;AA2G/ElD,OAAO,CAACwD,OAAR,GAAkB9C,0BAAlB"},"metadata":{},"sourceType":"script"}