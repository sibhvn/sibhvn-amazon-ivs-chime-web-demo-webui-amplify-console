{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst DefaultTranscriptionController_1 = require(\"../transcript/DefaultTranscriptionController\");\n\nconst RealtimeState_1 = require(\"./RealtimeState\");\n\nconst RealtimeVolumeIndicator_1 = require(\"./RealtimeVolumeIndicator\");\n/**\n * [[DefaultRealtimeController]] is written to adhere to the following tenets to\n * make privacy and performance bugs significantly less likely.\n *\n * 1. Any call to the object is guaranteed to succeed from the caller's\n *    perspective to the maximum extent that this can be ensured. However, all\n *    failures of the object are reported as fatal errors. For example, if local\n *    mute fails, then that is a privacy issue and we must tear down the\n *    connection and try starting over.\n *\n * 2. State is owned by the object and is considered authoritative at all times.\n *    For example, if [[realtimeIsLocalAudioMuted]] is true then the user *is*\n *    muted.\n *\n * 3. Callbacks are fired synchronously and do their work synchronously. Any\n *    unnecessary asynchronous implementation only invites latency and\n *    increases the surface error for potential errors.\n *\n * 4. Mutation only occurs when state changes. All state-changing functions are\n *    idempotent.\n *\n * 5. Every conditional branch gets its own if statement and test coverage is\n *    100% for this object.\n *\n * 6. Function parameters and returns use primitives only (no classes or enums).\n *    This minimizes the number of dependencies that consumers have to take on\n *    and allows the object to be more easily wrapped. Values are normalized\n *    where possible.\n *\n * 7. The object takes no other non-realtime dependencies.\n *\n * 8. Interface functions begin with `realtime` to make boundaries between the\n *    RealtimeController interface and the UI or business logic explicit and\n *    auditable.\n *\n * 9. Local state overrides remote state but not vice-versa. For example, if\n *    locally muted with an active audio input and a remote state indicates the\n *    same user is unmuted because the muted state has not yet propagated, then\n *    the volume indicator update for the user would show the remote mute state\n *    as muted. However, if locally muted without an active audio input and a\n *    remote state indicates the user is unmuted (since they are dialed in), the\n *    remote state persists but does not override the local state so\n *    [[realtimeIsLocalAudioMuted]] still returns true.\n */\n\n\nclass DefaultRealtimeController {\n  constructor(transcriptionController) {\n    this.state = new RealtimeState_1.default();\n    this._transcriptionController = transcriptionController || new DefaultTranscriptionController_1.default(this);\n  }\n\n  realtimeSetLocalAttendeeId(attendeeId, externalUserId) {\n    this.state.localAttendeeId = attendeeId;\n    this.state.localExternalUserId = externalUserId;\n  }\n\n  realtimeSetAttendeeIdPresence(attendeeId, present, externalUserId, dropped, posInFrame) {\n    try {\n      if (present) {\n        this.state.attendeeIdToExternalUserId[attendeeId] = externalUserId;\n      }\n\n      for (const fn of this.state.attendeeIdChangesCallbacks) {\n        fn(attendeeId, present, externalUserId, dropped, posInFrame);\n      }\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeSubscribeToAttendeeIdPresence(callback) {\n    try {\n      this.state.attendeeIdChangesCallbacks.push(callback);\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeUnsubscribeToAttendeeIdPresence(callback) {\n    try {\n      const index = this.state.attendeeIdChangesCallbacks.indexOf(callback);\n\n      if (index !== -1) {\n        this.state.attendeeIdChangesCallbacks.splice(index, 1);\n      }\n    } catch (e) {\n      this.onError(e);\n    }\n  } // Audio Input\n\n\n  realtimeSetLocalAudioInput(audioInput) {\n    try {\n      if (this.state.audioInput === audioInput) {\n        return;\n      }\n\n      this.setAudioInputEnabled(false);\n      this.state.audioInput = audioInput;\n      this.setAudioInputEnabled(!this.state.muted);\n    } catch (e) {\n      this.onError(e);\n    }\n  } // Muting\n\n\n  realtimeSetCanUnmuteLocalAudio(canUnmute) {\n    try {\n      if (this.state.canUnmute === canUnmute) {\n        return;\n      }\n\n      this.state.canUnmute = canUnmute;\n\n      for (const fn of this.state.setCanUnmuteLocalAudioCallbacks) {\n        fn(canUnmute);\n      }\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeSubscribeToSetCanUnmuteLocalAudio(callback) {\n    try {\n      this.state.setCanUnmuteLocalAudioCallbacks.push(callback);\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeUnsubscribeToSetCanUnmuteLocalAudio(callback) {\n    try {\n      const index = this.state.setCanUnmuteLocalAudioCallbacks.indexOf(callback);\n\n      if (index !== -1) {\n        this.state.setCanUnmuteLocalAudioCallbacks.splice(index, 1);\n      }\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeCanUnmuteLocalAudio() {\n    return this.state.canUnmute;\n  }\n\n  realtimeMuteLocalAudio() {\n    if (this.state.muted) {\n      return;\n    }\n\n    try {\n      this.setAudioInputEnabled(false);\n      this.state.muted = true;\n      this.realtimeUpdateVolumeIndicator(this.state.localAttendeeId, null, null, null, this.state.localExternalUserId);\n\n      for (const fn of this.state.muteAndUnmuteLocalAudioCallbacks) {\n        fn(true);\n      }\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeUnmuteLocalAudio() {\n    if (!this.state.muted) {\n      return true;\n    }\n\n    if (!this.state.canUnmute) {\n      return false;\n    }\n\n    try {\n      this.setAudioInputEnabled(true);\n      this.state.muted = false;\n      this.realtimeUpdateVolumeIndicator(this.state.localAttendeeId, null, null, null, this.state.localExternalUserId);\n\n      for (const fn of this.state.muteAndUnmuteLocalAudioCallbacks) {\n        fn(false);\n      }\n\n      return true;\n    } catch (e) {\n      this.onError(e);\n      return false;\n    }\n  }\n\n  realtimeSubscribeToMuteAndUnmuteLocalAudio(callback) {\n    try {\n      this.state.muteAndUnmuteLocalAudioCallbacks.push(callback);\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeUnsubscribeToMuteAndUnmuteLocalAudio(callback) {\n    try {\n      const index = this.state.muteAndUnmuteLocalAudioCallbacks.indexOf(callback);\n\n      if (index !== -1) {\n        this.state.muteAndUnmuteLocalAudioCallbacks.splice(index, 1);\n      }\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeIsLocalAudioMuted() {\n    return this.state.muted;\n  } // Volume Indicators\n\n\n  realtimeSubscribeToVolumeIndicator(attendeeId, callback) {\n    try {\n      if (!this.state.volumeIndicatorCallbacks.hasOwnProperty(attendeeId)) {\n        this.state.volumeIndicatorCallbacks[attendeeId] = [];\n      }\n\n      this.state.volumeIndicatorCallbacks[attendeeId].push(callback);\n      this.sendVolumeIndicatorChange(attendeeId, true, true, true, this.state.attendeeIdToExternalUserId[attendeeId]);\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeUnsubscribeFromVolumeIndicator(attendeeId, callback) {\n    try {\n      if (callback) {\n        const index = this.state.volumeIndicatorCallbacks[attendeeId].indexOf(callback);\n\n        if (index !== -1) {\n          this.state.volumeIndicatorCallbacks[attendeeId].splice(index, 1);\n        }\n      } else {\n        delete this.state.volumeIndicatorCallbacks[attendeeId];\n      }\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeUpdateVolumeIndicator(attendeeId, volume, muted, signalStrength, externalUserId) {\n    try {\n      muted = this.applyLocalMuteOverride(attendeeId, muted);\n      const state = this.getVolumeIndicatorState(attendeeId);\n      let volumeUpdated = false;\n      let mutedUpdated = false;\n      let signalStrengthUpdated = false;\n\n      if (muted !== null) {\n        if (state.muted !== muted) {\n          state.muted = muted;\n          mutedUpdated = true;\n\n          if (state.muted && state.volume !== 0.0) {\n            state.volume = 0.0;\n            volumeUpdated = true;\n          }\n        }\n      }\n\n      if (!state.muted && volume !== null) {\n        if (state.volume !== volume) {\n          state.volume = volume;\n          volumeUpdated = true;\n        }\n\n        if (state.muted === null) {\n          state.muted = false;\n          mutedUpdated = true;\n        }\n      }\n\n      if (signalStrength !== null) {\n        if (state.signalStrength !== signalStrength) {\n          state.signalStrength = signalStrength;\n          signalStrengthUpdated = true;\n        }\n      }\n\n      this.sendVolumeIndicatorChange(attendeeId, volumeUpdated, mutedUpdated, signalStrengthUpdated, externalUserId);\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeSubscribeToLocalSignalStrengthChange(callback) {\n    try {\n      this.state.localSignalStrengthChangeCallbacks.push(callback);\n\n      if (this.state.localAttendeeId === null) {\n        return;\n      }\n\n      this.sendLocalSignalStrengthChange(this.state.localAttendeeId, true);\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeUnsubscribeToLocalSignalStrengthChange(callback) {\n    try {\n      const index = this.state.localSignalStrengthChangeCallbacks.indexOf(callback);\n\n      if (index !== -1) {\n        this.state.localSignalStrengthChangeCallbacks.splice(index, 1);\n      }\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeSubscribeToSendDataMessage( // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  callback) {\n    try {\n      this.state.sendDataMessageCallbacks.push(callback);\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeUnsubscribeFromSendDataMessage( // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  callback) {\n    try {\n      const index = this.state.sendDataMessageCallbacks.indexOf(callback);\n\n      if (index !== -1) {\n        this.state.sendDataMessageCallbacks.splice(index, 1);\n      }\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeSendDataMessage(topic, data, // eslint-disable-line @typescript-eslint/no-explicit-any\n  lifetimeMs) {\n    try {\n      for (const fn of this.state.sendDataMessageCallbacks) {\n        fn(topic, data, lifetimeMs);\n      }\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeSubscribeToReceiveDataMessage(topic, callback) {\n    try {\n      if (this.state.receiveDataMessageCallbacks.has(topic)) {\n        this.state.receiveDataMessageCallbacks.get(topic).push(callback);\n      } else {\n        this.state.receiveDataMessageCallbacks.set(topic, [callback]);\n      }\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeUnsubscribeFromReceiveDataMessage(topic) {\n    try {\n      this.state.receiveDataMessageCallbacks.delete(topic);\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeReceiveDataMessage(dataMessage) {\n    try {\n      if (this.state.receiveDataMessageCallbacks.has(dataMessage.topic)) {\n        for (const fn of this.state.receiveDataMessageCallbacks.get(dataMessage.topic)) {\n          fn(dataMessage);\n        }\n      }\n    } catch (e) {\n      this.onError(e);\n    }\n  } // Error Handling\n\n\n  realtimeSubscribeToFatalError(callback) {\n    try {\n      this.state.fatalErrorCallbacks.push(callback);\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeUnsubscribeToFatalError(callback) {\n    try {\n      const index = this.state.fatalErrorCallbacks.indexOf(callback);\n\n      if (index !== -1) {\n        this.state.fatalErrorCallbacks.splice(index, 1);\n      }\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  get transcriptionController() {\n    return this._transcriptionController;\n  } // Internals\n\n\n  setAudioInputEnabled(enabled) {\n    if (!this.state.audioInput) {\n      return;\n    }\n\n    for (const track of this.state.audioInput.getTracks()) {\n      if (track.enabled === enabled) {\n        continue;\n      }\n\n      track.enabled = enabled;\n    }\n  }\n\n  applyLocalMuteOverride(attendeeIdRemote, mutedRemote) {\n    const attendeeIdLocal = this.state.localAttendeeId;\n    const mutedLocal = this.state.muted;\n\n    if (attendeeIdRemote !== attendeeIdLocal) {\n      return mutedRemote;\n    }\n\n    if (this.state.audioInput === null) {\n      return mutedRemote;\n    }\n\n    return mutedLocal;\n  }\n\n  sendVolumeIndicatorChange(attendeeId, volumeUpdated, mutedUpdated, signalStrengthUpdated, externalUserId) {\n    this.sendLocalSignalStrengthChange(attendeeId, signalStrengthUpdated);\n\n    if (!this.state.volumeIndicatorCallbacks.hasOwnProperty(attendeeId)) {\n      return;\n    }\n\n    const state = this.getVolumeIndicatorState(attendeeId);\n    const updateState = new RealtimeVolumeIndicator_1.default();\n\n    if (volumeUpdated) {\n      updateState.volume = state.volume;\n    }\n\n    if (mutedUpdated) {\n      updateState.muted = state.muted;\n    }\n\n    if (signalStrengthUpdated) {\n      updateState.signalStrength = state.signalStrength;\n    }\n\n    if (this.stateIsEmpty(updateState)) {\n      return;\n    }\n\n    for (const fn of this.state.volumeIndicatorCallbacks[attendeeId]) {\n      fn(attendeeId, updateState.volume, updateState.muted, updateState.signalStrength, externalUserId);\n    }\n  }\n\n  sendLocalSignalStrengthChange(attendeeId, signalStrengthUpdated) {\n    if (!signalStrengthUpdated) {\n      return;\n    }\n\n    if (attendeeId !== this.state.localAttendeeId) {\n      return;\n    }\n\n    const state = this.getVolumeIndicatorState(attendeeId);\n    const signalStrength = state.signalStrength;\n\n    if (signalStrength === null) {\n      return;\n    }\n\n    for (const fn of this.state.localSignalStrengthChangeCallbacks) {\n      fn(signalStrength);\n    }\n  }\n\n  getVolumeIndicatorState(id) {\n    if (!this.state.volumeIndicatorState.hasOwnProperty(id)) {\n      this.state.volumeIndicatorState[id] = new RealtimeVolumeIndicator_1.default();\n    }\n\n    return this.state.volumeIndicatorState[id];\n  }\n\n  stateIsEmpty(state) {\n    return state.volume === null && state.muted === null && state.signalStrength === null;\n  }\n\n  onError(error) {\n    try {\n      // 1) try the fatal error callbacks so that the issue is reported in\n      //    logs and to give the handler a chance to clean up and reset.\n      for (const callback of this.state.fatalErrorCallbacks) {\n        callback(error);\n      }\n    } catch (eventError) {\n      try {\n        // 2) if the error event fails, fall back to console.error so that\n        //    it at least prints out to the console before moving on.\n        console.error(error);\n        console.error(eventError);\n      } catch (consoleError) {// 3) if all else fails, swallow the error and give up to guarantee\n        //    that the API call returns cleanly.\n      }\n    }\n  }\n\n}\n\nexports.default = DefaultRealtimeController;","map":{"version":3,"mappings":"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","names":["DefaultRealtimeController","constructor","transcriptionController","RealtimeState_1","_transcriptionController","DefaultTranscriptionController_1","realtimeSetLocalAttendeeId","attendeeId","externalUserId","state","localAttendeeId","localExternalUserId","realtimeSetAttendeeIdPresence","present","dropped","posInFrame","attendeeIdToExternalUserId","fn","attendeeIdChangesCallbacks","e","onError","realtimeSubscribeToAttendeeIdPresence","callback","push","realtimeUnsubscribeToAttendeeIdPresence","index","indexOf","splice","realtimeSetLocalAudioInput","audioInput","setAudioInputEnabled","muted","realtimeSetCanUnmuteLocalAudio","canUnmute","setCanUnmuteLocalAudioCallbacks","realtimeSubscribeToSetCanUnmuteLocalAudio","realtimeUnsubscribeToSetCanUnmuteLocalAudio","realtimeCanUnmuteLocalAudio","realtimeMuteLocalAudio","realtimeUpdateVolumeIndicator","muteAndUnmuteLocalAudioCallbacks","realtimeUnmuteLocalAudio","realtimeSubscribeToMuteAndUnmuteLocalAudio","realtimeUnsubscribeToMuteAndUnmuteLocalAudio","realtimeIsLocalAudioMuted","realtimeSubscribeToVolumeIndicator","volumeIndicatorCallbacks","hasOwnProperty","sendVolumeIndicatorChange","realtimeUnsubscribeFromVolumeIndicator","volume","signalStrength","applyLocalMuteOverride","getVolumeIndicatorState","volumeUpdated","mutedUpdated","signalStrengthUpdated","realtimeSubscribeToLocalSignalStrengthChange","localSignalStrengthChangeCallbacks","sendLocalSignalStrengthChange","realtimeUnsubscribeToLocalSignalStrengthChange","realtimeSubscribeToSendDataMessage","sendDataMessageCallbacks","realtimeUnsubscribeFromSendDataMessage","realtimeSendDataMessage","topic","data","lifetimeMs","realtimeSubscribeToReceiveDataMessage","receiveDataMessageCallbacks","has","get","set","realtimeUnsubscribeFromReceiveDataMessage","delete","realtimeReceiveDataMessage","dataMessage","realtimeSubscribeToFatalError","fatalErrorCallbacks","realtimeUnsubscribeToFatalError","enabled","track","getTracks","attendeeIdRemote","mutedRemote","attendeeIdLocal","mutedLocal","updateState","RealtimeVolumeIndicator_1","stateIsEmpty","id","volumeIndicatorState","error","eventError","console","consoleError","exports"],"sourceRoot":"","sources":["../../src/realtimecontroller/DefaultRealtimeController.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}