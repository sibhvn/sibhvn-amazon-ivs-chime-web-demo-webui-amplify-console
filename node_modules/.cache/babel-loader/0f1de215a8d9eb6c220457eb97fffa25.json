{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n *\n * [[ApplicationMetadata]] contains application metadata such as application name and version.\n * Amazon Chime SDK for JavaScript allows builders to provide application metadata in\n * the meeting session configuration. This field is optional. Amazon Chime uses application metadata to\n * analyze meeting health trends or identify common failures to improve your meeting experience.\n *\n * Do not pass any Personal Identifiable Information (PII).\n *\n * ```js\n * import { MeetingSessionConfiguration, ApplicationMetadata } from 'amazon-chime-sdk-js';\n *\n * const createMeetingResponse = // CreateMeeting API response.\n * const createAttendeeResponse = // CreateAttendee API response.\n * const meetingSessionConfiguration = new MeetingSessionConfiguration(\n *  createMeetingResponse,\n *  createAttendeeResponse\n * );\n *\n * meetingSessionConfiguration.applicationMetadata = ApplicationMetadata.create({\n *  appName: 'AppName',\n *  appVersion: '1.0.0'\n * });\n *\n * ```\n */\n\nclass ApplicationMetadata {\n  constructor(appName, appVersion) {\n    this.appName = appName;\n    this.appVersion = appVersion;\n  }\n  /**\n   *\n   * @param appName Builder's application name.\n   * The app name must satisfy following regular expression:\n   * `/^[a-zA-Z0-9]+[a-zA-Z0-9_-]*[a-zA-Z0-9]+$/g`\n   *\n   * @param appVersion Builder's application version.\n   * The app version must follow the [Semantic Versioning](https://semver.org/) format.\n   *\n   * @returns [[ApplicationMetadata]]\n   */\n\n\n  static create(appName, appVersion) {\n    const APP_NAME_REGEX = /^[a-zA-Z0-9]+[a-zA-Z0-9_-]*[a-zA-Z0-9]+$/g;\n\n    if (!appName || appName.length > 32) {\n      throw new Error(`appName should be a valid string and 1 to 32 characters in length`);\n    }\n\n    if (!APP_NAME_REGEX.test(appName)) {\n      throw new Error(`appName must satisfy ${APP_NAME_REGEX} regular expression`);\n    }\n\n    const APP_VERSION_REGEX = /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/gm;\n\n    if (!appVersion || appVersion.length > 32) {\n      throw new Error(`appVersion should be a valid string and 1 to 32 characters in length`);\n    }\n\n    if (!APP_VERSION_REGEX.test(appVersion)) {\n      throw new Error(`appVersion must satisfy Semantic Versioning format`);\n    }\n\n    return new ApplicationMetadata(appName, appVersion);\n  }\n\n}\n\nexports.default = ApplicationMetadata;","map":{"version":3,"mappings":"cAAA;AACA;;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,MAAqBA,mBAArB,CAAwC;EACtCC,YAAoCC,OAApC,EAAqEC,UAArE,EAAuF;IAAnD;IAAiC;EAAsB;EAC3F;;;;;;;;;;;;;EAWa,OAANC,MAAM,CAACF,OAAD,EAAkBC,UAAlB,EAAoC;IAC/C,MAAME,cAAc,GAAG,2CAAvB;;IACA,IAAI,CAACH,OAAD,IAAYA,OAAO,CAACI,MAAR,GAAiB,EAAjC,EAAqC;MACnC,MAAM,IAAIC,KAAJ,CAAU,mEAAV,CAAN;IACD;;IACD,IAAI,CAACF,cAAc,CAACG,IAAf,CAAoBN,OAApB,CAAL,EAAmC;MACjC,MAAM,IAAIK,KAAJ,CAAU,wBAAwBF,cAAc,qBAAhD,CAAN;IACD;;IAED,MAAMI,iBAAiB,GAAG,uLAA1B;;IACA,IAAI,CAACN,UAAD,IAAeA,UAAU,CAACG,MAAX,GAAoB,EAAvC,EAA2C;MACzC,MAAM,IAAIC,KAAJ,CAAU,sEAAV,CAAN;IACD;;IACD,IAAI,CAACE,iBAAiB,CAACD,IAAlB,CAAuBL,UAAvB,CAAL,EAAyC;MACvC,MAAM,IAAII,KAAJ,CAAU,oDAAV,CAAN;IACD;;IACD,OAAO,IAAIP,mBAAJ,CAAwBE,OAAxB,EAAiCC,UAAjC,CAAP;EACD;;AA9BqC;;AAAxCO","names":["ApplicationMetadata","constructor","appName","appVersion","create","APP_NAME_REGEX","length","Error","test","APP_VERSION_REGEX","exports"],"sourceRoot":"","sources":["../../src/applicationmetadata/ApplicationMetadata.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}