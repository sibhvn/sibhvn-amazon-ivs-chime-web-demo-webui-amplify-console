{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DestroyableNoOpDeviceController = void 0;\n\nconst NoOpMediaStreamBroker_1 = require(\"../mediastreambroker/NoOpMediaStreamBroker\");\n\nclass NoOpDeviceController extends NoOpMediaStreamBroker_1.default {\n  constructor(_options) {\n    super();\n  }\n\n  listAudioInputDevices() {\n    return Promise.resolve([]);\n  }\n\n  listVideoInputDevices() {\n    return Promise.resolve([]);\n  }\n\n  listAudioOutputDevices() {\n    return Promise.resolve([]);\n  }\n\n  chooseAudioInputDevice(_device) {\n    return Promise.reject();\n  }\n\n  chooseVideoInputDevice(_device) {\n    return Promise.reject();\n  }\n\n  chooseAudioOutputDevice(_deviceId) {\n    return Promise.reject();\n  }\n\n  addDeviceChangeObserver(_observer) {}\n\n  removeDeviceChangeObserver(_observer) {}\n\n  createAnalyserNodeForAudioInput() {\n    return null;\n  }\n\n  startVideoPreviewForVideoInput(_element) {}\n\n  stopVideoPreviewForVideoInput(_element) {}\n\n  setDeviceLabelTrigger(_trigger) {}\n\n  mixIntoAudioInput(_stream) {\n    return null;\n  }\n\n  chooseVideoInputQuality(_width, _height, _frameRate, _maxBandwidthKbps) {}\n\n  getVideoInputQualitySettings() {\n    return null;\n  }\n\n}\n\nexports.default = NoOpDeviceController;\n\nclass DestroyableNoOpDeviceController extends NoOpDeviceController {\n  constructor() {\n    super(...arguments);\n    this.destroyed = false;\n  }\n\n  destroy() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.destroyed = true;\n    });\n  }\n\n}\n\nexports.DestroyableNoOpDeviceController = DestroyableNoOpDeviceController;","map":{"version":3,"mappings":"cAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;;AAMA,MAAqBA,oBAArB,SACUC,+BADV,CAC+B;EAE7BC,YAAYC,QAAZ,EAAmD;IACjD;EACD;;EAEDC,qBAAqB;IACnB,OAAOC,OAAO,CAACC,OAAR,CAAgB,EAAhB,CAAP;EACD;;EAEDC,qBAAqB;IACnB,OAAOF,OAAO,CAACC,OAAR,CAAgB,EAAhB,CAAP;EACD;;EAEDE,sBAAsB;IACpB,OAAOH,OAAO,CAACC,OAAR,CAAgB,EAAhB,CAAP;EACD;;EAEDG,sBAAsB,CAACC,OAAD,EAA0B;IAC9C,OAAOL,OAAO,CAACM,MAAR,EAAP;EACD;;EAEDC,sBAAsB,CAACF,OAAD,EAA0B;IAC9C,OAAOL,OAAO,CAACM,MAAR,EAAP;EACD;;EAEDE,uBAAuB,CAACC,SAAD,EAAyB;IAC9C,OAAOT,OAAO,CAACM,MAAR,EAAP;EACD;;EAEDI,uBAAuB,CAACC,SAAD,EAAgC,CAAU;;EAEjEC,0BAA0B,CAACD,SAAD,EAAgC,CAAU;;EAEpEE,+BAA+B;IAC7B,OAAO,IAAP;EACD;;EAEDC,8BAA8B,CAACC,QAAD,EAA2B,CAAU;;EAEnEC,6BAA6B,CAACD,QAAD,EAA2B,CAAU;;EAElEE,qBAAqB,CAACC,QAAD,EAAqC,CAAU;;EAEpEC,iBAAiB,CAACC,OAAD,EAAqB;IACpC,OAAO,IAAP;EACD;;EAEDC,uBAAuB,CACrBC,MADqB,EAErBC,OAFqB,EAGrBC,UAHqB,EAIrBC,iBAJqB,EAII,CACjB;;EAEVC,4BAA4B;IAC1B,OAAO,IAAP;EACD;;AAzD4B;;AAD/BC;;AA6DA,MAAaC,+BAAb,SAAqDjC,oBAArD,CAAyE;EAAzEE;;IACE,iBAAY,KAAZ;EAID;;EAHOgC,OAAO;;MACX,KAAKC,SAAL,GAAiB,IAAjB;IACD;EAAA;;AAJsE;;AAAzEH","names":["NoOpDeviceController","NoOpMediaStreamBroker_1","constructor","_options","listAudioInputDevices","Promise","resolve","listVideoInputDevices","listAudioOutputDevices","chooseAudioInputDevice","_device","reject","chooseVideoInputDevice","chooseAudioOutputDevice","_deviceId","addDeviceChangeObserver","_observer","removeDeviceChangeObserver","createAnalyserNodeForAudioInput","startVideoPreviewForVideoInput","_element","stopVideoPreviewForVideoInput","setDeviceLabelTrigger","_trigger","mixIntoAudioInput","_stream","chooseVideoInputQuality","_width","_height","_frameRate","_maxBandwidthKbps","getVideoInputQualitySettings","exports","DestroyableNoOpDeviceController","destroy","destroyed"],"sourceRoot":"","sources":["../../src/devicecontroller/NoOpDeviceController.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}