{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst VideoTransformDevice_1 = require(\"../devicecontroller/VideoTransformDevice\");\n\nclass DefaultAudioVideoFacade {\n  constructor(audioVideoController, videoTileController, realtimeController, audioMixController, deviceController, contentShareController) {\n    this.audioVideoController = audioVideoController;\n    this.videoTileController = videoTileController;\n    this.realtimeController = realtimeController;\n    this.audioMixController = audioMixController;\n    this.deviceController = deviceController;\n    this.contentShareController = contentShareController;\n  }\n\n  addObserver(observer) {\n    this.audioVideoController.addObserver(observer);\n    this.trace('addObserver');\n  }\n\n  removeObserver(observer) {\n    this.audioVideoController.removeObserver(observer);\n    this.trace('removeObserver');\n  }\n\n  setAudioProfile(audioProfile) {\n    this.trace('setAudioProfile', audioProfile);\n    this.audioVideoController.setAudioProfile(audioProfile);\n  }\n\n  start(options) {\n    this.audioVideoController.start(options);\n    this.trace('start');\n  }\n\n  stop() {\n    this.audioVideoController.stop();\n    this.trace('stop');\n  }\n\n  getRTCPeerConnectionStats(selector) {\n    this.trace('getRTCPeerConnectionStats', selector ? selector.id : null);\n    return this.audioVideoController.getRTCPeerConnectionStats(selector);\n  }\n\n  bindAudioElement(element) {\n    const result = this.audioMixController.bindAudioElement(element);\n    this.trace('bindAudioElement', element.id, result);\n    return result;\n  }\n\n  unbindAudioElement() {\n    this.audioMixController.unbindAudioElement();\n    this.trace('unbindAudioElement');\n  }\n\n  getCurrentMeetingAudioStream() {\n    this.trace('getCurrentConferenceStream');\n    return this.audioMixController.getCurrentMeetingAudioStream();\n  }\n\n  addAudioMixObserver(observer) {\n    this.trace('addAudioMixObserver');\n    this.audioMixController.addAudioMixObserver(observer);\n  }\n\n  removeAudioMixObserver(observer) {\n    this.trace('removeAudioMixObserver');\n    this.audioMixController.removeAudioMixObserver(observer);\n  }\n\n  bindVideoElement(tileId, videoElement) {\n    this.videoTileController.bindVideoElement(tileId, videoElement);\n    this.trace('bindVideoElement', {\n      tileId: tileId,\n      videoElementId: videoElement.id\n    });\n  }\n\n  unbindVideoElement(tileId) {\n    this.videoTileController.unbindVideoElement(tileId);\n    this.trace('unbindVideoElement', tileId);\n  }\n\n  startLocalVideoTile() {\n    const result = this.videoTileController.startLocalVideoTile();\n    this.trace('startLocalVideoTile', null, result);\n    return result;\n  }\n\n  stopLocalVideoTile() {\n    this.videoTileController.stopLocalVideoTile();\n    this.trace('stopLocalVideoTile');\n  }\n\n  hasStartedLocalVideoTile() {\n    const result = this.videoTileController.hasStartedLocalVideoTile();\n    this.trace('hasStartedLocalVideoTile', null, result);\n    return result;\n  }\n\n  removeLocalVideoTile() {\n    this.videoTileController.removeLocalVideoTile();\n    this.trace('removeLocalVideoTile');\n  }\n\n  getLocalVideoTile() {\n    const result = this.videoTileController.getLocalVideoTile();\n    this.trace('getLocalVideoTile');\n    return result;\n  }\n\n  pauseVideoTile(tileId) {\n    this.videoTileController.pauseVideoTile(tileId);\n    this.trace('pauseVideoTile', tileId);\n  }\n\n  unpauseVideoTile(tileId) {\n    this.videoTileController.unpauseVideoTile(tileId);\n    this.trace('unpauseVideoTile', tileId);\n  }\n\n  getVideoTile(tileId) {\n    const result = this.videoTileController.getVideoTile(tileId);\n    this.trace('getVideoTile', tileId);\n    return result;\n  }\n\n  getAllRemoteVideoTiles() {\n    const result = this.videoTileController.getAllRemoteVideoTiles();\n    this.trace('getAllRemoteVideoTiles');\n    return result;\n  }\n\n  getAllVideoTiles() {\n    const result = this.videoTileController.getAllVideoTiles();\n    this.trace('getAllVideoTiles');\n    return result;\n  }\n\n  addVideoTile() {\n    const result = this.videoTileController.addVideoTile();\n    this.trace('addVideoTile', null, result.state());\n    return result;\n  }\n\n  removeVideoTile(tileId) {\n    this.videoTileController.removeVideoTile(tileId);\n    this.trace('removeVideoTile', tileId);\n  }\n\n  removeVideoTilesByAttendeeId(attendeeId) {\n    const result = this.videoTileController.removeVideoTilesByAttendeeId(attendeeId);\n    this.trace('removeVideoTilesByAttendeeId', attendeeId, result);\n    return result;\n  }\n\n  removeAllVideoTiles() {\n    this.videoTileController.removeAllVideoTiles();\n    this.trace('removeAllVideoTiles');\n  }\n\n  captureVideoTile(tileId) {\n    const result = this.videoTileController.captureVideoTile(tileId);\n    this.trace('captureVideoTile', tileId);\n    return result;\n  }\n\n  realtimeSubscribeToAttendeeIdPresence(callback) {\n    this.realtimeController.realtimeSubscribeToAttendeeIdPresence(callback);\n    this.trace('realtimeSubscribeToAttendeeIdPresence');\n  }\n\n  realtimeUnsubscribeToAttendeeIdPresence(callback) {\n    this.realtimeController.realtimeUnsubscribeToAttendeeIdPresence(callback);\n    this.trace('realtimeUnsubscribeToAttendeeIdPresence');\n  }\n\n  realtimeSetCanUnmuteLocalAudio(canUnmute) {\n    this.realtimeController.realtimeSetCanUnmuteLocalAudio(canUnmute);\n    this.trace('realtimeSetCanUnmuteLocalAudio', canUnmute);\n  }\n\n  realtimeSubscribeToSetCanUnmuteLocalAudio(callback) {\n    this.realtimeController.realtimeSubscribeToSetCanUnmuteLocalAudio(callback);\n    this.trace('realtimeSubscribeToSetCanUnmuteLocalAudio');\n  }\n\n  realtimeUnsubscribeToSetCanUnmuteLocalAudio(callback) {\n    this.realtimeController.realtimeUnsubscribeToSetCanUnmuteLocalAudio(callback);\n  }\n\n  realtimeCanUnmuteLocalAudio() {\n    const result = this.realtimeController.realtimeCanUnmuteLocalAudio();\n    this.trace('realtimeCanUnmuteLocalAudio', null, result);\n    return result;\n  }\n\n  realtimeMuteLocalAudio() {\n    this.realtimeController.realtimeMuteLocalAudio();\n    this.trace('realtimeMuteLocalAudio');\n  }\n\n  realtimeUnmuteLocalAudio() {\n    const result = this.realtimeController.realtimeUnmuteLocalAudio();\n    this.trace('realtimeUnmuteLocalAudio');\n    return result;\n  }\n\n  realtimeSubscribeToMuteAndUnmuteLocalAudio(callback) {\n    this.realtimeController.realtimeSubscribeToMuteAndUnmuteLocalAudio(callback);\n    this.trace('realtimeSubscribeToMuteAndUnmuteLocalAudio');\n  }\n\n  realtimeUnsubscribeToMuteAndUnmuteLocalAudio(callback) {\n    this.realtimeController.realtimeUnsubscribeToMuteAndUnmuteLocalAudio(callback);\n  }\n\n  realtimeIsLocalAudioMuted() {\n    const result = this.realtimeController.realtimeIsLocalAudioMuted();\n    this.trace('realtimeIsLocalAudioMuted');\n    return result;\n  }\n\n  realtimeSubscribeToVolumeIndicator(attendeeId, callback) {\n    this.realtimeController.realtimeSubscribeToVolumeIndicator(attendeeId, callback);\n    this.trace('realtimeSubscribeToVolumeIndicator', attendeeId);\n  }\n\n  realtimeUnsubscribeFromVolumeIndicator(attendeeId, callback) {\n    this.realtimeController.realtimeUnsubscribeFromVolumeIndicator(attendeeId, callback);\n    this.trace('realtimeUnsubscribeFromVolumeIndicator', attendeeId, callback);\n  }\n\n  realtimeSubscribeToLocalSignalStrengthChange(callback) {\n    this.realtimeController.realtimeSubscribeToLocalSignalStrengthChange(callback);\n    this.trace('realtimeSubscribeToLocalSignalStrengthChange');\n  }\n\n  realtimeUnsubscribeToLocalSignalStrengthChange(callback) {\n    this.realtimeController.realtimeUnsubscribeToLocalSignalStrengthChange(callback);\n    this.trace('realtimeUnsubscribeToLocalSignalStrengthChange');\n  }\n\n  realtimeSendDataMessage(topic, // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  data, lifetimeMs) {\n    this.realtimeController.realtimeSendDataMessage(topic, data, lifetimeMs);\n    this.trace('realtimeSendDataMessage');\n  }\n\n  realtimeSubscribeToReceiveDataMessage(topic, callback) {\n    this.realtimeController.realtimeSubscribeToReceiveDataMessage(topic, callback);\n    this.trace('realtimeSubscribeToReceiveDataMessage');\n  }\n\n  realtimeUnsubscribeFromReceiveDataMessage(topic) {\n    this.realtimeController.realtimeUnsubscribeFromReceiveDataMessage(topic);\n    this.trace('realtimeUnsubscribeFromReceiveDataMessage');\n  }\n\n  realtimeSubscribeToFatalError(callback) {\n    this.realtimeController.realtimeSubscribeToFatalError(callback);\n  }\n\n  realtimeUnsubscribeToFatalError(callback) {\n    this.realtimeController.realtimeUnsubscribeToFatalError(callback);\n  }\n\n  subscribeToActiveSpeakerDetector(policy, callback, scoresCallback, scoresCallbackIntervalMs) {\n    this.audioVideoController.activeSpeakerDetector.subscribe(policy, callback, scoresCallback, scoresCallbackIntervalMs);\n    this.trace('subscribeToActiveSpeakerDetector');\n  }\n\n  unsubscribeFromActiveSpeakerDetector(callback) {\n    this.audioVideoController.activeSpeakerDetector.unsubscribe(callback);\n    this.trace('unsubscribeFromActiveSpeakerDetector');\n  }\n\n  listAudioInputDevices() {\n    let forceUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return __awaiter(this, void 0, void 0, function* () {\n      const result = yield this.deviceController.listAudioInputDevices(forceUpdate);\n      this.trace('listAudioInputDevices', forceUpdate, result);\n      return result;\n    });\n  }\n\n  listVideoInputDevices() {\n    let forceUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return __awaiter(this, void 0, void 0, function* () {\n      const result = yield this.deviceController.listVideoInputDevices(forceUpdate);\n      this.trace('listVideoInputDevices', forceUpdate, result);\n      return result;\n    });\n  }\n\n  listAudioOutputDevices() {\n    let forceUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return __awaiter(this, void 0, void 0, function* () {\n      const result = yield this.deviceController.listAudioOutputDevices(forceUpdate);\n      this.trace('listAudioOutputDevices', forceUpdate, result);\n      return result;\n    });\n  }\n\n  chooseAudioInputDevice(device) {\n    this.trace('chooseAudioInputDevice', device);\n    return this.deviceController.chooseAudioInputDevice(device);\n  }\n\n  chooseVideoInputDevice(device) {\n    if (VideoTransformDevice_1.isVideoTransformDevice(device)) {\n      // Don't stringify the device to avoid failures when cyclic object references are present.\n      this.trace('chooseVideoInputDevice with transform device');\n    } else {\n      this.trace('chooseVideoInputDevice', device);\n    }\n\n    return this.deviceController.chooseVideoInputDevice(device);\n  }\n\n  chooseAudioOutputDevice(deviceId) {\n    const result = this.deviceController.chooseAudioOutputDevice(deviceId);\n    this.trace('chooseAudioOutputDevice', deviceId);\n    return result;\n  }\n\n  addDeviceChangeObserver(observer) {\n    this.deviceController.addDeviceChangeObserver(observer);\n    this.trace('addDeviceChangeObserver');\n  }\n\n  removeDeviceChangeObserver(observer) {\n    this.deviceController.removeDeviceChangeObserver(observer);\n    this.trace('removeDeviceChangeObserver');\n  }\n\n  createAnalyserNodeForAudioInput() {\n    const result = this.deviceController.createAnalyserNodeForAudioInput();\n    this.trace('createAnalyserNodeForAudioInput');\n    return result;\n  }\n\n  startVideoPreviewForVideoInput(element) {\n    this.deviceController.startVideoPreviewForVideoInput(element);\n    this.trace('startVideoPreviewForVideoInput', element.id);\n  }\n\n  stopVideoPreviewForVideoInput(element) {\n    this.deviceController.stopVideoPreviewForVideoInput(element);\n    this.trace('stopVideoPreviewForVideoInput', element.id);\n  }\n\n  setDeviceLabelTrigger(trigger) {\n    this.deviceController.setDeviceLabelTrigger(trigger);\n    this.trace('setDeviceLabelTrigger');\n  }\n\n  mixIntoAudioInput(stream) {\n    const result = this.deviceController.mixIntoAudioInput(stream);\n    this.trace('mixIntoAudioInput', stream.id);\n    return result;\n  }\n\n  chooseVideoInputQuality(width, height, frameRate, maxBandwidthKbps) {\n    this.deviceController.chooseVideoInputQuality(width, height, frameRate, maxBandwidthKbps);\n    this.trace('chooseVideoInputQuality', {\n      width: width,\n      height: height,\n      frameRate: frameRate,\n      maxBandwidthKbps: maxBandwidthKbps\n    });\n  }\n\n  getVideoInputQualitySettings() {\n    const result = this.deviceController.getVideoInputQualitySettings();\n    this.trace('getVideoInputQualitySettings');\n    return result;\n  }\n\n  setContentAudioProfile(audioProfile) {\n    this.trace('setContentAudioProfile', audioProfile);\n    this.contentShareController.setContentAudioProfile(audioProfile);\n  }\n\n  startContentShare(stream) {\n    const result = this.contentShareController.startContentShare(stream);\n    this.trace('startContentShare');\n    return result;\n  }\n\n  startContentShareFromScreenCapture(sourceId, frameRate) {\n    const result = this.contentShareController.startContentShareFromScreenCapture(sourceId, frameRate);\n    this.trace('startContentShareFromScreenCapture');\n    return result;\n  }\n\n  pauseContentShare() {\n    this.contentShareController.pauseContentShare();\n    this.trace('pauseContentShare');\n  }\n\n  unpauseContentShare() {\n    this.contentShareController.unpauseContentShare();\n    this.trace('unpauseContentShare');\n  }\n\n  stopContentShare() {\n    this.contentShareController.stopContentShare();\n    this.trace('stopContentShare');\n  }\n\n  addContentShareObserver(observer) {\n    this.contentShareController.addContentShareObserver(observer);\n    this.trace('addContentShareObserver');\n  }\n\n  removeContentShareObserver(observer) {\n    this.contentShareController.removeContentShareObserver(observer);\n    this.trace('removeContentShareObserver');\n  } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  trace(name, input, output) {\n    const meetingId = this.audioVideoController.configuration.meetingId;\n    const attendeeId = this.audioVideoController.configuration.credentials.attendeeId;\n    let s = `API/DefaultAudioVideoFacade/${meetingId}/${attendeeId}/${name}`;\n\n    if (typeof input !== 'undefined') {\n      s += ` ${JSON.stringify(input)}`;\n    }\n\n    if (typeof output !== 'undefined') {\n      s += ` -> ${JSON.stringify(output)}`;\n    }\n\n    this.audioVideoController.logger.info(s);\n  }\n\n  getRemoteVideoSources() {\n    const result = this.audioVideoController.getRemoteVideoSources();\n    this.trace('getRemoteVideoSources', null, result);\n    return result;\n  }\n\n  get transcriptionController() {\n    return this.realtimeController.transcriptionController;\n  }\n\n  promoteToPrimaryMeeting(credentials) {\n    this.audioVideoController.removeObserver(this); // Avoid adding multiple times\n\n    this.audioVideoController.addObserver(this); // See note in `audioVideoWasDemotedFromPrimaryMeeting`\n\n    const result = this.audioVideoController.promoteToPrimaryMeeting(credentials);\n    this.trace('promoteToPrimaryMeeting', null, result); // Don't trace credentials\n\n    return result;\n  }\n\n  demoteFromPrimaryMeeting() {\n    this.trace('demoteFromPrimaryMeeting');\n    this.audioVideoController.demoteFromPrimaryMeeting();\n  }\n\n  audioVideoWasDemotedFromPrimaryMeeting(_) {\n    // `DefaultContentShareController` currently does not respond to the connection ending\n    // so `contentShareDidStop` will not be called even if backend cleans up the connection.\n    // Thus we try to pre-emptively clean up on client side.\n    this.contentShareController.stopContentShare();\n    this.audioVideoController.removeObserver(this);\n  }\n\n}\n\nexports.default = DefaultAudioVideoFacade;","map":{"version":3,"mappings":"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","names":["DefaultAudioVideoFacade","constructor","audioVideoController","videoTileController","realtimeController","audioMixController","deviceController","contentShareController","addObserver","observer","trace","removeObserver","setAudioProfile","audioProfile","start","options","stop","getRTCPeerConnectionStats","selector","id","bindAudioElement","element","result","unbindAudioElement","getCurrentMeetingAudioStream","addAudioMixObserver","removeAudioMixObserver","bindVideoElement","tileId","videoElement","videoElementId","unbindVideoElement","startLocalVideoTile","stopLocalVideoTile","hasStartedLocalVideoTile","removeLocalVideoTile","getLocalVideoTile","pauseVideoTile","unpauseVideoTile","getVideoTile","getAllRemoteVideoTiles","getAllVideoTiles","addVideoTile","state","removeVideoTile","removeVideoTilesByAttendeeId","attendeeId","removeAllVideoTiles","captureVideoTile","realtimeSubscribeToAttendeeIdPresence","callback","realtimeUnsubscribeToAttendeeIdPresence","realtimeSetCanUnmuteLocalAudio","canUnmute","realtimeSubscribeToSetCanUnmuteLocalAudio","realtimeUnsubscribeToSetCanUnmuteLocalAudio","realtimeCanUnmuteLocalAudio","realtimeMuteLocalAudio","realtimeUnmuteLocalAudio","realtimeSubscribeToMuteAndUnmuteLocalAudio","realtimeUnsubscribeToMuteAndUnmuteLocalAudio","realtimeIsLocalAudioMuted","realtimeSubscribeToVolumeIndicator","realtimeUnsubscribeFromVolumeIndicator","realtimeSubscribeToLocalSignalStrengthChange","realtimeUnsubscribeToLocalSignalStrengthChange","realtimeSendDataMessage","topic","data","lifetimeMs","realtimeSubscribeToReceiveDataMessage","realtimeUnsubscribeFromReceiveDataMessage","realtimeSubscribeToFatalError","realtimeUnsubscribeToFatalError","subscribeToActiveSpeakerDetector","policy","scoresCallback","scoresCallbackIntervalMs","activeSpeakerDetector","subscribe","unsubscribeFromActiveSpeakerDetector","unsubscribe","listAudioInputDevices","forceUpdate","listVideoInputDevices","listAudioOutputDevices","chooseAudioInputDevice","device","chooseVideoInputDevice","VideoTransformDevice_1","chooseAudioOutputDevice","deviceId","addDeviceChangeObserver","removeDeviceChangeObserver","createAnalyserNodeForAudioInput","startVideoPreviewForVideoInput","stopVideoPreviewForVideoInput","setDeviceLabelTrigger","trigger","mixIntoAudioInput","stream","chooseVideoInputQuality","width","height","frameRate","maxBandwidthKbps","getVideoInputQualitySettings","setContentAudioProfile","startContentShare","startContentShareFromScreenCapture","sourceId","pauseContentShare","unpauseContentShare","stopContentShare","addContentShareObserver","removeContentShareObserver","name","input","output","meetingId","configuration","credentials","s","JSON","stringify","logger","info","getRemoteVideoSources","transcriptionController","promoteToPrimaryMeeting","demoteFromPrimaryMeeting","audioVideoWasDemotedFromPrimaryMeeting","_","exports"],"sourceRoot":"","sources":["../../src/audiovideofacade/DefaultAudioVideoFacade.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}