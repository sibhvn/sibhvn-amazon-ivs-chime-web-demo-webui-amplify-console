{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\n\nconst DefaultModality_1 = require(\"../modality/DefaultModality\");\n\nconst AsyncScheduler_1 = require(\"../scheduler/AsyncScheduler\");\n\nconst VideoTileState_1 = require(\"./VideoTileState\");\n\nclass DefaultVideoTile {\n  constructor(tileId, localTile, tileController, devicePixelRatioMonitor) {\n    this.tileController = tileController;\n    this.devicePixelRatioMonitor = devicePixelRatioMonitor;\n    this.tileState = new VideoTileState_1.default();\n    this.tileState.tileId = tileId;\n    this.tileState.localTile = localTile;\n    this.devicePixelRatioMonitor.registerObserver(this);\n  }\n  /**\n   * Connect a video stream to a video element by setting the srcObject of the video element to the video stream.\n   * @param videoStream The video stream input.\n   * @param videoElement The video element input.\n   * @param localTile Flag to indicate whether this is a local video.\n   */\n\n\n  static connectVideoStreamToVideoElement(videoStream, videoElement, localTile) {\n    const transform = localTile && videoStream.getVideoTracks()[0].getSettings().facingMode !== 'environment' ? 'rotateY(180deg)' : '';\n    DefaultVideoTile.setVideoElementFlag(videoElement, 'disablePictureInPicture', localTile);\n    DefaultVideoTile.setVideoElementFlag(videoElement, 'disableRemotePlayback', localTile);\n\n    if (videoElement.style.transform !== transform) {\n      videoElement.style.transform = transform;\n    }\n\n    if (videoElement.hasAttribute('controls')) {\n      videoElement.removeAttribute('controls');\n    }\n\n    if (!videoElement.hasAttribute('autoplay')) {\n      videoElement.setAttribute('autoplay', 'true');\n    } // playsinline is needed for video to play in iPhone in non-fullscreen mode.\n    // See https://developer.apple.com/documentation/webkit/safari_tools_and_features/delivering_video_content_for_safari#3030250\n\n\n    if (!videoElement.hasAttribute('playsinline')) {\n      videoElement.setAttribute('playsinline', 'true');\n    } // Note that setting the *attribute* 'muted' affects whether the element\n    // is muted *by default* (`.defaultMuted`), not whether it is currently muted (`.muted`).\n    // https://html.spec.whatwg.org/#dom-media-defaultmuted\n\n\n    if (!videoElement.hasAttribute('muted')) {\n      // The default value…\n      videoElement.setAttribute('muted', 'true'); // … and the value right now.\n\n      videoElement.muted = true;\n    }\n\n    if (videoElement.srcObject !== videoStream) {\n      videoElement.srcObject = videoStream;\n    }\n\n    if (new DefaultBrowserBehavior_1.default().requiresVideoElementWorkaround()) {\n      AsyncScheduler_1.default.nextTick(() => __awaiter(this, void 0, void 0, function* () {\n        try {\n          yield videoElement.play();\n        } catch (error) {}\n      }));\n    }\n  }\n  /**\n   * Disconnect a video stream to a video element by clearing the srcObject of the video element.\n   * This will also stop all the tracks of the current stream in the srcObject.\n   * @param videoElement The video element input.\n   * @param dueToPause A flag to indicate whether this function is called due to pausing video tile.\n   *  If true, then we will not stop the stream's tracks and just clearing out the srcObject.\n   * @param keepLastFrameWhenPaused If true and dueToPause is also true, then we will not clear out the srcObject of the\n   * video element when it is paused and therefore, the last frame of the stream will be shown.\n   */\n\n\n  static disconnectVideoStreamFromVideoElement(videoElement, dueToPause) {\n    let keepLastFrameWhenPaused = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (!videoElement) {\n      return;\n    }\n\n    if (dueToPause) {\n      if (!keepLastFrameWhenPaused) {\n        videoElement.srcObject = null;\n        videoElement.style.transform = '';\n      }\n    } else {\n      if (!videoElement.srcObject) {\n        return;\n      }\n\n      videoElement.pause();\n      videoElement.style.transform = '';\n      DefaultVideoTile.setVideoElementFlag(videoElement, 'disablePictureInPicture', false);\n      DefaultVideoTile.setVideoElementFlag(videoElement, 'disableRemotePlayback', false); // We must remove all the tracks from the MediaStream before\n      // clearing the `srcObject` to prevent Safari from crashing.\n\n      const mediaStream = videoElement.srcObject;\n      const tracks = mediaStream.getTracks();\n\n      for (const track of tracks) {\n        track.stop();\n        mediaStream.removeTrack(track);\n      } // Need to yield the message loop before clearing `srcObject` to\n      // prevent Safari from crashing.\n\n\n      if (new DefaultBrowserBehavior_1.default().requiresVideoElementWorkaround()) {\n        const prevSrcObject = videoElement.srcObject;\n        AsyncScheduler_1.default.nextTick(() => {\n          if (videoElement.srcObject === prevSrcObject) {\n            videoElement.srcObject = null;\n          }\n        });\n      } else {\n        videoElement.srcObject = null;\n      }\n    }\n  }\n\n  destroy() {\n    this.devicePixelRatioMonitor.removeObserver(this);\n\n    if (this.tileState.boundVideoElement && this.tileState.boundVideoElement.srcObject === this.tileState.boundVideoStream) {\n      DefaultVideoTile.disconnectVideoStreamFromVideoElement(this.tileState.boundVideoElement, false);\n    }\n\n    this.tileState = new VideoTileState_1.default();\n  }\n\n  devicePixelRatioChanged(newDevicePixelRatio) {\n    this.tileState.devicePixelRatio = newDevicePixelRatio;\n    this.sendTileStateUpdate();\n  }\n\n  id() {\n    return this.tileState.tileId;\n  }\n\n  state() {\n    return this.tileState.clone();\n  }\n\n  stateRef() {\n    return this.tileState;\n  }\n\n  bindVideoStream(attendeeId, localTile, mediaStream, contentWidth, contentHeight, streamId, externalUserId) {\n    let tileUpdated = false;\n\n    if (this.tileState.boundAttendeeId !== attendeeId) {\n      this.tileState.boundAttendeeId = attendeeId;\n\n      if (new DefaultModality_1.default(attendeeId).hasModality(DefaultModality_1.default.MODALITY_CONTENT)) {\n        this.tileState.isContent = true;\n      }\n\n      tileUpdated = true;\n    }\n\n    if (this.tileState.boundExternalUserId !== externalUserId) {\n      this.tileState.boundExternalUserId = externalUserId;\n      tileUpdated = true;\n    }\n\n    if (this.tileState.localTile !== localTile) {\n      this.tileState.localTile = localTile;\n      tileUpdated = true;\n    }\n\n    if (this.tileState.boundVideoStream !== mediaStream) {\n      this.tileState.boundVideoStream = mediaStream;\n      tileUpdated = true;\n    }\n\n    if (this.tileState.videoStreamContentWidth !== contentWidth) {\n      this.tileState.videoStreamContentWidth = contentWidth;\n      tileUpdated = true;\n    }\n\n    if (this.tileState.videoStreamContentHeight !== contentHeight) {\n      this.tileState.videoStreamContentHeight = contentHeight;\n      tileUpdated = true;\n    }\n\n    if (this.tileState.streamId !== streamId) {\n      this.tileState.streamId = streamId;\n      tileUpdated = true;\n    }\n\n    if (tileUpdated) {\n      this.sendTileStateUpdate();\n    }\n  }\n\n  bindVideoElement(videoElement) {\n    let tileUpdated = false;\n\n    if (this.tileState.boundVideoElement !== videoElement) {\n      this.tileState.boundVideoElement = videoElement;\n      tileUpdated = true;\n    }\n\n    if (this.tileState.boundVideoElement !== null) {\n      if (this.tileState.videoElementCSSWidthPixels !== videoElement.clientWidth) {\n        this.tileState.videoElementCSSWidthPixels = videoElement.clientWidth;\n        tileUpdated = true;\n      }\n\n      if (this.tileState.videoElementCSSHeightPixels !== videoElement.clientHeight) {\n        this.tileState.videoElementCSSHeightPixels = videoElement.clientHeight;\n        tileUpdated = true;\n      }\n    } else {\n      this.tileState.videoElementCSSWidthPixels = null;\n      this.tileState.videoElementCSSHeightPixels = null;\n    }\n\n    if (tileUpdated) {\n      this.sendTileStateUpdate();\n    }\n  }\n\n  pause() {\n    if (!this.tileState.paused) {\n      this.tileState.paused = true;\n      this.sendTileStateUpdate();\n    }\n  }\n\n  unpause() {\n    if (this.tileState.paused) {\n      this.tileState.paused = false;\n      this.sendTileStateUpdate();\n    }\n  }\n\n  markPoorConnection() {\n    if (this.tileState.poorConnection) {\n      return false;\n    }\n\n    this.tileState.poorConnection = true;\n    this.sendTileStateUpdate();\n    return true;\n  }\n\n  unmarkPoorConnection() {\n    if (!this.tileState.poorConnection) {\n      return false;\n    }\n\n    this.tileState.poorConnection = false;\n    this.sendTileStateUpdate();\n    return true;\n  }\n\n  capture() {\n    if (!this.tileState.active) {\n      return null;\n    }\n\n    const canvas = document.createElement('canvas');\n    const video = this.tileState.boundVideoElement;\n    canvas.width = video.videoWidth || video.width;\n    canvas.height = video.videoHeight || video.height;\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n    return ctx.getImageData(0, 0, canvas.width, canvas.height);\n  }\n\n  setStreamId(id) {\n    this.tileState.streamId = id; // `streamId` is not likely used by builders but we can't\n    // be sure so send a tile state update just in case.\n\n    this.tileController.sendTileStateUpdate(this.state());\n  }\n\n  sendTileStateUpdate() {\n    this.updateActiveState();\n    this.updateVideoStreamOnVideoElement();\n    this.updateVideoElementPhysicalPixels();\n    this.tileController.sendTileStateUpdate(this.state());\n  }\n\n  updateActiveState() {\n    this.tileState.active = !!(!this.tileState.paused && !this.tileState.poorConnection && this.tileState.boundAttendeeId && this.tileState.boundVideoElement && this.tileState.boundVideoStream);\n  }\n\n  updateVideoElementPhysicalPixels() {\n    if (typeof this.tileState.videoElementCSSWidthPixels === 'number' && typeof this.tileState.videoElementCSSHeightPixels === 'number') {\n      this.tileState.videoElementPhysicalWidthPixels = this.tileState.devicePixelRatio * this.tileState.videoElementCSSWidthPixels;\n      this.tileState.videoElementPhysicalHeightPixels = this.tileState.devicePixelRatio * this.tileState.videoElementCSSHeightPixels;\n    } else {\n      this.tileState.videoElementPhysicalWidthPixels = null;\n      this.tileState.videoElementPhysicalHeightPixels = null;\n    }\n  }\n\n  updateVideoStreamOnVideoElement() {\n    if (this.tileState.active) {\n      DefaultVideoTile.connectVideoStreamToVideoElement(this.tileState.boundVideoStream, this.tileState.boundVideoElement, this.tileState.localTile);\n    } else {\n      DefaultVideoTile.disconnectVideoStreamFromVideoElement(this.tileState.boundVideoElement, this.tileState.paused, this.tileController.keepLastFrameWhenPaused);\n    }\n  }\n\n  static setVideoElementFlag(videoElement, flag, value) {\n    if (flag in videoElement) {\n      // @ts-ignore\n      videoElement[flag] = value;\n    }\n  }\n\n}\n\nexports.default = DefaultVideoTile;","map":{"version":3,"mappings":"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","names":["DefaultVideoTile","constructor","tileId","localTile","tileController","devicePixelRatioMonitor","VideoTileState_1","tileState","registerObserver","connectVideoStreamToVideoElement","videoStream","videoElement","transform","getVideoTracks","getSettings","facingMode","setVideoElementFlag","style","hasAttribute","removeAttribute","setAttribute","muted","srcObject","DefaultBrowserBehavior_1","requiresVideoElementWorkaround","AsyncScheduler_1","nextTick","__awaiter","play","error","disconnectVideoStreamFromVideoElement","dueToPause","keepLastFrameWhenPaused","pause","mediaStream","tracks","getTracks","track","stop","removeTrack","prevSrcObject","destroy","removeObserver","boundVideoElement","boundVideoStream","devicePixelRatioChanged","newDevicePixelRatio","devicePixelRatio","sendTileStateUpdate","id","state","clone","stateRef","bindVideoStream","attendeeId","contentWidth","contentHeight","streamId","externalUserId","tileUpdated","boundAttendeeId","DefaultModality_1","hasModality","MODALITY_CONTENT","isContent","boundExternalUserId","videoStreamContentWidth","videoStreamContentHeight","bindVideoElement","videoElementCSSWidthPixels","clientWidth","videoElementCSSHeightPixels","clientHeight","paused","unpause","markPoorConnection","poorConnection","unmarkPoorConnection","capture","active","canvas","document","createElement","video","width","videoWidth","height","videoHeight","ctx","getContext","drawImage","getImageData","setStreamId","updateActiveState","updateVideoStreamOnVideoElement","updateVideoElementPhysicalPixels","videoElementPhysicalWidthPixels","videoElementPhysicalHeightPixels","flag","value","exports"],"sourceRoot":"","sources":["../../src/videotile/DefaultVideoTile.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}