{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\n\nconst DefaultSDP_1 = require(\"../sdp/DefaultSDP\");\n\nconst BaseTask_1 = require(\"./BaseTask\");\n/*\n * [[SetLocalDescriptionTask]] asynchronously calls [[setLocalDescription]] on peer connection.\n */\n\n\nclass SetLocalDescriptionTask extends BaseTask_1.default {\n  constructor(context) {\n    super(context.logger);\n    this.context = context;\n    this.taskName = 'SetLocalDescriptionTask';\n  }\n\n  cancel() {\n    // Just in case. The baseCancel behavior should prevent this.\n\n    /* istanbul ignore else */\n    if (this.cancelPromise) {\n      const error = new Error(`canceling ${this.name()}`);\n      this.cancelPromise(error);\n      delete this.cancelPromise;\n    }\n  }\n\n  run() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const peer = this.context.peer;\n      const sdpOfferInit = this.context.sdpOfferInit;\n      let sdp = sdpOfferInit.sdp;\n\n      if (new DefaultBrowserBehavior_1.default().requiresDisablingH264Encoding()) {\n        sdp = new DefaultSDP_1.default(sdp).removeH264SupportFromSendSection().sdp;\n      }\n\n      if (this.context.audioProfile) {\n        sdp = new DefaultSDP_1.default(sdp).withAudioMaxAverageBitrate(this.context.audioProfile.audioBitrateBps).sdp;\n\n        if (this.context.audioProfile.isStereo()) {\n          sdp = new DefaultSDP_1.default(sdp).withStereoAudio().sdp;\n        }\n      }\n\n      this.logger.debug(() => {\n        return `local description is >>>${sdp}<<<`;\n      });\n      const sdpOffer = {\n        type: 'offer',\n        sdp: sdp,\n        toJSON: null\n      };\n      yield new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n        this.cancelPromise = error => {\n          reject(error);\n        };\n\n        try {\n          yield peer.setLocalDescription(sdpOffer);\n          resolve();\n        } catch (error) {\n          reject(error);\n        } finally {\n          delete this.cancelPromise;\n        }\n      }));\n      this.context.logger.info('set local description');\n    });\n  }\n\n}\n\nexports.default = SetLocalDescriptionTask;","map":{"version":3,"mappings":"cAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;AACA;;AACA;AAEA;;;;;AAGA,MAAqBA,uBAArB,SAAqDC,kBAArD,CAA6D;EAK3DC,YAAoBC,OAApB,EAAsD;IACpD,MAAMA,OAAO,CAACC,MAAd;IADkB;IAJV,gBAAW,yBAAX;EAMT;;EAEDC,MAAM;IACJ;;IACA;IACA,IAAI,KAAKC,aAAT,EAAwB;MACtB,MAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAU,aAAa,KAAKC,IAAL,EAAW,EAAlC,CAAd;MACA,KAAKH,aAAL,CAAmBC,KAAnB;MACA,OAAO,KAAKD,aAAZ;IACD;EACF;;EAEKI,GAAG;;MACP,MAAMC,IAAI,GAAG,KAAKR,OAAL,CAAaQ,IAA1B;MACA,MAAMC,YAAY,GAAG,KAAKT,OAAL,CAAaS,YAAlC;MACA,IAAIC,GAAG,GAAGD,YAAY,CAACC,GAAvB;;MAEA,IAAI,IAAIC,gCAAJ,GAA6BC,6BAA7B,EAAJ,EAAkE;QAChEF,GAAG,GAAG,IAAIG,oBAAJ,CAAeH,GAAf,EAAoBI,gCAApB,GAAuDJ,GAA7D;MACD;;MACD,IAAI,KAAKV,OAAL,CAAae,YAAjB,EAA+B;QAC7BL,GAAG,GAAG,IAAIG,oBAAJ,CAAeH,GAAf,EAAoBM,0BAApB,CACJ,KAAKhB,OAAL,CAAae,YAAb,CAA0BE,eADtB,EAEJP,GAFF;;QAGA,IAAI,KAAKV,OAAL,CAAae,YAAb,CAA0BG,QAA1B,EAAJ,EAA0C;UACxCR,GAAG,GAAG,IAAIG,oBAAJ,CAAeH,GAAf,EAAoBS,eAApB,GAAsCT,GAA5C;QACD;MACF;;MAED,KAAKT,MAAL,CAAYmB,KAAZ,CAAkB,MAAK;QACrB,OAAO,2BAA2BV,GAAG,KAArC;MACD,CAFD;MAIA,MAAMW,QAAQ,GAA0B;QACtCC,IAAI,EAAE,OADgC;QAEtCZ,GAAG,EAAEA,GAFiC;QAGtCa,MAAM,EAAE;MAH8B,CAAxC;MAMA,MAAM,IAAIC,OAAJ,CAAkB,CAAOC,OAAP,EAAgBC,MAAhB,KAA0BC;QAChD,KAAKxB,aAAL,GAAsBC,KAAD,IAAiB;UACpCsB,MAAM,CAACtB,KAAD,CAAN;QACD,CAFD;;QAIA,IAAI;UACF,MAAMI,IAAI,CAACoB,mBAAL,CAAyBP,QAAzB,CAAN;UACAI,OAAO;QACR,CAHD,CAGE,OAAOrB,KAAP,EAAc;UACdsB,MAAM,CAACtB,KAAD,CAAN;QACD,CALD,SAKU;UACR,OAAO,KAAKD,aAAZ;QACD;MACF,CAbiD,CAA5C,CAAN;MAeA,KAAKH,OAAL,CAAaC,MAAb,CAAoB4B,IAApB,CAAyB,uBAAzB;IACD;EAAA;;AA9D0D;;AAA7DC","names":["SetLocalDescriptionTask","BaseTask_1","constructor","context","logger","cancel","cancelPromise","error","Error","name","run","peer","sdpOfferInit","sdp","DefaultBrowserBehavior_1","requiresDisablingH264Encoding","DefaultSDP_1","removeH264SupportFromSendSection","audioProfile","withAudioMaxAverageBitrate","audioBitrateBps","isStereo","withStereoAudio","debug","sdpOffer","type","toJSON","Promise","resolve","reject","__awaiter","setLocalDescription","info","exports"],"sourceRoot":"","sources":["../../src/task/SetLocalDescriptionTask.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}