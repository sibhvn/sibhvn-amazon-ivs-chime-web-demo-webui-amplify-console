{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst SignalingClientConnectionRequest_1 = require(\"../signalingclient/SignalingClientConnectionRequest\");\n\nconst SignalingClientEventType_1 = require(\"../signalingclient/SignalingClientEventType\");\n\nconst BaseTask_1 = require(\"./BaseTask\");\n\nclass OpenSignalingConnectionTask extends BaseTask_1.default {\n  constructor(context) {\n    super(context.logger);\n    this.context = context;\n    this.taskName = 'OpenSignalingConnectionTask';\n    this.taskCanceler = null;\n  }\n\n  cancel() {\n    if (this.taskCanceler) {\n      this.taskCanceler.cancel();\n      this.taskCanceler = null;\n    }\n  }\n\n  run() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const configuration = this.context.meetingSessionConfiguration;\n      this.context.signalingClient.openConnection(new SignalingClientConnectionRequest_1.default(configuration.urls.signalingURL, configuration.credentials.joinToken));\n      const startTimeMs = Date.now();\n\n      try {\n        yield new Promise((resolve, reject) => {\n          class WebSocketOpenInterceptor {\n            constructor(signalingClient) {\n              this.signalingClient = signalingClient;\n            }\n\n            cancel() {\n              this.signalingClient.removeObserver(this);\n              reject(new Error(`OpenSignalingConnectionTask got canceled while waiting to open signaling connection`));\n            }\n\n            handleSignalingClientEvent(event) {\n              switch (event.type) {\n                case SignalingClientEventType_1.default.WebSocketOpen:\n                  this.signalingClient.removeObserver(this);\n                  resolve();\n                  break;\n\n                case SignalingClientEventType_1.default.WebSocketFailed:\n                  this.signalingClient.removeObserver(this);\n                  reject(new Error('WebSocket connection failed'));\n                  break;\n              }\n            }\n\n          }\n\n          const interceptor = new WebSocketOpenInterceptor(this.context.signalingClient);\n          this.context.signalingClient.registerObserver(interceptor);\n          this.taskCanceler = interceptor;\n        });\n      } catch (error) {\n        throw error;\n      } finally {\n        this.context.signalingOpenDurationMs = Math.round(Date.now() - startTimeMs);\n        this.logger.info(`Opening signaling connection took ${this.context.signalingOpenDurationMs} ms`);\n      }\n    });\n  }\n\n}\n\nexports.default = OpenSignalingConnectionTask;","map":{"version":3,"mappings":"cAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;AAEA;;AAGA;;AAEA,MAAqBA,2BAArB,SAAyDC,kBAAzD,CAAiE;EAK/DC,YAAoBC,OAApB,EAAsD;IACpD,MAAMA,OAAO,CAACC,MAAd;IADkB;IAJV,gBAAW,6BAAX;IAEF,oBAAoC,IAApC;EAIP;;EAEDC,MAAM;IACJ,IAAI,KAAKC,YAAT,EAAuB;MACrB,KAAKA,YAAL,CAAkBD,MAAlB;MACA,KAAKC,YAAL,GAAoB,IAApB;IACD;EACF;;EAEKC,GAAG;;MACP,MAAMC,aAAa,GAAG,KAAKL,OAAL,CAAaM,2BAAnC;MAEA,KAAKN,OAAL,CAAaO,eAAb,CAA6BC,cAA7B,CACE,IAAIC,0CAAJ,CACEJ,aAAa,CAACK,IAAd,CAAmBC,YADrB,EAEEN,aAAa,CAACO,WAAd,CAA0BC,SAF5B,CADF;MAMA,MAAMC,WAAW,GAAGC,IAAI,CAACC,GAAL,EAApB;;MACA,IAAI;QACF,MAAM,IAAIC,OAAJ,CAAkB,CAACC,OAAD,EAAUC,MAAV,KAAoB;UAC1C,MAAMC,wBAAN,CAA8B;YAC5BrB,YAAoBQ,eAApB,EAAoD;cAAhC;YAAoC;;YAExDL,MAAM;cACJ,KAAKK,eAAL,CAAqBc,cAArB,CAAoC,IAApC;cACAF,MAAM,CACJ,IAAIG,KAAJ,CACE,qFADF,CADI,CAAN;YAKD;;YAEDC,0BAA0B,CAACC,KAAD,EAA4B;cACpD,QAAQA,KAAK,CAACC,IAAd;gBACE,KAAKC,mCAAyBC,aAA9B;kBACE,KAAKpB,eAAL,CAAqBc,cAArB,CAAoC,IAApC;kBACAH,OAAO;kBACP;;gBACF,KAAKQ,mCAAyBE,eAA9B;kBACE,KAAKrB,eAAL,CAAqBc,cAArB,CAAoC,IAApC;kBACAF,MAAM,CAAC,IAAIG,KAAJ,CAAU,6BAAV,CAAD,CAAN;kBACA;cARJ;YAUD;;UAvB2B;;UAyB9B,MAAMO,WAAW,GAAG,IAAIT,wBAAJ,CAA6B,KAAKpB,OAAL,CAAaO,eAA1C,CAApB;UACA,KAAKP,OAAL,CAAaO,eAAb,CAA6BuB,gBAA7B,CAA8CD,WAA9C;UACA,KAAK1B,YAAL,GAAoB0B,WAApB;QACD,CA7BK,CAAN;MA8BD,CA/BD,CA+BE,OAAOE,KAAP,EAAc;QACd,MAAMA,KAAN;MACD,CAjCD,SAiCU;QACR,KAAK/B,OAAL,CAAagC,uBAAb,GAAuCC,IAAI,CAACC,KAAL,CAAWnB,IAAI,CAACC,GAAL,KAAaF,WAAxB,CAAvC;QACA,KAAKb,MAAL,CAAYkC,IAAZ,CACE,qCAAqC,KAAKnC,OAAL,CAAagC,uBAAuB,KAD3E;MAGD;IACF;EAAA;;AAjE8D;;AAAjEI","names":["OpenSignalingConnectionTask","BaseTask_1","constructor","context","logger","cancel","taskCanceler","run","configuration","meetingSessionConfiguration","signalingClient","openConnection","SignalingClientConnectionRequest_1","urls","signalingURL","credentials","joinToken","startTimeMs","Date","now","Promise","resolve","reject","WebSocketOpenInterceptor","removeObserver","Error","handleSignalingClientEvent","event","type","SignalingClientEventType_1","WebSocketOpen","WebSocketFailed","interceptor","registerObserver","error","signalingOpenDurationMs","Math","round","info","exports"],"sourceRoot":"","sources":["../../src/task/OpenSignalingConnectionTask.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}