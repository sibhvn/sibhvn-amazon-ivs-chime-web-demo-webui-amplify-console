{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\n\nconst ClientMetricReportDirection_1 = require(\"./ClientMetricReportDirection\");\n\nconst ClientMetricReportMediaType_1 = require(\"./ClientMetricReportMediaType\");\n\nconst GlobalMetricReport_1 = require(\"./GlobalMetricReport\");\n\nclass DefaultClientMetricReport {\n  constructor(logger, videoStreamIndex, selfAttendeeId) {\n    this.logger = logger;\n    this.videoStreamIndex = videoStreamIndex;\n    this.selfAttendeeId = selfAttendeeId;\n    this.globalMetricReport = new GlobalMetricReport_1.default();\n    this.streamMetricReports = {};\n    this.currentTimestampMs = 0;\n    this.previousTimestampMs = 0;\n    this.currentSsrcs = {};\n    /**\n     *  Metric transform functions\n     */\n\n    this.identityValue = (metricName, ssrc) => {\n      const metricReport = ssrc ? this.streamMetricReports[ssrc] : this.globalMetricReport;\n      return Number(metricReport.currentMetrics[metricName]);\n    };\n\n    this.decoderLossPercent = (metricName, ssrc) => {\n      const metricReport = ssrc ? this.streamMetricReports[ssrc] : this.globalMetricReport;\n      const decoderNormal = metricReport.currentMetrics['googDecodingNormal'] - (metricReport.previousMetrics['googDecodingNormal'] || 0);\n      const decoderCalls = metricReport.currentMetrics['googDecodingCTN'] - (metricReport.previousMetrics['googDecodingCTN'] || 0);\n\n      if (decoderCalls <= 0) {\n        return 0;\n      }\n\n      const decoderAbnormal = decoderCalls - decoderNormal;\n\n      if (decoderAbnormal <= 0) {\n        return 0;\n      }\n\n      return decoderAbnormal * 100 / decoderCalls;\n    };\n\n    this.packetLossPercent = (sourceMetricName, ssrc) => {\n      const metricReport = ssrc ? this.streamMetricReports[ssrc] : this.globalMetricReport;\n      const sentOrReceived = metricReport.currentMetrics[sourceMetricName] - (metricReport.previousMetrics[sourceMetricName] || 0);\n      const lost = metricReport.currentMetrics['packetsLost'] - (metricReport.previousMetrics['packetsLost'] || 0);\n      const total = sentOrReceived + lost;\n\n      if (total <= 0 || lost <= 0) {\n        return 0;\n      }\n\n      return lost * 100 / total;\n    };\n\n    this.countPerSecond = (metricName, ssrc) => {\n      const metricReport = ssrc ? this.streamMetricReports[ssrc] : this.globalMetricReport;\n      let intervalSeconds = (this.currentTimestampMs - this.previousTimestampMs) / 1000;\n\n      if (intervalSeconds <= 0) {\n        return 0;\n      }\n\n      if (this.previousTimestampMs <= 0) {\n        intervalSeconds = 1;\n      }\n\n      const diff = metricReport.currentMetrics[metricName] - (metricReport.previousMetrics[metricName] || 0);\n\n      if (diff <= 0) {\n        return 0;\n      }\n\n      return Math.trunc(diff / intervalSeconds);\n    };\n\n    this.bitsPerSecond = (metricName, ssrc) => {\n      const metricReport = ssrc ? this.streamMetricReports[ssrc] : this.globalMetricReport;\n      let intervalSeconds = (this.currentTimestampMs - this.previousTimestampMs) / 1000;\n\n      if (intervalSeconds <= 0) {\n        return 0;\n      }\n\n      if (this.previousTimestampMs <= 0) {\n        intervalSeconds = 1;\n      }\n\n      const diff = (metricReport.currentMetrics[metricName] - (metricReport.previousMetrics[metricName] || 0)) * 8;\n\n      if (diff <= 0) {\n        return 0;\n      }\n\n      return Math.trunc(diff / intervalSeconds);\n    };\n\n    this.secondsToMilliseconds = (metricName, ssrc) => {\n      const metricReport = ssrc ? this.streamMetricReports[ssrc] : this.globalMetricReport;\n      return Number(metricReport.currentMetrics[metricName] * 1000);\n    };\n    /**\n     *  Canonical and derived metric maps\n     */\n\n\n    this.globalMetricMap = {\n      googActualEncBitrate: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_ACTUAL_ENCODER_BITRATE\n      },\n      googAvailableSendBandwidth: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_AVAILABLE_SEND_BANDWIDTH\n      },\n      googRetransmitBitrate: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_RETRANSMIT_BITRATE\n      },\n      googAvailableReceiveBandwidth: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_AVAILABLE_RECEIVE_BANDWIDTH\n      },\n      googTargetEncBitrate: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_TARGET_ENCODER_BITRATE\n      },\n      googBucketDelay: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_BUCKET_DELAY_MS\n      },\n      googRtt: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.STUN_RTT_MS\n      },\n      packetsDiscardedOnSend: {\n        transform: this.countPerSecond,\n        type: SignalingProtocol_js_1.SdkMetric.Type.SOCKET_DISCARDED_PPS\n      },\n      availableIncomingBitrate: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_AVAILABLE_RECEIVE_BANDWIDTH\n      },\n      availableOutgoingBitrate: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_AVAILABLE_SEND_BANDWIDTH\n      },\n      currentRoundTripTime: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.STUN_RTT_MS\n      }\n    };\n    this.audioUpstreamMetricMap = {\n      googJitterReceived: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.RTC_MIC_JITTER_MS\n      },\n      jitter: {\n        transform: this.secondsToMilliseconds,\n        type: SignalingProtocol_js_1.SdkMetric.Type.RTC_MIC_JITTER_MS\n      },\n      packetsSent: {\n        transform: this.countPerSecond,\n        type: SignalingProtocol_js_1.SdkMetric.Type.RTC_MIC_PPS\n      },\n      bytesSent: {\n        transform: this.bitsPerSecond,\n        type: SignalingProtocol_js_1.SdkMetric.Type.RTC_MIC_BITRATE\n      },\n      googRtt: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.RTC_MIC_RTT_MS\n      },\n      packetsLost: {\n        transform: this.packetLossPercent,\n        type: SignalingProtocol_js_1.SdkMetric.Type.RTC_MIC_FRACTION_PACKET_LOST_PERCENT,\n        source: 'packetsSent'\n      }\n    };\n    this.audioDownstreamMetricMap = {\n      packetsReceived: {\n        transform: this.countPerSecond,\n        type: SignalingProtocol_js_1.SdkMetric.Type.RTC_SPK_PPS\n      },\n      packetsLost: {\n        transform: this.packetLossPercent,\n        type: SignalingProtocol_js_1.SdkMetric.Type.RTC_SPK_FRACTION_PACKET_LOST_PERCENT,\n        source: 'packetsReceived'\n      },\n      googJitterReceived: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.RTC_SPK_JITTER_MS\n      },\n      jitter: {\n        transform: this.secondsToMilliseconds,\n        type: SignalingProtocol_js_1.SdkMetric.Type.RTC_SPK_JITTER_MS\n      },\n      googDecodingCTN: {\n        transform: this.countPerSecond\n      },\n      googDecodingNormal: {\n        transform: this.decoderLossPercent,\n        type: SignalingProtocol_js_1.SdkMetric.Type.RTC_SPK_FRACTION_DECODER_LOSS_PERCENT,\n        source: 'googDecodingCTN'\n      },\n      bytesReceived: {\n        transform: this.bitsPerSecond,\n        type: SignalingProtocol_js_1.SdkMetric.Type.RTC_SPK_BITRATE\n      },\n      googCurrentDelayMs: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.RTC_SPK_CURRENT_DELAY_MS\n      },\n      googJitterBufferMs: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.RTC_SPK_JITTER_BUFFER_MS\n      }\n    };\n    this.videoUpstreamMetricMap = {\n      googRtt: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_SENT_RTT_MS\n      },\n      googEncodeUsagePercent: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_ENCODE_USAGE_PERCENT\n      },\n      googNacksReceived: {\n        transform: this.countPerSecond,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_NACKS_RECEIVED\n      },\n      nackCount: {\n        transform: this.countPerSecond,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_NACKS_RECEIVED\n      },\n      googPlisReceived: {\n        transform: this.countPerSecond,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_PLIS_RECEIVED\n      },\n      pliCount: {\n        transform: this.countPerSecond,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_PLIS_RECEIVED\n      },\n      googFirsReceived: {\n        transform: this.countPerSecond,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_FIRS_RECEIVED\n      },\n      firCount: {\n        transform: this.countPerSecond,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_FIRS_RECEIVED\n      },\n      googAvgEncodeMs: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_AVERAGE_ENCODE_MS\n      },\n      googFrameRateInput: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_INPUT_FPS\n      },\n      framesEncoded: {\n        transform: this.countPerSecond,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_ENCODE_FPS\n      },\n      googFrameRateSent: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_SENT_FPS\n      },\n      framerateMean: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_SENT_FPS\n      },\n      packetsSent: {\n        transform: this.countPerSecond,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_SENT_PPS\n      },\n      packetsLost: {\n        transform: this.packetLossPercent,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT,\n        source: 'packetsSent'\n      },\n      bytesSent: {\n        transform: this.bitsPerSecond,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_SENT_BITRATE\n      },\n      droppedFrames: {\n        transform: this.countPerSecond,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_DROPPED_FPS\n      },\n      qpSum: {\n        transform: this.countPerSecond,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_SENT_QP_SUM\n      },\n      googFrameHeightSent: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_ENCODE_HEIGHT\n      },\n      googFrameWidthSent: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_ENCODE_WIDTH\n      },\n      frameHeight: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_ENCODE_HEIGHT\n      },\n      frameWidth: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_ENCODE_WIDTH\n      }\n    };\n    this.videoDownstreamMetricMap = {\n      googTargetDelayMs: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_TARGET_DELAY_MS\n      },\n      googDecodeMs: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_DECODE_MS\n      },\n      googFrameRateOutput: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_OUTPUT_FPS\n      },\n      packetsReceived: {\n        transform: this.countPerSecond,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_RECEIVED_PPS\n      },\n      packetsLost: {\n        transform: this.packetLossPercent,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT,\n        source: 'packetsReceived'\n      },\n      googRenderDelayMs: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_RENDER_DELAY_MS\n      },\n      googFrameRateReceived: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_RECEIVED_FPS\n      },\n      framerateMean: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_RECEIVED_FPS\n      },\n      framesDecoded: {\n        transform: this.countPerSecond,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_DECODE_FPS\n      },\n      googNacksSent: {\n        transform: this.countPerSecond,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_NACKS_SENT\n      },\n      nackCount: {\n        transform: this.countPerSecond,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_NACKS_SENT\n      },\n      googFirsSent: {\n        transform: this.countPerSecond,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_FIRS_SENT\n      },\n      firCount: {\n        transform: this.countPerSecond,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_FIRS_SENT\n      },\n      googPlisSent: {\n        transform: this.countPerSecond,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_PLIS_SENT\n      },\n      pliCount: {\n        transform: this.countPerSecond,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_PLIS_SENT\n      },\n      bytesReceived: {\n        transform: this.bitsPerSecond,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_RECEIVED_BITRATE\n      },\n      googCurrentDelayMs: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_CURRENT_DELAY_MS\n      },\n      googJitterBufferMs: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_JITTER_BUFFER_MS\n      },\n      discardedPackets: {\n        transform: this.countPerSecond,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_DISCARDED_PPS\n      },\n      googJitterReceived: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_RECEIVED_JITTER_MS\n      },\n      jitter: {\n        transform: this.secondsToMilliseconds,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_RECEIVED_JITTER_MS\n      },\n      qpSum: {\n        transform: this.countPerSecond,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_RECEIVED_QP_SUM\n      },\n      googFrameHeightReceived: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_DECODE_HEIGHT\n      },\n      googFrameWidthReceived: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_DECODE_WIDTH\n      },\n      frameHeight: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_DECODE_HEIGHT\n      },\n      frameWidth: {\n        transform: this.identityValue,\n        type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_DECODE_WIDTH\n      }\n    };\n    /**\n     *  media Stream metrics\n     */\n\n    this.observableVideoMetricSpec = {\n      videoUpstreamBitrate: {\n        source: 'bytesSent',\n        media: ClientMetricReportMediaType_1.default.VIDEO,\n        dir: ClientMetricReportDirection_1.default.UPSTREAM\n      },\n      videoUpstreamPacketsSent: {\n        source: 'packetsSent',\n        media: ClientMetricReportMediaType_1.default.VIDEO,\n        dir: ClientMetricReportDirection_1.default.UPSTREAM\n      },\n      videoUpstreamPacketLossPercent: {\n        source: 'packetsLost',\n        media: ClientMetricReportMediaType_1.default.VIDEO,\n        dir: ClientMetricReportDirection_1.default.UPSTREAM\n      },\n      videoUpstreamFramesEncodedPerSecond: {\n        source: 'framesEncoded',\n        media: ClientMetricReportMediaType_1.default.VIDEO,\n        dir: ClientMetricReportDirection_1.default.UPSTREAM\n      },\n      videoUpstreamGoogFrameHeight: {\n        source: 'googFrameHeightSent',\n        media: ClientMetricReportMediaType_1.default.VIDEO,\n        dir: ClientMetricReportDirection_1.default.UPSTREAM\n      },\n      videoUpstreamGoogFrameWidth: {\n        source: 'googFrameWidthSent',\n        media: ClientMetricReportMediaType_1.default.VIDEO,\n        dir: ClientMetricReportDirection_1.default.UPSTREAM\n      },\n      videoUpstreamFrameHeight: {\n        source: 'frameHeight',\n        media: ClientMetricReportMediaType_1.default.VIDEO,\n        dir: ClientMetricReportDirection_1.default.UPSTREAM\n      },\n      videoUpstreamFrameWidth: {\n        source: 'frameWidth',\n        media: ClientMetricReportMediaType_1.default.VIDEO,\n        dir: ClientMetricReportDirection_1.default.UPSTREAM\n      },\n      videoDownstreamBitrate: {\n        source: 'bytesReceived',\n        media: ClientMetricReportMediaType_1.default.VIDEO,\n        dir: ClientMetricReportDirection_1.default.DOWNSTREAM\n      },\n      videoDownstreamPacketLossPercent: {\n        source: 'packetsLost',\n        media: ClientMetricReportMediaType_1.default.VIDEO,\n        dir: ClientMetricReportDirection_1.default.DOWNSTREAM\n      },\n      videoDownstreamPacketsReceived: {\n        source: 'packetsReceived',\n        media: ClientMetricReportMediaType_1.default.VIDEO,\n        dir: ClientMetricReportDirection_1.default.DOWNSTREAM\n      },\n      videoDownstreamFramesDecodedPerSecond: {\n        source: 'framesDecoded',\n        media: ClientMetricReportMediaType_1.default.VIDEO,\n        dir: ClientMetricReportDirection_1.default.DOWNSTREAM\n      },\n      videoDownstreamGoogFrameHeight: {\n        source: 'googFrameHeightReceived',\n        media: ClientMetricReportMediaType_1.default.VIDEO,\n        dir: ClientMetricReportDirection_1.default.DOWNSTREAM\n      },\n      videoDownstreamGoogFrameWidth: {\n        source: 'googFrameWidthReceived',\n        media: ClientMetricReportMediaType_1.default.VIDEO,\n        dir: ClientMetricReportDirection_1.default.DOWNSTREAM\n      },\n      videoDownstreamFrameHeight: {\n        source: 'frameHeight',\n        media: ClientMetricReportMediaType_1.default.VIDEO,\n        dir: ClientMetricReportDirection_1.default.DOWNSTREAM\n      },\n      videoDownstreamFrameWidth: {\n        source: 'frameWidth',\n        media: ClientMetricReportMediaType_1.default.VIDEO,\n        dir: ClientMetricReportDirection_1.default.DOWNSTREAM\n      }\n    };\n    /**\n     * Observable metrics and related APIs\n     */\n\n    this.observableMetricSpec = {\n      audioPacketsReceived: {\n        source: 'packetsReceived',\n        media: ClientMetricReportMediaType_1.default.AUDIO,\n        dir: ClientMetricReportDirection_1.default.DOWNSTREAM\n      },\n      audioPacketsReceivedFractionLoss: {\n        source: 'packetsLost',\n        media: ClientMetricReportMediaType_1.default.AUDIO,\n        dir: ClientMetricReportDirection_1.default.DOWNSTREAM\n      },\n      audioDecoderLoss: {\n        source: 'googDecodingNormal',\n        media: ClientMetricReportMediaType_1.default.AUDIO,\n        dir: ClientMetricReportDirection_1.default.DOWNSTREAM\n      },\n      audioPacketsSent: {\n        source: 'packetsSent',\n        media: ClientMetricReportMediaType_1.default.AUDIO,\n        dir: ClientMetricReportDirection_1.default.UPSTREAM\n      },\n      audioPacketLossPercent: {\n        source: 'packetsLost',\n        media: ClientMetricReportMediaType_1.default.AUDIO,\n        dir: ClientMetricReportDirection_1.default.UPSTREAM\n      },\n      videoUpstreamBitrate: {\n        source: 'bytesSent',\n        media: ClientMetricReportMediaType_1.default.VIDEO,\n        dir: ClientMetricReportDirection_1.default.UPSTREAM\n      },\n      videoPacketSentPerSecond: {\n        source: 'packetsSent',\n        media: ClientMetricReportMediaType_1.default.VIDEO,\n        dir: ClientMetricReportDirection_1.default.UPSTREAM\n      },\n      availableSendBandwidth: {\n        source: 'googAvailableSendBandwidth'\n      },\n      availableReceiveBandwidth: {\n        source: 'googAvailableReceiveBandwidth'\n      },\n      audioSpeakerDelayMs: {\n        source: 'googCurrentDelayMs',\n        media: ClientMetricReportMediaType_1.default.AUDIO,\n        dir: ClientMetricReportDirection_1.default.DOWNSTREAM\n      },\n      // new getStats() API\n      availableIncomingBitrate: {\n        source: 'availableIncomingBitrate'\n      },\n      availableOutgoingBitrate: {\n        source: 'availableOutgoingBitrate'\n      },\n      nackCountReceivedPerSecond: {\n        source: 'nackCount',\n        media: ClientMetricReportMediaType_1.default.VIDEO,\n        dir: ClientMetricReportDirection_1.default.UPSTREAM\n      },\n      googNackCountReceivedPerSecond: {\n        source: 'googNacksReceived',\n        media: ClientMetricReportMediaType_1.default.VIDEO,\n        dir: ClientMetricReportDirection_1.default.UPSTREAM\n      }\n    };\n  }\n\n  getMetricMap(mediaType, direction) {\n    switch (mediaType) {\n      case ClientMetricReportMediaType_1.default.AUDIO:\n        switch (direction) {\n          case ClientMetricReportDirection_1.default.UPSTREAM:\n            return this.audioUpstreamMetricMap;\n\n          case ClientMetricReportDirection_1.default.DOWNSTREAM:\n            return this.audioDownstreamMetricMap;\n        }\n\n      case ClientMetricReportMediaType_1.default.VIDEO:\n        switch (direction) {\n          case ClientMetricReportDirection_1.default.UPSTREAM:\n            return this.videoUpstreamMetricMap;\n\n          case ClientMetricReportDirection_1.default.DOWNSTREAM:\n            return this.videoDownstreamMetricMap;\n        }\n\n      default:\n        return this.globalMetricMap;\n    }\n  }\n\n  getObservableMetricValue(metricName) {\n    const observableMetricSpec = this.observableMetricSpec[metricName];\n    const metricMap = this.getMetricMap(observableMetricSpec.media, observableMetricSpec.dir);\n    const metricSpec = metricMap[observableMetricSpec.source];\n    const transform = metricSpec.transform;\n    const source = metricSpec.source;\n\n    if (observableMetricSpec.hasOwnProperty('media')) {\n      for (const ssrc in this.streamMetricReports) {\n        const streamMetricReport = this.streamMetricReports[ssrc];\n\n        if (observableMetricSpec.source in streamMetricReport.currentMetrics && streamMetricReport.direction === observableMetricSpec.dir && streamMetricReport.mediaType === observableMetricSpec.media) {\n          return source ? transform(source, Number(ssrc)) : transform(observableMetricSpec.source, Number(ssrc));\n        }\n      }\n    } else {\n      return source ? transform(source) : transform(observableMetricSpec.source);\n    }\n\n    return 0;\n  }\n\n  getObservableVideoMetricValue(metricName, ssrcNum) {\n    const observableVideoMetricSpec = this.observableVideoMetricSpec[metricName];\n    const metricMap = this.getMetricMap(observableVideoMetricSpec.media, observableVideoMetricSpec.dir);\n    const metricSpec = metricMap[observableVideoMetricSpec.source];\n    const transform = metricSpec.transform;\n    const source = metricSpec.source;\n    const streamMetricReport = this.streamMetricReports[ssrcNum];\n\n    if (streamMetricReport && observableVideoMetricSpec.source in streamMetricReport.currentMetrics) {\n      return source ? transform(source, ssrcNum) : transform(observableVideoMetricSpec.source, ssrcNum);\n    } else {\n      return source ? transform(source) : transform(observableVideoMetricSpec.source);\n    }\n  }\n\n  getObservableMetrics() {\n    const metric = {};\n\n    for (const metricName in this.observableMetricSpec) {\n      metric[metricName] = this.getObservableMetricValue(metricName);\n    }\n\n    return metric;\n  }\n\n  getObservableVideoMetrics() {\n    const videoStreamMetrics = {};\n\n    if (!this.videoStreamIndex || !this.selfAttendeeId) {\n      this.logger.error('Need to define VideoStreamIndex and selfAttendeeId if using getObservableVideoMetrics API');\n      return videoStreamMetrics;\n    }\n\n    for (const ssrc in this.streamMetricReports) {\n      if (this.streamMetricReports[ssrc].mediaType === ClientMetricReportMediaType_1.default.VIDEO) {\n        const metric = {};\n\n        for (const metricName in this.observableVideoMetricSpec) {\n          if (this.observableVideoMetricSpec[metricName].dir === this.streamMetricReports[ssrc].direction) {\n            const metricValue = this.getObservableVideoMetricValue(metricName, Number(ssrc));\n\n            if (!isNaN(metricValue)) {\n              metric[metricName] = metricValue;\n            }\n          }\n        }\n\n        const streamId = this.streamMetricReports[ssrc].streamId;\n        const attendeeId = streamId ? this.videoStreamIndex.attendeeIdForStreamId(streamId) : this.selfAttendeeId;\n        videoStreamMetrics[attendeeId] = videoStreamMetrics[attendeeId] ? videoStreamMetrics[attendeeId] : {};\n        videoStreamMetrics[attendeeId][ssrc] = metric;\n      }\n    }\n\n    return videoStreamMetrics;\n  }\n  /**\n   * Utilities\n   */\n\n\n  clone() {\n    const cloned = new DefaultClientMetricReport(this.logger, this.videoStreamIndex, this.selfAttendeeId);\n    cloned.globalMetricReport = this.globalMetricReport;\n    cloned.streamMetricReports = this.streamMetricReports;\n    cloned.currentTimestampMs = this.currentTimestampMs;\n    cloned.previousTimestampMs = this.previousTimestampMs;\n    return cloned;\n  }\n\n  print() {\n    const clientMetricReport = {\n      globalMetricReport: this.globalMetricReport,\n      streamMetricReports: this.streamMetricReports,\n      currentTimestampMs: this.currentTimestampMs,\n      previousTimestampMs: this.previousTimestampMs\n    };\n    this.logger.debug(() => {\n      return `Client Metric Report: ${JSON.stringify(clientMetricReport)}`;\n    });\n  }\n\n  removeDestroyedSsrcs() {\n    for (const ssrc in this.streamMetricReports) {\n      if (!this.currentSsrcs[ssrc]) {\n        delete this.streamMetricReports[ssrc];\n      }\n    }\n  }\n\n}\n\nexports.default = DefaultClientMetricReport;","map":{"version":3,"mappings":"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","names":["DefaultClientMetricReport","constructor","logger","videoStreamIndex","selfAttendeeId","GlobalMetricReport_1","metricName","ssrc","metricReport","streamMetricReports","globalMetricReport","Number","currentMetrics","decoderNormal","previousMetrics","decoderCalls","decoderAbnormal","sourceMetricName","sentOrReceived","lost","total","intervalSeconds","currentTimestampMs","previousTimestampMs","diff","Math","trunc","googActualEncBitrate","transform","identityValue","type","SignalingProtocol_js_1","Type","VIDEO_ACTUAL_ENCODER_BITRATE","googAvailableSendBandwidth","VIDEO_AVAILABLE_SEND_BANDWIDTH","googRetransmitBitrate","VIDEO_RETRANSMIT_BITRATE","googAvailableReceiveBandwidth","VIDEO_AVAILABLE_RECEIVE_BANDWIDTH","googTargetEncBitrate","VIDEO_TARGET_ENCODER_BITRATE","googBucketDelay","VIDEO_BUCKET_DELAY_MS","googRtt","STUN_RTT_MS","packetsDiscardedOnSend","countPerSecond","SOCKET_DISCARDED_PPS","availableIncomingBitrate","availableOutgoingBitrate","currentRoundTripTime","googJitterReceived","RTC_MIC_JITTER_MS","jitter","secondsToMilliseconds","packetsSent","RTC_MIC_PPS","bytesSent","bitsPerSecond","RTC_MIC_BITRATE","RTC_MIC_RTT_MS","packetsLost","packetLossPercent","RTC_MIC_FRACTION_PACKET_LOST_PERCENT","source","packetsReceived","RTC_SPK_PPS","RTC_SPK_FRACTION_PACKET_LOST_PERCENT","RTC_SPK_JITTER_MS","googDecodingCTN","googDecodingNormal","decoderLossPercent","RTC_SPK_FRACTION_DECODER_LOSS_PERCENT","bytesReceived","RTC_SPK_BITRATE","googCurrentDelayMs","RTC_SPK_CURRENT_DELAY_MS","googJitterBufferMs","RTC_SPK_JITTER_BUFFER_MS","VIDEO_SENT_RTT_MS","googEncodeUsagePercent","VIDEO_ENCODE_USAGE_PERCENT","googNacksReceived","VIDEO_NACKS_RECEIVED","nackCount","googPlisReceived","VIDEO_PLIS_RECEIVED","pliCount","googFirsReceived","VIDEO_FIRS_RECEIVED","firCount","googAvgEncodeMs","VIDEO_AVERAGE_ENCODE_MS","googFrameRateInput","VIDEO_INPUT_FPS","framesEncoded","VIDEO_ENCODE_FPS","googFrameRateSent","VIDEO_SENT_FPS","framerateMean","VIDEO_SENT_PPS","VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT","VIDEO_SENT_BITRATE","droppedFrames","VIDEO_DROPPED_FPS","qpSum","VIDEO_SENT_QP_SUM","googFrameHeightSent","VIDEO_ENCODE_HEIGHT","googFrameWidthSent","VIDEO_ENCODE_WIDTH","frameHeight","frameWidth","googTargetDelayMs","VIDEO_TARGET_DELAY_MS","googDecodeMs","VIDEO_DECODE_MS","googFrameRateOutput","VIDEO_OUTPUT_FPS","VIDEO_RECEIVED_PPS","VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT","googRenderDelayMs","VIDEO_RENDER_DELAY_MS","googFrameRateReceived","VIDEO_RECEIVED_FPS","framesDecoded","VIDEO_DECODE_FPS","googNacksSent","VIDEO_NACKS_SENT","googFirsSent","VIDEO_FIRS_SENT","googPlisSent","VIDEO_PLIS_SENT","VIDEO_RECEIVED_BITRATE","VIDEO_CURRENT_DELAY_MS","VIDEO_JITTER_BUFFER_MS","discardedPackets","VIDEO_DISCARDED_PPS","VIDEO_RECEIVED_JITTER_MS","VIDEO_RECEIVED_QP_SUM","googFrameHeightReceived","VIDEO_DECODE_HEIGHT","googFrameWidthReceived","VIDEO_DECODE_WIDTH","videoUpstreamBitrate","media","ClientMetricReportMediaType_1","VIDEO","dir","ClientMetricReportDirection_1","UPSTREAM","videoUpstreamPacketsSent","videoUpstreamPacketLossPercent","videoUpstreamFramesEncodedPerSecond","videoUpstreamGoogFrameHeight","videoUpstreamGoogFrameWidth","videoUpstreamFrameHeight","videoUpstreamFrameWidth","videoDownstreamBitrate","DOWNSTREAM","videoDownstreamPacketLossPercent","videoDownstreamPacketsReceived","videoDownstreamFramesDecodedPerSecond","videoDownstreamGoogFrameHeight","videoDownstreamGoogFrameWidth","videoDownstreamFrameHeight","videoDownstreamFrameWidth","audioPacketsReceived","AUDIO","audioPacketsReceivedFractionLoss","audioDecoderLoss","audioPacketsSent","audioPacketLossPercent","videoPacketSentPerSecond","availableSendBandwidth","availableReceiveBandwidth","audioSpeakerDelayMs","nackCountReceivedPerSecond","googNackCountReceivedPerSecond","getMetricMap","mediaType","direction","audioUpstreamMetricMap","audioDownstreamMetricMap","videoUpstreamMetricMap","videoDownstreamMetricMap","globalMetricMap","getObservableMetricValue","observableMetricSpec","metricMap","metricSpec","hasOwnProperty","streamMetricReport","getObservableVideoMetricValue","ssrcNum","observableVideoMetricSpec","getObservableMetrics","metric","getObservableVideoMetrics","videoStreamMetrics","error","metricValue","isNaN","streamId","attendeeId","attendeeIdForStreamId","clone","cloned","print","clientMetricReport","debug","JSON","stringify","removeDestroyedSsrcs","currentSsrcs","exports"],"sourceRoot":"","sources":["../../src/clientmetricreport/DefaultClientMetricReport.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}