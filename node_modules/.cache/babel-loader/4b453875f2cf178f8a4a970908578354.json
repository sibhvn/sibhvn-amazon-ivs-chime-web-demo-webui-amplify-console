{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VideoPreferences = exports.MutableVideoPreferences = void 0;\n\nclass ObjectSet {\n  constructor() {\n    let items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    this.items = items;\n  }\n\n  static default() {\n    return new ObjectSet([]);\n  } // Returns the items in sorted order.\n\n\n  [Symbol.iterator]() {\n    let i = 0;\n    const items = this.items;\n    return {\n      next() {\n        if (i < items.length) {\n          return {\n            done: false,\n            value: items[i++]\n          };\n        }\n\n        return {\n          done: true,\n          value: null\n        };\n      }\n\n    };\n  }\n\n  first() {\n    return this.items[0];\n  }\n\n  add(item) {\n    // If this is used elsewhere, there needs to be a duplicate check here\n    this.items.push(item);\n  }\n\n  replaceFirst(newItem, f) {\n    const pos = this.items.findIndex(f);\n\n    if (pos === -1) {\n      // If this is used elsewhere, there needs to be a duplicate check here\n      this.items.push(newItem);\n    } else if (!this.has(newItem)) {\n      this.items[pos] = newItem;\n    } else {\n      this.items.splice(pos, 1);\n    }\n  }\n\n  remove(item) {\n    this.items = this.items.filter(a => !a.equals(item));\n  }\n\n  clear() {\n    this.items = [];\n  }\n\n  isEmpty() {\n    return this.items.length === 0;\n  }\n\n  equals(other) {\n    if (other === this) {\n      return true;\n    }\n\n    if (other.items.length !== this.items.length) {\n      return false;\n    } // TODO: if we keep the arrays sorted correctly, not just by priority, then\n    // we don't need to do this painstaking O(n^2) work.\n\n\n    for (const item of this.items) {\n      if (!other.items.some(a => a.equals(item))) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  has(item) {\n    return this.items.some(a => a.equals(item));\n  }\n\n  some(f) {\n    return this.items.some(f);\n  }\n\n  clone() {\n    return new ObjectSet([...this.items]);\n  }\n\n  sort() {\n    this.items.sort((a, b) => a.partialCompare(b));\n  }\n\n  modify() {\n    // COW.\n    return new SetBuilder(this);\n  }\n\n}\n\nclass SetBuilder {\n  constructor() {\n    let items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new ObjectSet();\n    this.items = items;\n    this.copied = false;\n  }\n\n  cow() {\n    if (this.copied) {\n      return;\n    }\n\n    this.items = this.items.clone();\n    this.copied = true;\n  }\n\n  add(item) {\n    // Don't actually need to COW unless the item is there to add.\n    if (this.items.has(item)) {\n      return;\n    }\n\n    this.cow();\n    this.items.add(item);\n  }\n\n  replaceFirst(newItem, f) {\n    // Don't actually need to COW unless the item is already there\n    // and there are no items to replace\n    if (this.items.has(newItem) && !this.items.some(f)) {\n      return;\n    }\n\n    this.cow();\n    this.items.replaceFirst(newItem, f);\n  }\n\n  remove(item) {\n    // Don't actually need to COW unless the item is there to remove.\n    if (!this.items.has(item)) {\n      return;\n    }\n\n    this.cow();\n    this.items.remove(item);\n  }\n\n  some(f) {\n    return this.items.some(f);\n  }\n\n  clear() {\n    if (this.items.isEmpty()) {\n      return;\n    }\n\n    this.cow();\n    this.items.clear();\n  }\n\n  build() {\n    // Immutable sets are always kept sorted!\n    if (this.copied) {\n      this.items.sort();\n    }\n\n    this.copied = false;\n    return this.items;\n  }\n\n}\n\nclass MutableVideoPreferences {\n  constructor(builder) {\n    this.builder = builder;\n  }\n\n  add(pref) {\n    this.builder.add(pref);\n  }\n\n  replaceFirst(newPref, f) {\n    this.builder.replaceFirst(newPref, f);\n  }\n\n  remove(pref) {\n    this.builder.remove(pref);\n  }\n\n  some(f) {\n    return this.builder.some(f);\n  }\n\n  clear() {\n    this.builder.clear();\n  }\n\n  build() {\n    return new VideoPreferences(this.builder.build());\n  }\n\n}\n\nexports.MutableVideoPreferences = MutableVideoPreferences;\n\nclass VideoPreferences {\n  /** @internal */\n  constructor(items) {\n    this.items = items;\n  }\n\n  static prepare() {\n    return new MutableVideoPreferences(new SetBuilder());\n  }\n\n  static default() {\n    return new VideoPreferences(ObjectSet.default());\n  }\n\n  [Symbol.iterator]() {\n    return this.items[Symbol.iterator]();\n  }\n\n  highestPriority() {\n    var _a;\n\n    return (_a = this.items.first()) === null || _a === void 0 ? void 0 : _a.priority;\n  } // Our items happen to always be sorted!\n\n\n  sorted() {\n    return this.items[Symbol.iterator]();\n  }\n\n  equals(other) {\n    return other === this || this.items.equals(other.items);\n  }\n\n  modify() {\n    return new MutableVideoPreferences(this.items.modify());\n  }\n\n  some(f) {\n    return this.items.some(f);\n  }\n\n  isEmpty() {\n    return this.items.isEmpty();\n  }\n\n  clone() {\n    const videoPreferences = VideoPreferences.prepare();\n\n    for (const preference of this.items) {\n      videoPreferences.add(preference.clone());\n    }\n\n    return videoPreferences.build();\n  }\n\n}\n\nexports.VideoPreferences = VideoPreferences;\nexports.default = VideoPreferences;","map":{"version":3,"mappings":"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","names":["ObjectSet","constructor","items","default","Symbol","iterator","i","next","length","done","value","first","add","item","push","replaceFirst","newItem","f","pos","findIndex","has","splice","remove","filter","a","equals","clear","isEmpty","other","some","clone","sort","b","partialCompare","modify","SetBuilder","cow","copied","build","MutableVideoPreferences","builder","pref","newPref","VideoPreferences","exports","prepare","highestPriority","_a","priority","sorted","videoPreferences","preference"],"sourceRoot":"","sources":["../../src/videodownlinkbandwidthpolicy/VideoPreferences.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}