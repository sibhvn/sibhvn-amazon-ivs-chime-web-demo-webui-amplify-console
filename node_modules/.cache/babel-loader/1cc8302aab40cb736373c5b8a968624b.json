{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * [[MessagingSessionConfiguration]] contains the information necessary to start\n * a messaging session.\n */\n\n/* eslint  @typescript-eslint/no-explicit-any: 0, @typescript-eslint/explicit-module-boundary-types: 0 */\n\nclass MessagingSessionConfiguration {\n  /**\n   * Constructs a MessagingSessionConfiguration optionally with userArn, messaging session id, a messaging session\n   * endpoint URL, the chimeClient, and the AWSClient.\n   *\n   * endpointUrl is deprecated and should not be used. Internally it is resolved on connect via chimeClient if undefined, and\n   * always re-resolved on reconnect.\n   *\n   * The messaging session id is to uniquely identify this messaging session for the userArn.\n   * If messaging session id is passed in as null, it will be automatically generated.\n   */\n  constructor(userArn, messagingSessionId, endpointUrl, chimeClient, awsClient) {\n    this.userArn = userArn;\n    this.messagingSessionId = messagingSessionId;\n    this.endpointUrl = endpointUrl;\n    this.chimeClient = chimeClient;\n    this.awsClient = awsClient;\n    /**\n     * Maximum amount of time in milliseconds to allow for reconnecting.\n     */\n\n    this.reconnectTimeoutMs = 10 * 1000;\n    /**\n     * Fixed wait amount in milliseconds between reconnecting attempts.\n     */\n\n    this.reconnectFixedWaitMs = 0;\n    /**\n     * The short back off time in milliseconds between reconnecting attempts.\n     */\n\n    this.reconnectShortBackoffMs = 1 * 1000;\n    /**\n     * The long back off time in milliseconds between reconnecting attempts.\n     */\n\n    this.reconnectLongBackoffMs = 5 * 1000;\n\n    if (!this.messagingSessionId) {\n      this.messagingSessionId = this.generateSessionId();\n    }\n  }\n\n  generateSessionId() {\n    const num = new Uint32Array(1);\n    const randomNum = window.crypto.getRandomValues(num);\n    return randomNum[0].toString();\n  }\n\n}\n\nexports.default = MessagingSessionConfiguration;","map":{"version":3,"mappings":"cAAA;AACA;;;;;AAEA;;;;;AAIA;;AACA,MAAqBA,6BAArB,CAAkD;EAqBhD;;;;;;;;;;EAUAC,YACSC,OADT,EAESC,kBAFT,EAGSC,WAHT,EAISC,WAJT,EAKSC,SALT,EAKuB;IAJd;IACA;IACA;IACA;IACA;IAnCT;;;;IAGA,0BAA6B,KAAK,IAAlC;IAEA;;;;IAGA,4BAA+B,CAA/B;IAEA;;;;IAGA,+BAAkC,IAAI,IAAtC;IAEA;;;;IAGA,8BAAiC,IAAI,IAArC;;IAmBE,IAAI,CAAC,KAAKH,kBAAV,EAA8B;MAC5B,KAAKA,kBAAL,GAA0B,KAAKI,iBAAL,EAA1B;IACD;EACF;;EAEOA,iBAAiB;IACvB,MAAMC,GAAG,GAAG,IAAIC,WAAJ,CAAgB,CAAhB,CAAZ;IACA,MAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcC,eAAd,CAA8BL,GAA9B,CAAlB;IACA,OAAOE,SAAS,CAAC,CAAD,CAAT,CAAaI,QAAb,EAAP;EACD;;AA/C+C;;AAAlDC","names":["MessagingSessionConfiguration","constructor","userArn","messagingSessionId","endpointUrl","chimeClient","awsClient","generateSessionId","num","Uint32Array","randomNum","window","crypto","getRandomValues","toString","exports"],"sourceRoot":"","sources":["../../src/messagingsession/MessagingSessionConfiguration.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}