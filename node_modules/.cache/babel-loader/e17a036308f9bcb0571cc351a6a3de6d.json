{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst SignalingClientEventType_1 = require(\"../signalingclient/SignalingClientEventType\");\n\nconst BaseTask_1 = require(\"./BaseTask\");\n\nclass CleanStoppedSessionTask extends BaseTask_1.default {\n  constructor(context) {\n    super(context.logger);\n    this.context = context;\n    this.taskName = 'CleanStoppedSessionTask';\n    this.taskCanceler = null;\n  }\n\n  cancel() {\n    if (this.taskCanceler) {\n      this.taskCanceler.cancel();\n      this.taskCanceler = null;\n    }\n  }\n\n  run() {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        if (this.context.signalingClient.ready()) {\n          this.context.signalingClient.closeConnection();\n          yield this.receiveWebSocketClosedEvent();\n        }\n      } catch (error) {\n        throw error;\n      } finally {\n        for (const observer of this.context.removableObservers) {\n          observer.removeObserver();\n        }\n\n        this.context.statsCollector.stop();\n        this.context.statsCollector = null;\n        this.context.connectionMonitor.stop();\n        this.context.connectionMonitor = null;\n\n        if (this.context.peer) {\n          this.context.peer.close();\n        }\n\n        this.context.peer = null;\n        this.context.localVideoSender = null;\n        this.context.sdpAnswer = null;\n        this.context.sdpOfferInit = null;\n        this.context.indexFrame = null;\n        this.context.videoDownlinkBandwidthPolicy.reset();\n        this.context.iceCandidateHandler = null;\n        this.context.iceCandidates = [];\n        this.context.turnCredentials = null;\n        this.context.videoSubscriptions = null;\n        this.context.transceiverController.reset();\n\n        if (this.context.videoUplinkBandwidthPolicy.setTransceiverController) {\n          this.context.videoUplinkBandwidthPolicy.setTransceiverController(undefined);\n        }\n\n        if (this.context.videoDownlinkBandwidthPolicy.bindToTileController) {\n          this.context.videoDownlinkBandwidthPolicy.bindToTileController(undefined);\n        }\n\n        const tile = this.context.videoTileController.getLocalVideoTile();\n\n        if (tile) {\n          tile.bindVideoStream('', true, null, null, null, null);\n        }\n\n        this.context.videoTileController.removeAllVideoTiles();\n      }\n    });\n  }\n\n  receiveWebSocketClosedEvent() {\n    return new Promise((resolve, reject) => {\n      class Interceptor {\n        constructor(signalingClient) {\n          this.signalingClient = signalingClient;\n        }\n\n        cancel() {\n          this.signalingClient.removeObserver(this);\n          reject(new Error(`CleanStoppedSessionTask got canceled while waiting for the WebSocket closed event`));\n        }\n\n        handleSignalingClientEvent(event) {\n          if (event.type === SignalingClientEventType_1.default.WebSocketClosed) {\n            this.signalingClient.removeObserver(this);\n            resolve();\n          }\n        }\n\n      }\n\n      const interceptor = new Interceptor(this.context.signalingClient);\n      this.taskCanceler = interceptor;\n      this.context.signalingClient.registerObserver(interceptor);\n    });\n  }\n\n}\n\nexports.default = CleanStoppedSessionTask;","map":{"version":3,"mappings":"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","names":["CleanStoppedSessionTask","BaseTask_1","constructor","context","logger","cancel","taskCanceler","run","signalingClient","ready","closeConnection","receiveWebSocketClosedEvent","error","observer","removableObservers","removeObserver","statsCollector","stop","connectionMonitor","peer","close","localVideoSender","sdpAnswer","sdpOfferInit","indexFrame","videoDownlinkBandwidthPolicy","reset","iceCandidateHandler","iceCandidates","turnCredentials","videoSubscriptions","transceiverController","videoUplinkBandwidthPolicy","setTransceiverController","undefined","bindToTileController","tile","videoTileController","getLocalVideoTile","bindVideoStream","removeAllVideoTiles","Promise","resolve","reject","Interceptor","Error","handleSignalingClientEvent","event","type","SignalingClientEventType_1","WebSocketClosed","interceptor","registerObserver","exports"],"sourceRoot":"","sources":["../../src/task/CleanStoppedSessionTask.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}