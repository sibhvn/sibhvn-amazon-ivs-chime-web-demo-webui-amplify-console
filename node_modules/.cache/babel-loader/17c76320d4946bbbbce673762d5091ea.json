{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\n\nconst MeetingSessionStatusCode_1 = require(\"./MeetingSessionStatusCode\");\n/**\n * [[MeetingSessionStatus]] indicates a status received regarding the session.\n */\n\n\nclass MeetingSessionStatus {\n  constructor(_statusCode) {\n    this._statusCode = _statusCode;\n  }\n\n  statusCode() {\n    return this._statusCode;\n  }\n\n  isFailure() {\n    switch (this._statusCode) {\n      case MeetingSessionStatusCode_1.default.AudioAuthenticationRejected:\n      case MeetingSessionStatusCode_1.default.AudioCallAtCapacity:\n      case MeetingSessionStatusCode_1.default.AudioInternalServerError:\n      case MeetingSessionStatusCode_1.default.AudioServiceUnavailable:\n      case MeetingSessionStatusCode_1.default.AudioDisconnected:\n      case MeetingSessionStatusCode_1.default.VideoCallAtSourceCapacity:\n      case MeetingSessionStatusCode_1.default.SignalingBadRequest:\n      case MeetingSessionStatusCode_1.default.SignalingInternalServerError:\n      case MeetingSessionStatusCode_1.default.SignalingRequestFailed:\n      case MeetingSessionStatusCode_1.default.StateMachineTransitionFailed:\n      case MeetingSessionStatusCode_1.default.ICEGatheringTimeoutWorkaround:\n      case MeetingSessionStatusCode_1.default.ConnectionHealthReconnect:\n      case MeetingSessionStatusCode_1.default.RealtimeApiFailed:\n      case MeetingSessionStatusCode_1.default.TaskFailed:\n      case MeetingSessionStatusCode_1.default.NoAttendeePresent:\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  isTerminal() {\n    switch (this._statusCode) {\n      case MeetingSessionStatusCode_1.default.Left:\n      case MeetingSessionStatusCode_1.default.AudioJoinedFromAnotherDevice:\n      case MeetingSessionStatusCode_1.default.AudioAuthenticationRejected:\n      case MeetingSessionStatusCode_1.default.AudioCallAtCapacity:\n      case MeetingSessionStatusCode_1.default.MeetingEnded:\n      case MeetingSessionStatusCode_1.default.AudioDisconnected:\n      case MeetingSessionStatusCode_1.default.TURNCredentialsForbidden:\n      case MeetingSessionStatusCode_1.default.SignalingBadRequest:\n      case MeetingSessionStatusCode_1.default.SignalingRequestFailed:\n      case MeetingSessionStatusCode_1.default.VideoCallAtSourceCapacity:\n      case MeetingSessionStatusCode_1.default.RealtimeApiFailed:\n      case MeetingSessionStatusCode_1.default.AudioAttendeeRemoved:\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  isAudioConnectionFailure() {\n    switch (this._statusCode) {\n      case MeetingSessionStatusCode_1.default.AudioAuthenticationRejected:\n      case MeetingSessionStatusCode_1.default.AudioInternalServerError:\n      case MeetingSessionStatusCode_1.default.AudioServiceUnavailable:\n      case MeetingSessionStatusCode_1.default.StateMachineTransitionFailed:\n      case MeetingSessionStatusCode_1.default.ICEGatheringTimeoutWorkaround:\n      case MeetingSessionStatusCode_1.default.SignalingBadRequest:\n      case MeetingSessionStatusCode_1.default.SignalingInternalServerError:\n      case MeetingSessionStatusCode_1.default.SignalingRequestFailed:\n      case MeetingSessionStatusCode_1.default.RealtimeApiFailed:\n      case MeetingSessionStatusCode_1.default.NoAttendeePresent:\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  toString() {\n    switch (this._statusCode) {\n      case MeetingSessionStatusCode_1.default.OK:\n        return 'Everything is OK so far.';\n\n      case MeetingSessionStatusCode_1.default.Left:\n        return 'The attendee left the meeting.';\n\n      case MeetingSessionStatusCode_1.default.AudioJoinedFromAnotherDevice:\n        return 'The attendee joined from another device.';\n\n      case MeetingSessionStatusCode_1.default.AudioDisconnectAudio:\n        return 'The audio connection failed.';\n\n      case MeetingSessionStatusCode_1.default.AudioAuthenticationRejected:\n        return 'The meeting rejected the attendee.';\n\n      case MeetingSessionStatusCode_1.default.AudioCallAtCapacity:\n        return \"The attendee couldn't join because the meeting was at capacity.\";\n\n      case MeetingSessionStatusCode_1.default.AudioCallEnded:\n      case MeetingSessionStatusCode_1.default.TURNMeetingEnded:\n      case MeetingSessionStatusCode_1.default.MeetingEnded:\n        return 'The meeting ended.';\n\n      case MeetingSessionStatusCode_1.default.AudioInternalServerError:\n      case MeetingSessionStatusCode_1.default.AudioServiceUnavailable:\n      case MeetingSessionStatusCode_1.default.AudioDisconnected:\n        return 'The audio connection failed.';\n\n      case MeetingSessionStatusCode_1.default.VideoCallSwitchToViewOnly:\n        return \"The attendee couldn't start the local video because the maximum video capacity was reached.\";\n\n      case MeetingSessionStatusCode_1.default.VideoCallAtSourceCapacity:\n        return 'The connection failed due to an internal server error.';\n\n      case MeetingSessionStatusCode_1.default.SignalingBadRequest:\n      case MeetingSessionStatusCode_1.default.SignalingInternalServerError:\n      case MeetingSessionStatusCode_1.default.SignalingRequestFailed:\n        return 'The signaling connection failed.';\n\n      case MeetingSessionStatusCode_1.default.StateMachineTransitionFailed:\n        return 'The state transition failed.';\n\n      case MeetingSessionStatusCode_1.default.ICEGatheringTimeoutWorkaround:\n        return 'Gathering ICE candidates timed out. In Chrome, this might indicate that the browser is in a bad state after reconnecting to VPN.';\n\n      case MeetingSessionStatusCode_1.default.ConnectionHealthReconnect:\n        return 'The meeting was reconnected.';\n\n      case MeetingSessionStatusCode_1.default.RealtimeApiFailed:\n        return 'The real-time API failed. This status code might indicate that the callback you passed to the real-time API threw an exception.';\n\n      case MeetingSessionStatusCode_1.default.TaskFailed:\n        return 'The connection failed. See the error message for more details.';\n\n      case MeetingSessionStatusCode_1.default.AudioDeviceSwitched:\n        return 'The attendee chose another audio device.';\n\n      case MeetingSessionStatusCode_1.default.IncompatibleSDP:\n        return 'The connection failed due to incompatible SDP.';\n\n      case MeetingSessionStatusCode_1.default.TURNCredentialsForbidden:\n        return 'The meeting ended, or the attendee was removed.';\n\n      case MeetingSessionStatusCode_1.default.NoAttendeePresent:\n        return 'The attendee was not present.';\n\n      case MeetingSessionStatusCode_1.default.AudioAttendeeRemoved:\n        return 'The meeting ended because attendee removed.';\n\n      case MeetingSessionStatusCode_1.default.AudioVideoWasRemovedFromPrimaryMeeting:\n        return 'The Primary meeting credentials provided are no longer valid. chime::DeleteAttendee may have been called on them.';\n\n      /* istanbul ignore next */\n\n      default:\n        {\n          // You get a compile-time error if you do not handle any status code.\n          const exhaustiveCheck = this._statusCode;\n          throw new Error(`Unhandled case: ${exhaustiveCheck}`);\n        }\n    }\n  }\n\n  static fromSignalFrame(frame) {\n    if (frame.error && frame.error.status) {\n      return this.fromSignalingStatus(frame.error.status);\n    } else if (frame.type === SignalingProtocol_js_1.SdkSignalFrame.Type.AUDIO_STATUS) {\n      if (frame.audioStatus) {\n        return this.fromAudioStatus(frame.audioStatus.audioStatus);\n      }\n\n      return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.SignalingRequestFailed);\n    } else if (frame.type === SignalingProtocol_js_1.SdkSignalFrame.Type.PRIMARY_MEETING_LEAVE) {\n      return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.AudioVideoWasRemovedFromPrimaryMeeting);\n    }\n\n    return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.OK);\n  }\n\n  static fromAudioStatus(status) {\n    // TODO: Add these numbers to proto definition and reference them here.\n    switch (status) {\n      case 200:\n        return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.OK);\n\n      case 301:\n        return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.AudioJoinedFromAnotherDevice);\n\n      case 302:\n        return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.AudioDisconnectAudio);\n\n      case 403:\n        return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.AudioAuthenticationRejected);\n\n      case 409:\n        return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.AudioCallAtCapacity);\n\n      case 410:\n        return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.MeetingEnded);\n\n      case 411:\n        return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.AudioAttendeeRemoved);\n\n      case 500:\n        return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.AudioInternalServerError);\n\n      case 503:\n        return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.AudioServiceUnavailable);\n\n      default:\n        switch (Math.floor(status / 100)) {\n          case 2:\n            return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.OK);\n\n          default:\n            return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.AudioDisconnected);\n        }\n\n    }\n  }\n\n  static fromSignalingStatus(status) {\n    // TODO: Add these numbers to proto definition and reference them here.\n    //\n    // We don't bother adding additional codes with different prefixes, and we probably\n    // shouldn't be prefixing all these errors (e.g. `AuthenticationRejected`) with the media type\n    // since that doesn't make sense.\n    switch (status) {\n      case 206:\n        return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.VideoCallSwitchToViewOnly);\n\n      case 509:\n        return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.VideoCallAtSourceCapacity);\n\n      case 403:\n        return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.AudioAuthenticationRejected);\n\n      case 409:\n        return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.AudioCallAtCapacity);\n\n      default:\n        switch (Math.floor(status / 100)) {\n          case 2:\n            return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.OK);\n\n          case 4:\n            return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.SignalingBadRequest);\n\n          case 5:\n            return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.SignalingInternalServerError);\n\n          default:\n            return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.SignalingRequestFailed);\n        }\n\n    }\n  }\n\n}\n\nexports.default = MeetingSessionStatus;","map":{"version":3,"mappings":"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","names":["MeetingSessionStatus","constructor","_statusCode","statusCode","isFailure","MeetingSessionStatusCode_1","AudioAuthenticationRejected","AudioCallAtCapacity","AudioInternalServerError","AudioServiceUnavailable","AudioDisconnected","VideoCallAtSourceCapacity","SignalingBadRequest","SignalingInternalServerError","SignalingRequestFailed","StateMachineTransitionFailed","ICEGatheringTimeoutWorkaround","ConnectionHealthReconnect","RealtimeApiFailed","TaskFailed","NoAttendeePresent","isTerminal","Left","AudioJoinedFromAnotherDevice","MeetingEnded","TURNCredentialsForbidden","AudioAttendeeRemoved","isAudioConnectionFailure","toString","OK","AudioDisconnectAudio","AudioCallEnded","TURNMeetingEnded","VideoCallSwitchToViewOnly","AudioDeviceSwitched","IncompatibleSDP","AudioVideoWasRemovedFromPrimaryMeeting","exhaustiveCheck","Error","fromSignalFrame","frame","error","status","fromSignalingStatus","type","SignalingProtocol_js_1","Type","AUDIO_STATUS","audioStatus","fromAudioStatus","PRIMARY_MEETING_LEAVE","Math","floor","exports"],"sourceRoot":"","sources":["../../src/meetingsession/MeetingSessionStatus.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}