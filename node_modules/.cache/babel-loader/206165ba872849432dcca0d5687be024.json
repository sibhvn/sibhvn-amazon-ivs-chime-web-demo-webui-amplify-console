{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\n/**\n * A device that augments a {@link Device} to apply Amazon Voice Focus\n * noise suppression to an audio input.\n */\n\n\nclass VoiceFocusTransformDevice {\n  /** @internal */\n  constructor(device, voiceFocus, delegate, nodeOptions) {\n    let failed = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n    let node = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : undefined;\n    let browserBehavior = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : new DefaultBrowserBehavior_1.default();\n    let farEndStreamToAudioSourceNode = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : new Map();\n    let mixDestNode = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : undefined;\n    let mixSourceNode = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : undefined;\n    this.device = device;\n    this.voiceFocus = voiceFocus;\n    this.delegate = delegate;\n    this.nodeOptions = nodeOptions;\n    this.failed = failed;\n    this.node = node;\n    this.browserBehavior = browserBehavior;\n    this.farEndStreamToAudioSourceNode = farEndStreamToAudioSourceNode;\n    this.mixDestNode = mixDestNode;\n    this.mixSourceNode = mixSourceNode;\n  }\n  /**\n   * Return the inner device as provided during construction, or updated via\n   * {@link VoiceFocusTransformDevice.chooseNewInnerDevice}. Do not confuse\n   * this method with {@link VoiceFocusTransformDevice.intrinsicDevice}.\n   */\n\n\n  getInnerDevice() {\n    return this.device;\n  }\n  /**\n   * Disable the audio node while muted to reduce CPU usage.\n   *\n   * @param muted whether the audio device should be muted.\n   */\n\n\n  mute(muted) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.node) {\n        return;\n      }\n\n      if (muted) {\n        yield this.node.disable();\n      } else {\n        yield this.node.enable();\n      }\n    });\n  }\n  /**\n   * Dispose of the inner workings of the transform device. After this method is called\n   * you will need to create a new device to use Amazon Voice Focus again.\n   */\n\n\n  stop() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.node) {\n        return;\n      }\n\n      this.node.disconnect();\n      yield this.node.stop();\n    });\n  }\n  /**\n   * If you wish to choose a different inner device, but continue to use Amazon Voice Focus, you\n   * can use this method to efficiently create a new device that will reuse\n   * the same internal state. Only one of the two devices can be used at a time: switch\n   * between them using {@link DeviceController.chooseAudioInputDevice}.\n   *\n   * If the same device is passed as is currently in use, `this` is returned.\n   *\n   * @param inner The new inner device to use.\n   */\n\n\n  chooseNewInnerDevice(inner) {\n    return __awaiter(this, void 0, void 0, function* () {\n      // If the new device is 'default', always recreate. Chrome can switch out\n      // the real device underneath us.\n      if (this.device === inner && !isDefaultDevice(inner)) {\n        return this;\n      }\n\n      return new VoiceFocusTransformDevice(inner, this.voiceFocus, this.delegate, this.nodeOptions, this.failed, this.node, this.browserBehavior, this.farEndStreamToAudioSourceNode, this.mixDestNode, this.mixSourceNode);\n    });\n  }\n\n  intrinsicDevice() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.failed) {\n        return this.device;\n      }\n\n      const isUsingES = this.nodeOptions.es; // Turn the Device into constraints with appropriate AGC settings.\n\n      const trackConstraints = {\n        echoCancellation: !isUsingES,\n        // @ts-ignore\n        googEchoCancellation: !isUsingES,\n        // @ts-ignore\n        googEchoCancellation2: !isUsingES,\n        noiseSuppression: false,\n        // @ts-ignore\n        googNoiseSuppression: false,\n        // @ts-ignore\n        googHighpassFilter: false,\n        // @ts-ignore\n        googNoiseSuppression2: false\n      };\n      let useBuiltInAGC;\n\n      if (this.nodeOptions && this.nodeOptions.agc !== undefined) {\n        useBuiltInAGC = this.nodeOptions.agc.useBuiltInAGC;\n      } else {\n        useBuiltInAGC = true;\n      }\n\n      trackConstraints.autoGainControl = useBuiltInAGC; // @ts-ignore\n\n      trackConstraints.googAutoGainControl = useBuiltInAGC; // @ts-ignore\n\n      trackConstraints.googAutoGainControl2 = useBuiltInAGC; // Empty string and null.\n\n      if (!this.device) {\n        return trackConstraints;\n      } // Device ID.\n\n\n      if (typeof this.device === 'string') {\n        /* istanbul ignore if */\n        if (this.browserBehavior.requiresNoExactMediaStreamConstraints()) {\n          trackConstraints.deviceId = this.device;\n        } else {\n          trackConstraints.deviceId = {\n            exact: this.device\n          };\n        }\n\n        return trackConstraints;\n      } // It's a stream.\n\n\n      if (this.device.id) {\n        // Nothing we can do.\n        return this.device;\n      } // It's constraints.\n\n\n      return Object.assign(Object.assign({}, this.device), trackConstraints);\n    });\n  }\n\n  createAudioNode(context) {\n    var _a, _b;\n\n    return __awaiter(this, void 0, void 0, function* () {\n      if (((_a = this.node) === null || _a === void 0 ? void 0 : _a.context) === context) {\n        return {\n          start: this.node,\n          end: this.node\n        };\n      }\n\n      const agc = {\n        useVoiceFocusAGC: false\n      };\n      const options = Object.assign({\n        enabled: true,\n        agc\n      }, this.nodeOptions);\n\n      try {\n        (_b = this.node) === null || _b === void 0 ? void 0 : _b.disconnect();\n        this.node = yield this.voiceFocus.createNode(context, options);\n\n        if (this.nodeOptions.es) {\n          this.mixDestNode = new MediaStreamAudioDestinationNode(context, {\n            channelCount: 1,\n            channelCountMode: 'explicit'\n          });\n\n          for (const stream of this.farEndStreamToAudioSourceNode.keys()) {\n            this.assignFarEndStreamToAudioSourceNode(stream);\n          }\n\n          this.createMixSourceNode();\n        }\n\n        const start = this.node;\n        const end = this.node;\n        return {\n          start,\n          end\n        };\n      } catch (e) {\n        // It's better to return some audio stream than nothing.\n        this.failed = true;\n        this.delegate.onFallback(this, e);\n        throw e;\n      }\n    });\n  }\n\n  observeMeetingAudio(audioVideo) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.nodeOptions.es) {\n        return;\n      }\n\n      audioVideo.addAudioMixObserver(this);\n      const stream = yield audioVideo.getCurrentMeetingAudioStream();\n\n      if (stream) {\n        this.addFarEndStream(stream);\n      }\n    });\n  }\n\n  unObserveMeetingAudio(audioVideo) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.nodeOptions.es) {\n        return;\n      }\n\n      audioVideo.removeAudioMixObserver(this);\n      const stream = yield audioVideo.getCurrentMeetingAudioStream();\n\n      if (stream) {\n        this.removeFarendStream(stream);\n      }\n    });\n  }\n  /**\n   * Add an observer to receive notifications about Amazon Voice Focus lifecycle events.\n   * See {@link VoiceFocusTransformDeviceObserver} for details.\n   * If the observer has already been added, this method call has no effect.\n   */\n\n\n  addObserver(observer) {\n    this.delegate.addObserver(observer);\n  }\n  /**\n   * Remove an existing observer. If the observer has not been previously {@link\n   * VoiceFocusTransformDevice.addObserver|added}, this method call has no effect.\n   */\n\n\n  removeObserver(observer) {\n    this.delegate.removeObserver(observer);\n  }\n\n  addFarEndStream(activeStream) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.nodeOptions.es || !activeStream || this.farEndStreamToAudioSourceNode.has(activeStream)) {\n        return;\n      }\n\n      if (this.node) {\n        this.assignFarEndStreamToAudioSourceNode(activeStream);\n      } else {\n        this.farEndStreamToAudioSourceNode.set(activeStream, null);\n      }\n    });\n  }\n\n  removeFarendStream(inactiveStream) {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, function* () {\n      (_a = this.farEndStreamToAudioSourceNode.get(inactiveStream)) === null || _a === void 0 ? void 0 : _a.disconnect();\n      this.farEndStreamToAudioSourceNode.delete(inactiveStream);\n    });\n  }\n\n  meetingAudioStreamBecameActive(activeStream) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.addFarEndStream(activeStream);\n    });\n  }\n\n  meetingAudioStreamBecameInactive(inactiveStream) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.removeFarendStream(inactiveStream);\n    });\n  }\n\n  assignFarEndStreamToAudioSourceNode(streamToAdd) {\n    const streamNodeToAdd = this.node.context.createMediaStreamSource(streamToAdd);\n    streamNodeToAdd.channelCount = 1;\n    streamNodeToAdd.channelCountMode = 'explicit';\n    this.farEndStreamToAudioSourceNode.set(streamToAdd, streamNodeToAdd);\n    streamNodeToAdd.connect(this.mixDestNode, 0);\n  }\n\n  createMixSourceNode() {\n    this.mixSourceNode = this.node.context.createMediaStreamSource(this.mixDestNode.stream);\n    this.mixSourceNode.channelCount = 1;\n    this.mixSourceNode.channelCountMode = 'explicit';\n    this.mixSourceNode.connect(this.node, 0, 1);\n  }\n\n}\n\nfunction isDefaultDevice(device) {\n  if (device === 'default') {\n    return true;\n  }\n\n  if (!device || typeof device !== 'object') {\n    return false;\n  }\n\n  if ('deviceId' in device && device.deviceId === 'default') {\n    return true;\n  }\n\n  if ('id' in device && device.id === 'default') {\n    return true;\n  }\n\n  return false;\n}\n\nexports.default = VoiceFocusTransformDevice;","map":{"version":3,"mappings":"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","names":["VoiceFocusTransformDevice","constructor","device","voiceFocus","delegate","nodeOptions","failed","node","undefined","browserBehavior","DefaultBrowserBehavior_1","farEndStreamToAudioSourceNode","Map","mixDestNode","mixSourceNode","getInnerDevice","mute","muted","disable","enable","stop","disconnect","chooseNewInnerDevice","inner","isDefaultDevice","intrinsicDevice","isUsingES","es","trackConstraints","echoCancellation","googEchoCancellation","googEchoCancellation2","noiseSuppression","googNoiseSuppression","googHighpassFilter","googNoiseSuppression2","useBuiltInAGC","agc","autoGainControl","googAutoGainControl","googAutoGainControl2","requiresNoExactMediaStreamConstraints","deviceId","exact","id","createAudioNode","context","_a","start","end","useVoiceFocusAGC","options","enabled","_b","createNode","MediaStreamAudioDestinationNode","channelCount","channelCountMode","stream","keys","assignFarEndStreamToAudioSourceNode","createMixSourceNode","e","onFallback","observeMeetingAudio","audioVideo","addAudioMixObserver","getCurrentMeetingAudioStream","addFarEndStream","unObserveMeetingAudio","removeAudioMixObserver","removeFarendStream","addObserver","observer","removeObserver","activeStream","has","set","inactiveStream","get","delete","meetingAudioStreamBecameActive","meetingAudioStreamBecameInactive","streamToAdd","streamNodeToAdd","createMediaStreamSource","connect","exports"],"sourceRoot":"","sources":["../../src/voicefocus/VoiceFocusTransformDevice.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}