{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * [[MeetingSessionURLs]] contains the URLs that will be used to reach the\n * meeting service.\n */\n\nclass MeetingSessionURLs {\n  constructor() {\n    /**\n     * The audio host URL of the session\n     */\n    this._audioHostURL = null;\n    /**\n     * The screen data URL of the session\n     */\n\n    this._screenDataURL = null;\n    /**\n     * The screen sharing URL of the session\n     */\n\n    this._screenSharingURL = null;\n    /**\n     * The screen viewing URL of the session\n     */\n\n    this._screenViewingURL = null;\n    /**\n     * The signaling URL of the session\n     */\n\n    this._signalingURL = null;\n    /**\n     * The TURN control URL of the session\n     */\n\n    this._turnControlURL = null;\n    /**\n     * The event ingestion URL to send the meeting events.\n     */\n\n    this._eventIngestionURL = null;\n    /**\n     * Function to transform URLs. Use this to rewrite URLs to traverse proxies.\n     * The default implementation returns the original URL unchanged.\n     */\n\n    this.urlRewriter = url => {\n      return url;\n    };\n  }\n  /**\n   * Gets or sets the audio host URL with gets reflecting the result of the {@link MeetingSessionURLs.urlRewriter} function.\n   */\n\n\n  get audioHostURL() {\n    return this.urlRewriter(this._audioHostURL);\n  }\n\n  set audioHostURL(value) {\n    this._audioHostURL = value;\n  }\n  /**\n   * Gets or sets the screen data URL with gets reflecting the result of the {@link MeetingSessionURLs.urlRewriter} function.\n   */\n\n\n  get screenDataURL() {\n    return this.urlRewriter(this._screenDataURL);\n  }\n\n  set screenDataURL(value) {\n    this._screenDataURL = value;\n  }\n  /**\n   * Gets or sets the screen sharing URL with gets reflecting the result of the {@link MeetingSessionURLs.urlRewriter} function.\n   */\n\n\n  get screenSharingURL() {\n    return this.urlRewriter(this._screenSharingURL);\n  }\n\n  set screenSharingURL(value) {\n    this._screenSharingURL = value;\n  }\n  /**\n   * Gets or sets the screen viewing URL with gets reflecting the result of the {@link MeetingSessionURLs.urlRewriter} function.\n   */\n\n\n  get screenViewingURL() {\n    return this.urlRewriter(this._screenViewingURL);\n  }\n\n  set screenViewingURL(value) {\n    this._screenViewingURL = value;\n  }\n  /**\n   * Gets or sets the signaling URL with gets reflecting the result of the {@link MeetingSessionURLs.urlRewriter} function.\n   */\n\n\n  get signalingURL() {\n    return this.urlRewriter(this._signalingURL);\n  }\n\n  set signalingURL(value) {\n    this._signalingURL = value;\n  }\n  /**\n   * Gets or sets the TURN control URL with gets reflecting the result of the {@link MeetingSessionURLs.urlRewriter} function.\n   */\n\n\n  get turnControlURL() {\n    return this.urlRewriter(this._turnControlURL);\n  }\n\n  set turnControlURL(value) {\n    this._turnControlURL = value;\n  }\n  /**\n   * Gets or sets the events ingestion URL with gets reflecting the result of the {@link MeetingSessionURLs.urlRewriter} function.\n   */\n\n\n  get eventIngestionURL() {\n    return this.urlRewriter(this._eventIngestionURL);\n  }\n\n  set eventIngestionURL(value) {\n    this._eventIngestionURL = value;\n  }\n\n}\n\nexports.default = MeetingSessionURLs;","map":{"version":3,"mappings":"cAAA;AACA;;;;;AAEA;;;;;AAIA,MAAqBA,kBAArB,CAAuC;EAAvCC;IACE;;;IAGQ,qBAA+B,IAA/B;IAER;;;;IAGQ,sBAAgC,IAAhC;IAER;;;;IAGQ,yBAAmC,IAAnC;IAER;;;;IAGQ,yBAAmC,IAAnC;IAER;;;;IAGQ,qBAA+B,IAA/B;IAER;;;;IAGQ,uBAAiC,IAAjC;IAER;;;;IAGQ,0BAAoC,IAApC;IA+ER;;;;;IAIA,mBAAsDC,GAAD,IAAuB;MAC1E,OAAOA,GAAP;IACD,CAFD;EAGD;EApFC;;;;;EAGgB,IAAZC,YAAY;IACd,OAAO,KAAKC,WAAL,CAAiB,KAAKC,aAAtB,CAAP;EACD;;EAEe,IAAZF,YAAY,CAACG,KAAD,EAAqB;IACnC,KAAKD,aAAL,GAAqBC,KAArB;EACD;EAED;;;;;EAGiB,IAAbC,aAAa;IACf,OAAO,KAAKH,WAAL,CAAiB,KAAKI,cAAtB,CAAP;EACD;;EAEgB,IAAbD,aAAa,CAACD,KAAD,EAAqB;IACpC,KAAKE,cAAL,GAAsBF,KAAtB;EACD;EAED;;;;;EAGoB,IAAhBG,gBAAgB;IAClB,OAAO,KAAKL,WAAL,CAAiB,KAAKM,iBAAtB,CAAP;EACD;;EAEmB,IAAhBD,gBAAgB,CAACH,KAAD,EAAqB;IACvC,KAAKI,iBAAL,GAAyBJ,KAAzB;EACD;EAED;;;;;EAGoB,IAAhBK,gBAAgB;IAClB,OAAO,KAAKP,WAAL,CAAiB,KAAKQ,iBAAtB,CAAP;EACD;;EAEmB,IAAhBD,gBAAgB,CAACL,KAAD,EAAqB;IACvC,KAAKM,iBAAL,GAAyBN,KAAzB;EACD;EAED;;;;;EAGgB,IAAZO,YAAY;IACd,OAAO,KAAKT,WAAL,CAAiB,KAAKU,aAAtB,CAAP;EACD;;EAEe,IAAZD,YAAY,CAACP,KAAD,EAAqB;IACnC,KAAKQ,aAAL,GAAqBR,KAArB;EACD;EAED;;;;;EAGkB,IAAdS,cAAc;IAChB,OAAO,KAAKX,WAAL,CAAiB,KAAKY,eAAtB,CAAP;EACD;;EAEiB,IAAdD,cAAc,CAACT,KAAD,EAAqB;IACrC,KAAKU,eAAL,GAAuBV,KAAvB;EACD;EAED;;;;;EAGqB,IAAjBW,iBAAiB;IACnB,OAAO,KAAKb,WAAL,CAAiB,KAAKc,kBAAtB,CAAP;EACD;;EAEoB,IAAjBD,iBAAiB,CAACX,KAAD,EAAqB;IACxC,KAAKY,kBAAL,GAA0BZ,KAA1B;EACD;;AA/GoC;;AAAvCa","names":["MeetingSessionURLs","constructor","url","audioHostURL","urlRewriter","_audioHostURL","value","screenDataURL","_screenDataURL","screenSharingURL","_screenSharingURL","screenViewingURL","_screenViewingURL","signalingURL","_signalingURL","turnControlURL","_turnControlURL","eventIngestionURL","_eventIngestionURL","exports"],"sourceRoot":"","sources":["../../src/meetingsession/MeetingSessionURLs.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}