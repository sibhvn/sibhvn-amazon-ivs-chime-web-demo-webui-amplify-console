{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst DefaultAudioMixController_1 = require(\"../audiomixcontroller/DefaultAudioMixController\");\n\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\n\nconst DefaultDeviceController_1 = require(\"../devicecontroller/DefaultDeviceController\");\n\nconst PermissionDeniedError_1 = require(\"../devicecontroller/PermissionDeniedError\");\n\nconst BaseTask_1 = require(\"../task/BaseTask\");\n\nconst TimeoutTask_1 = require(\"../task/TimeoutTask\");\n\nconst CheckAudioConnectivityFeedback_1 = require(\"./CheckAudioConnectivityFeedback\");\n\nconst CheckAudioInputFeedback_1 = require(\"./CheckAudioInputFeedback\");\n\nconst CheckAudioOutputFeedback_1 = require(\"./CheckAudioOutputFeedback\");\n\nconst CheckCameraResolutionFeedback_1 = require(\"./CheckCameraResolutionFeedback\");\n\nconst CheckContentShareConnectivityFeedback_1 = require(\"./CheckContentShareConnectivityFeedback\");\n\nconst CheckNetworkTCPConnectivityFeedback_1 = require(\"./CheckNetworkTCPConnectivityFeedback\");\n\nconst CheckNetworkUDPConnectivityFeedback_1 = require(\"./CheckNetworkUDPConnectivityFeedback\");\n\nconst CheckVideoConnectivityFeedback_1 = require(\"./CheckVideoConnectivityFeedback\");\n\nconst CheckVideoInputFeedback_1 = require(\"./CheckVideoInputFeedback\");\n\nconst MeetingReadinessCheckerConfiguration_1 = require(\"./MeetingReadinessCheckerConfiguration\");\n\nclass DefaultMeetingReadinessChecker {\n  constructor(logger, meetingSession) {\n    let configuration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new MeetingReadinessCheckerConfiguration_1.default();\n    this.logger = logger;\n    this.meetingSession = meetingSession;\n    this.configuration = configuration;\n    this.browserBehavior = new DefaultBrowserBehavior_1.default();\n  }\n\n  static delay(timeoutMs) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return new Promise(resolve => setTimeout(resolve, timeoutMs));\n    });\n  }\n\n  checkAudioInput(audioInputDevice) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        yield this.meetingSession.audioVideo.chooseAudioInputDevice(audioInputDevice);\n        yield this.meetingSession.audioVideo.chooseAudioInputDevice(null);\n        return CheckAudioInputFeedback_1.default.Succeeded;\n      } catch (error) {\n        this.logger.error(`MeetingReadinessChecker: Audio input check failed with error ${error}`);\n\n        if (error instanceof PermissionDeniedError_1.default) {\n          return CheckAudioInputFeedback_1.default.PermissionDenied;\n        }\n\n        return CheckAudioInputFeedback_1.default.Failed;\n      }\n    });\n  }\n\n  checkAudioOutput(audioOutputDeviceInfo, audioOutputVerificationCallback) {\n    let audioElement = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        const audioOutputDeviceId = audioOutputDeviceInfo ? DefaultDeviceController_1.default.getIntrinsicDeviceId(audioOutputDeviceInfo) : '';\n        yield this.playTone(audioOutputDeviceId, 440, audioElement);\n        const userFeedback = yield audioOutputVerificationCallback();\n\n        if (userFeedback) {\n          return CheckAudioOutputFeedback_1.default.Succeeded;\n        }\n\n        return CheckAudioOutputFeedback_1.default.Failed;\n      } catch (error) {\n        this.logger.error(`MeetingReadinessChecker: Audio output check failed with error: ${error}`);\n        return CheckAudioOutputFeedback_1.default.Failed;\n      } finally {\n        this.stopTone();\n      }\n    });\n  }\n\n  playTone(sinkId, frequency, audioElement) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const rampSec = 0.1;\n      const maxGainValue = 0.1;\n\n      if (this.oscillatorNode) {\n        this.stopTone();\n      }\n\n      this.audioContext = DefaultDeviceController_1.default.getAudioContext();\n      this.gainNode = this.audioContext.createGain();\n      this.gainNode.gain.value = 0;\n      this.oscillatorNode = this.audioContext.createOscillator();\n      this.oscillatorNode.frequency.value = frequency;\n      this.oscillatorNode.connect(this.gainNode);\n      this.destinationStream = this.audioContext.createMediaStreamDestination();\n      this.gainNode.connect(this.destinationStream);\n      const currentTime = this.audioContext.currentTime;\n      const startTime = currentTime + 0.1;\n      this.gainNode.gain.linearRampToValueAtTime(0, startTime);\n      this.gainNode.gain.linearRampToValueAtTime(maxGainValue, startTime + rampSec);\n      this.oscillatorNode.start(); // Because we always use `DefaultAudioMixController`, and both this class\n      // and DAMC use `DefaultBrowserBehavior`, it is not possible for the `bindAudioDevice` call here to throw.\n      // Nevertheless, we `catch` here and disable code coverage.\n\n      const audioMixController = new DefaultAudioMixController_1.default(this.logger);\n\n      try {\n        if (this.browserBehavior.supportsSetSinkId()) {\n          yield audioMixController.bindAudioDevice({\n            deviceId: sinkId\n          });\n        }\n      } catch (e) {\n        /* istanbul ignore next */\n        this.logger.error(`Failed to bind audio device: ${e}`);\n      }\n\n      try {\n        yield audioMixController.bindAudioElement(audioElement || new Audio());\n      } catch (e) {\n        this.logger.error(`Failed to bind audio element: ${e}`);\n      }\n\n      yield audioMixController.bindAudioStream(this.destinationStream.stream);\n    });\n  }\n\n  stopTone() {\n    if (!this.audioContext || !this.gainNode || !this.oscillatorNode || !this.destinationStream) {\n      return;\n    }\n\n    const durationSec = 1;\n    const rampSec = 0.1;\n    const maxGainValue = 0.1;\n    const currentTime = this.audioContext.currentTime;\n    this.gainNode.gain.linearRampToValueAtTime(maxGainValue, currentTime + rampSec + durationSec);\n    this.gainNode.gain.linearRampToValueAtTime(0, currentTime + rampSec * 2 + durationSec);\n    this.oscillatorNode.stop();\n    this.oscillatorNode.disconnect(this.gainNode);\n    this.gainNode.disconnect(this.destinationStream);\n    this.oscillatorNode = null;\n    this.gainNode = null;\n    this.destinationStream = null;\n  }\n\n  checkVideoInput(videoInputDevice) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        yield this.meetingSession.audioVideo.chooseVideoInputDevice(videoInputDevice);\n        yield this.meetingSession.audioVideo.chooseVideoInputDevice(null);\n        return CheckVideoInputFeedback_1.default.Succeeded;\n      } catch (error) {\n        this.logger.error(`MeetingReadinessChecker: Video check failed with error ${error}`);\n\n        if (error instanceof PermissionDeniedError_1.default) {\n          return CheckVideoInputFeedback_1.default.PermissionDenied;\n        }\n\n        return CheckVideoInputFeedback_1.default.Failed;\n      }\n    });\n  }\n\n  checkCameraResolution(videoInputDevice, width, height) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let stream;\n\n      try {\n        const videoInputDeviceId = DefaultDeviceController_1.default.getIntrinsicDeviceId(videoInputDevice);\n        const videoConstraint = {\n          video: this.calculateVideoConstraint(videoInputDeviceId, width, height)\n        };\n        stream = yield navigator.mediaDevices.getUserMedia(videoConstraint);\n      } catch (error) {\n        this.logger.error(`MeetingReadinessChecker: Camera resolution check with width: ${width} height ${height} failed with error ${error}`);\n\n        if (error && error.name === 'OverconstrainedError') {\n          return CheckCameraResolutionFeedback_1.default.ResolutionNotSupported;\n        }\n\n        if (error && error.name === 'NotAllowedError') {\n          return CheckCameraResolutionFeedback_1.default.PermissionDenied;\n        }\n\n        return CheckCameraResolutionFeedback_1.default.Failed;\n      } finally {\n        if (stream) {\n          stream.getTracks().forEach(function (track) {\n            track.stop();\n          });\n        }\n      }\n\n      return CheckCameraResolutionFeedback_1.default.Succeeded;\n    });\n  }\n\n  calculateVideoConstraint(videoInputDeviceId, width, height) {\n    const dimension = this.browserBehavior.requiresResolutionAlignment(width, height);\n    const trackConstraints = {};\n\n    if (this.browserBehavior.requiresNoExactMediaStreamConstraints()) {\n      trackConstraints.deviceId = videoInputDeviceId;\n      trackConstraints.width = width;\n      trackConstraints.height = height;\n    } else {\n      trackConstraints.deviceId = {\n        exact: videoInputDeviceId\n      };\n      trackConstraints.width = {\n        exact: dimension[0]\n      };\n      trackConstraints.height = {\n        exact: dimension[1]\n      };\n    }\n\n    return trackConstraints;\n  }\n\n  checkContentShareConnectivity(sourceId) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let isContentShareStarted = false;\n      let isAudioVideoStarted = false;\n      const contentShareObserver = {\n        contentShareDidStart: () => {\n          isContentShareStarted = true;\n        }\n      };\n      const observer = {\n        audioVideoDidStart: () => {\n          isAudioVideoStarted = true;\n        }\n      };\n\n      try {\n        this.meetingSession.audioVideo.addObserver(observer);\n        this.meetingSession.audioVideo.start();\n        this.meetingSession.audioVideo.addContentShareObserver(contentShareObserver);\n        yield this.meetingSession.audioVideo.startContentShareFromScreenCapture(sourceId);\n        yield this.executeTimeoutTask(() => __awaiter(this, void 0, void 0, function* () {\n          return isAudioVideoStarted && isContentShareStarted;\n        }));\n\n        if (!isAudioVideoStarted) {\n          return CheckContentShareConnectivityFeedback_1.default.ConnectionFailed;\n        }\n\n        yield this.stopMeeting();\n        return isContentShareStarted ? CheckContentShareConnectivityFeedback_1.default.Succeeded : CheckContentShareConnectivityFeedback_1.default.TimedOut;\n      } catch (error) {\n        this.logger.error(`MeetingReadinessChecker: Content share check failed with error ${error}`);\n\n        if (error.name === 'NotAllowedError') {\n          return CheckContentShareConnectivityFeedback_1.default.PermissionDenied;\n        } else {\n          return CheckContentShareConnectivityFeedback_1.default.Failed;\n        }\n      } finally {\n        this.meetingSession.audioVideo.removeObserver(observer);\n        this.meetingSession.audioVideo.stopContentShare();\n        this.meetingSession.audioVideo.removeContentShareObserver(contentShareObserver);\n      }\n    });\n  }\n\n  checkAudioConnectivity(audioInputDevice) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let audioPresence = false;\n      const audioVideo = this.meetingSession.audioVideo;\n\n      const attendeePresenceHandler = (attendeeId, present, _externalUserId, _dropped) => {\n        if (attendeeId === this.meetingSession.configuration.credentials.attendeeId && present) {\n          audioPresence = true;\n        }\n      };\n\n      try {\n        yield audioVideo.chooseAudioInputDevice(audioInputDevice);\n      } catch (error) {\n        this.logger.error(`MeetingReadinessChecker: Failed to get audio input device with error ${error}`);\n\n        if (error instanceof PermissionDeniedError_1.default) {\n          return CheckAudioConnectivityFeedback_1.default.AudioInputPermissionDenied;\n        }\n\n        return CheckAudioConnectivityFeedback_1.default.AudioInputRequestFailed;\n      }\n\n      audioVideo.realtimeSubscribeToAttendeeIdPresence(attendeePresenceHandler);\n\n      if (!(yield this.startMeeting())) {\n        audioVideo.realtimeUnsubscribeToAttendeeIdPresence(attendeePresenceHandler);\n\n        try {\n          yield this.meetingSession.audioVideo.chooseAudioInputDevice(null);\n        } catch (e) {\n          this.logger.error(`MeetingReadinessChecker: Failed to choose null device with error ${e}`);\n        }\n\n        return CheckAudioConnectivityFeedback_1.default.ConnectionFailed;\n      }\n\n      yield this.executeTimeoutTask(() => __awaiter(this, void 0, void 0, function* () {\n        return audioPresence;\n      }));\n      audioVideo.realtimeUnsubscribeToAttendeeIdPresence(attendeePresenceHandler);\n      yield this.stopMeeting();\n\n      try {\n        yield this.meetingSession.audioVideo.chooseAudioInputDevice(null);\n      } catch (e) {\n        this.logger.error(`MeetingReadinessChecker: Failed to choose null device with error ${e}`);\n      }\n\n      return audioPresence ? CheckAudioConnectivityFeedback_1.default.Succeeded : CheckAudioConnectivityFeedback_1.default.AudioNotReceived;\n    });\n  }\n\n  checkVideoConnectivity(videoInputDevice) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const audioVideo = this.meetingSession.audioVideo;\n\n      try {\n        yield audioVideo.chooseVideoInputDevice(videoInputDevice);\n      } catch (error) {\n        this.logger.error(`MeetingReadinessChecker: Failed to get video input device with error ${error}`);\n\n        if (error instanceof PermissionDeniedError_1.default) {\n          return CheckVideoConnectivityFeedback_1.default.VideoInputPermissionDenied;\n        }\n\n        return CheckVideoConnectivityFeedback_1.default.VideoInputRequestFailed;\n      }\n\n      if (!(yield this.startMeeting())) {\n        return CheckVideoConnectivityFeedback_1.default.ConnectionFailed;\n      }\n\n      let packetsSent = 0;\n      audioVideo.startLocalVideoTile();\n      yield this.executeTimeoutTask(() => __awaiter(this, void 0, void 0, function* () {\n        const rawStats = yield audioVideo.getRTCPeerConnectionStats();\n\n        if (rawStats) {\n          rawStats.forEach(report => {\n            if (report.type === 'outbound-rtp' && report.mediaType === 'video') {\n              packetsSent = report.packetsSent;\n            }\n          });\n        }\n\n        return packetsSent > 0;\n      }));\n      audioVideo.stopLocalVideoTile();\n      yield this.stopMeeting();\n\n      if (packetsSent <= 0) {\n        return CheckVideoConnectivityFeedback_1.default.VideoNotSent;\n      }\n\n      return CheckVideoConnectivityFeedback_1.default.Succeeded;\n    });\n  }\n\n  checkNetworkUDPConnectivity() {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        this.originalURLRewriter = this.meetingSession.configuration.urls.urlRewriter;\n      } catch (error) {\n        this.logger.error(`MeetingSessionConfiguration.urls doesn't exist. Error: ${error}`);\n        return CheckNetworkUDPConnectivityFeedback_1.default.MeetingSessionURLsNotInitialized;\n      }\n\n      this.meetingSession.configuration.urls.urlRewriter = uri => {\n        const transformedUri = this.originalURLRewriter(uri);\n\n        if (transformedUri.includes('transport=tcp')) {\n          return '';\n        }\n\n        return transformedUri;\n      };\n\n      const audioVideo = this.meetingSession.audioVideo;\n\n      if (!(yield this.startMeeting())) {\n        this.meetingSession.configuration.urls.urlRewriter = this.originalURLRewriter;\n        return CheckNetworkUDPConnectivityFeedback_1.default.ConnectionFailed;\n      }\n\n      let candidatePairSucceed = false;\n      yield this.executeTimeoutTask(() => __awaiter(this, void 0, void 0, function* () {\n        const rawStats = yield audioVideo.getRTCPeerConnectionStats();\n\n        if (rawStats) {\n          rawStats.forEach(report => {\n            if (report.type === 'candidate-pair' && report.state === 'succeeded') {\n              candidatePairSucceed = true;\n            }\n          });\n        }\n\n        return candidatePairSucceed;\n      }));\n      this.meetingSession.configuration.urls.urlRewriter = this.originalURLRewriter;\n      yield this.stopMeeting();\n\n      if (!candidatePairSucceed) {\n        return CheckNetworkUDPConnectivityFeedback_1.default.ICENegotiationFailed;\n      }\n\n      return CheckNetworkUDPConnectivityFeedback_1.default.Succeeded;\n    });\n  }\n\n  checkNetworkTCPConnectivity() {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        this.originalURLRewriter = this.meetingSession.configuration.urls.urlRewriter;\n      } catch (error) {\n        this.logger.error(`MeetingSessionConfiguration.urls doesn't exist. Error: ${error}`);\n        return CheckNetworkTCPConnectivityFeedback_1.default.MeetingSessionURLsNotInitialized;\n      }\n\n      this.meetingSession.configuration.urls.urlRewriter = uri => {\n        const transformedUri = this.originalURLRewriter(uri);\n\n        if (transformedUri.includes('transport=udp')) {\n          return '';\n        }\n\n        return transformedUri;\n      };\n\n      const audioVideo = this.meetingSession.audioVideo;\n\n      if (!(yield this.startMeeting())) {\n        this.meetingSession.configuration.urls.urlRewriter = this.originalURLRewriter;\n        return CheckNetworkTCPConnectivityFeedback_1.default.ConnectionFailed;\n      }\n\n      let candidatePairSucceed = false;\n      yield this.executeTimeoutTask(() => __awaiter(this, void 0, void 0, function* () {\n        const rawStats = yield audioVideo.getRTCPeerConnectionStats();\n\n        if (rawStats) {\n          rawStats.forEach(report => {\n            if (report.type === 'candidate-pair' && report.state === 'succeeded') {\n              candidatePairSucceed = true;\n            }\n          });\n        }\n\n        return candidatePairSucceed;\n      }));\n      this.meetingSession.configuration.urls.urlRewriter = this.originalURLRewriter;\n      yield this.stopMeeting();\n\n      if (!candidatePairSucceed) {\n        return CheckNetworkTCPConnectivityFeedback_1.default.ICENegotiationFailed;\n      }\n\n      return CheckNetworkTCPConnectivityFeedback_1.default.Succeeded;\n    });\n  }\n\n  startMeeting() {\n    return __awaiter(this, void 0, void 0, function* () {\n      let isStarted = false;\n      const observer = {\n        audioVideoDidStart: () => {\n          isStarted = true;\n        }\n      };\n      this.meetingSession.audioVideo.addObserver(observer);\n      this.meetingSession.audioVideo.start();\n      yield this.executeTimeoutTask(() => __awaiter(this, void 0, void 0, function* () {\n        return isStarted;\n      }));\n      this.meetingSession.audioVideo.removeObserver(observer);\n      return isStarted;\n    });\n  }\n\n  stopMeeting() {\n    return __awaiter(this, void 0, void 0, function* () {\n      let isStopped = false;\n      const observer = {\n        audioVideoDidStop: _sessionStatus => {\n          isStopped = true;\n        }\n      };\n      this.meetingSession.audioVideo.addObserver(observer);\n      this.meetingSession.audioVideo.stop();\n      yield this.executeTimeoutTask(() => __awaiter(this, void 0, void 0, function* () {\n        return isStopped;\n      }));\n      this.meetingSession.audioVideo.removeObserver(observer);\n      return isStopped;\n    });\n  }\n\n  executeTimeoutTask(conditionCheck) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let isSuccess = false;\n\n      class CheckForConditionTask extends BaseTask_1.default {\n        constructor(logger, waitDurationMs) {\n          super(logger);\n          this.waitDurationMs = waitDurationMs;\n          this.isCancelled = false;\n        }\n\n        cancel() {\n          this.isCancelled = true;\n        }\n\n        run() {\n          return __awaiter(this, void 0, void 0, function* () {\n            while (!this.isCancelled) {\n              if (yield conditionCheck()) {\n                isSuccess = true;\n                break;\n              }\n\n              yield DefaultMeetingReadinessChecker.delay(this.waitDurationMs);\n            }\n          });\n        }\n\n      }\n\n      const timeoutTask = new TimeoutTask_1.default(this.logger, new CheckForConditionTask(this.logger, this.configuration.waitDurationMs), this.configuration.timeoutMs);\n      yield timeoutTask.run();\n      return isSuccess;\n    });\n  }\n\n}\n\nexports.default = DefaultMeetingReadinessChecker;","map":{"version":3,"mappings":"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","names":["DefaultMeetingReadinessChecker","constructor","logger","meetingSession","configuration","MeetingReadinessCheckerConfiguration_1","DefaultBrowserBehavior_1","delay","timeoutMs","Promise","resolve","setTimeout","checkAudioInput","audioInputDevice","audioVideo","chooseAudioInputDevice","CheckAudioInputFeedback_1","Succeeded","error","PermissionDeniedError_1","PermissionDenied","Failed","checkAudioOutput","audioOutputDeviceInfo","audioOutputVerificationCallback","audioElement","audioOutputDeviceId","DefaultDeviceController_1","getIntrinsicDeviceId","playTone","userFeedback","CheckAudioOutputFeedback_1","stopTone","sinkId","frequency","rampSec","maxGainValue","oscillatorNode","audioContext","getAudioContext","gainNode","createGain","gain","value","createOscillator","connect","destinationStream","createMediaStreamDestination","currentTime","startTime","linearRampToValueAtTime","start","audioMixController","DefaultAudioMixController_1","browserBehavior","supportsSetSinkId","bindAudioDevice","deviceId","e","bindAudioElement","Audio","bindAudioStream","stream","durationSec","stop","disconnect","checkVideoInput","videoInputDevice","chooseVideoInputDevice","CheckVideoInputFeedback_1","checkCameraResolution","width","height","videoInputDeviceId","videoConstraint","video","calculateVideoConstraint","navigator","mediaDevices","getUserMedia","name","CheckCameraResolutionFeedback_1","ResolutionNotSupported","getTracks","forEach","track","dimension","requiresResolutionAlignment","trackConstraints","requiresNoExactMediaStreamConstraints","exact","checkContentShareConnectivity","sourceId","isContentShareStarted","isAudioVideoStarted","contentShareObserver","contentShareDidStart","observer","audioVideoDidStart","addObserver","addContentShareObserver","startContentShareFromScreenCapture","executeTimeoutTask","__awaiter","CheckContentShareConnectivityFeedback_1","ConnectionFailed","stopMeeting","TimedOut","removeObserver","stopContentShare","removeContentShareObserver","checkAudioConnectivity","audioPresence","attendeePresenceHandler","attendeeId","present","_externalUserId","_dropped","credentials","CheckAudioConnectivityFeedback_1","AudioInputPermissionDenied","AudioInputRequestFailed","realtimeSubscribeToAttendeeIdPresence","startMeeting","realtimeUnsubscribeToAttendeeIdPresence","AudioNotReceived","checkVideoConnectivity","CheckVideoConnectivityFeedback_1","VideoInputPermissionDenied","VideoInputRequestFailed","packetsSent","startLocalVideoTile","rawStats","getRTCPeerConnectionStats","report","type","mediaType","stopLocalVideoTile","VideoNotSent","checkNetworkUDPConnectivity","originalURLRewriter","urls","urlRewriter","CheckNetworkUDPConnectivityFeedback_1","MeetingSessionURLsNotInitialized","uri","transformedUri","includes","candidatePairSucceed","state","ICENegotiationFailed","checkNetworkTCPConnectivity","CheckNetworkTCPConnectivityFeedback_1","isStarted","isStopped","audioVideoDidStop","_sessionStatus","conditionCheck","isSuccess","CheckForConditionTask","BaseTask_1","waitDurationMs","cancel","isCancelled","run","timeoutTask","TimeoutTask_1","exports"],"sourceRoot":"","sources":["../../src/meetingreadinesschecker/DefaultMeetingReadinessChecker.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}