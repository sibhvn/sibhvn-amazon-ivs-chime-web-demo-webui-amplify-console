{"ast":null,"code":"/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\"); // Common aliases\n\n\nvar $Reader = $protobuf.Reader,\n    $Writer = $protobuf.Writer,\n    $util = $protobuf.util; // Exported root namespace\n\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.SdkSignalFrame = function () {\n  /**\n   * Properties of a SdkSignalFrame.\n   * @exports ISdkSignalFrame\n   * @interface ISdkSignalFrame\n   * @property {number|Long} timestampMs SdkSignalFrame timestampMs\n   * @property {SdkSignalFrame.Type} type SdkSignalFrame type\n   * @property {ISdkErrorFrame|null} [error] SdkSignalFrame error\n   * @property {ISdkJoinFrame|null} [join] SdkSignalFrame join\n   * @property {ISdkJoinAckFrame|null} [joinack] SdkSignalFrame joinack\n   * @property {ISdkSubscribeFrame|null} [sub] SdkSignalFrame sub\n   * @property {ISdkSubscribeAckFrame|null} [suback] SdkSignalFrame suback\n   * @property {ISdkIndexFrame|null} [index] SdkSignalFrame index\n   * @property {ISdkPauseResumeFrame|null} [pause] SdkSignalFrame pause\n   * @property {ISdkLeaveFrame|null} [leave] SdkSignalFrame leave\n   * @property {ISdkLeaveAckFrame|null} [leaveAck] SdkSignalFrame leaveAck\n   * @property {ISdkBitrateFrame|null} [bitrates] SdkSignalFrame bitrates\n   * @property {ISdkAudioControlFrame|null} [audioControl] SdkSignalFrame audioControl\n   * @property {ISdkAudioMetadataFrame|null} [audioMetadata] SdkSignalFrame audioMetadata\n   * @property {ISdkAudioStreamIdInfoFrame|null} [audioStreamIdInfo] SdkSignalFrame audioStreamIdInfo\n   * @property {ISdkPingPongFrame|null} [pingPong] SdkSignalFrame pingPong\n   * @property {ISdkAudioStatusFrame|null} [audioStatus] SdkSignalFrame audioStatus\n   * @property {ISdkClientMetricFrame|null} [clientMetric] SdkSignalFrame clientMetric\n   * @property {ISdkDataMessageFrame|null} [dataMessage] SdkSignalFrame dataMessage\n   * @property {ISdkRemoteVideoUpdateFrame|null} [remoteVideoUpdate] SdkSignalFrame remoteVideoUpdate\n   * @property {ISdkPrimaryMeetingJoinFrame|null} [primaryMeetingJoin] SdkSignalFrame primaryMeetingJoin\n   * @property {ISdkPrimaryMeetingJoinAckFrame|null} [primaryMeetingJoinAck] SdkSignalFrame primaryMeetingJoinAck\n   * @property {ISdkPrimaryMeetingLeaveFrame|null} [primaryMeetingLeave] SdkSignalFrame primaryMeetingLeave\n   */\n\n  /**\n   * Constructs a new SdkSignalFrame.\n   * @exports SdkSignalFrame\n   * @classdesc Represents a SdkSignalFrame.\n   * @implements ISdkSignalFrame\n   * @constructor\n   * @param {ISdkSignalFrame=} [properties] Properties to set\n   */\n  function SdkSignalFrame(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkSignalFrame timestampMs.\n   * @member {number|Long} timestampMs\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n\n  SdkSignalFrame.prototype.timestampMs = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  /**\n   * SdkSignalFrame type.\n   * @member {SdkSignalFrame.Type} type\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.type = 1;\n  /**\n   * SdkSignalFrame error.\n   * @member {ISdkErrorFrame|null|undefined} error\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.error = null;\n  /**\n   * SdkSignalFrame join.\n   * @member {ISdkJoinFrame|null|undefined} join\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.join = null;\n  /**\n   * SdkSignalFrame joinack.\n   * @member {ISdkJoinAckFrame|null|undefined} joinack\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.joinack = null;\n  /**\n   * SdkSignalFrame sub.\n   * @member {ISdkSubscribeFrame|null|undefined} sub\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.sub = null;\n  /**\n   * SdkSignalFrame suback.\n   * @member {ISdkSubscribeAckFrame|null|undefined} suback\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.suback = null;\n  /**\n   * SdkSignalFrame index.\n   * @member {ISdkIndexFrame|null|undefined} index\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.index = null;\n  /**\n   * SdkSignalFrame pause.\n   * @member {ISdkPauseResumeFrame|null|undefined} pause\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.pause = null;\n  /**\n   * SdkSignalFrame leave.\n   * @member {ISdkLeaveFrame|null|undefined} leave\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.leave = null;\n  /**\n   * SdkSignalFrame leaveAck.\n   * @member {ISdkLeaveAckFrame|null|undefined} leaveAck\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.leaveAck = null;\n  /**\n   * SdkSignalFrame bitrates.\n   * @member {ISdkBitrateFrame|null|undefined} bitrates\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.bitrates = null;\n  /**\n   * SdkSignalFrame audioControl.\n   * @member {ISdkAudioControlFrame|null|undefined} audioControl\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.audioControl = null;\n  /**\n   * SdkSignalFrame audioMetadata.\n   * @member {ISdkAudioMetadataFrame|null|undefined} audioMetadata\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.audioMetadata = null;\n  /**\n   * SdkSignalFrame audioStreamIdInfo.\n   * @member {ISdkAudioStreamIdInfoFrame|null|undefined} audioStreamIdInfo\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.audioStreamIdInfo = null;\n  /**\n   * SdkSignalFrame pingPong.\n   * @member {ISdkPingPongFrame|null|undefined} pingPong\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.pingPong = null;\n  /**\n   * SdkSignalFrame audioStatus.\n   * @member {ISdkAudioStatusFrame|null|undefined} audioStatus\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.audioStatus = null;\n  /**\n   * SdkSignalFrame clientMetric.\n   * @member {ISdkClientMetricFrame|null|undefined} clientMetric\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.clientMetric = null;\n  /**\n   * SdkSignalFrame dataMessage.\n   * @member {ISdkDataMessageFrame|null|undefined} dataMessage\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.dataMessage = null;\n  /**\n   * SdkSignalFrame remoteVideoUpdate.\n   * @member {ISdkRemoteVideoUpdateFrame|null|undefined} remoteVideoUpdate\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.remoteVideoUpdate = null;\n  /**\n   * SdkSignalFrame primaryMeetingJoin.\n   * @member {ISdkPrimaryMeetingJoinFrame|null|undefined} primaryMeetingJoin\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.primaryMeetingJoin = null;\n  /**\n   * SdkSignalFrame primaryMeetingJoinAck.\n   * @member {ISdkPrimaryMeetingJoinAckFrame|null|undefined} primaryMeetingJoinAck\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.primaryMeetingJoinAck = null;\n  /**\n   * SdkSignalFrame primaryMeetingLeave.\n   * @member {ISdkPrimaryMeetingLeaveFrame|null|undefined} primaryMeetingLeave\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.primaryMeetingLeave = null;\n  /**\n   * Creates a new SdkSignalFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkSignalFrame\n   * @static\n   * @param {ISdkSignalFrame=} [properties] Properties to set\n   * @returns {SdkSignalFrame} SdkSignalFrame instance\n   */\n\n  SdkSignalFrame.create = function create(properties) {\n    return new SdkSignalFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkSignalFrame message. Does not implicitly {@link SdkSignalFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkSignalFrame\n   * @static\n   * @param {ISdkSignalFrame} message SdkSignalFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkSignalFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).uint64(message.timestampMs);\n    writer.uint32(\n    /* id 2, wireType 0 =*/\n    16).int32(message.type);\n    if (message.error != null && message.hasOwnProperty(\"error\")) $root.SdkErrorFrame.encode(message.error, writer.uint32(\n    /* id 3, wireType 2 =*/\n    26).fork()).ldelim();\n    if (message.join != null && message.hasOwnProperty(\"join\")) $root.SdkJoinFrame.encode(message.join, writer.uint32(\n    /* id 4, wireType 2 =*/\n    34).fork()).ldelim();\n    if (message.joinack != null && message.hasOwnProperty(\"joinack\")) $root.SdkJoinAckFrame.encode(message.joinack, writer.uint32(\n    /* id 5, wireType 2 =*/\n    42).fork()).ldelim();\n    if (message.sub != null && message.hasOwnProperty(\"sub\")) $root.SdkSubscribeFrame.encode(message.sub, writer.uint32(\n    /* id 6, wireType 2 =*/\n    50).fork()).ldelim();\n    if (message.suback != null && message.hasOwnProperty(\"suback\")) $root.SdkSubscribeAckFrame.encode(message.suback, writer.uint32(\n    /* id 7, wireType 2 =*/\n    58).fork()).ldelim();\n    if (message.index != null && message.hasOwnProperty(\"index\")) $root.SdkIndexFrame.encode(message.index, writer.uint32(\n    /* id 8, wireType 2 =*/\n    66).fork()).ldelim();\n    if (message.pause != null && message.hasOwnProperty(\"pause\")) $root.SdkPauseResumeFrame.encode(message.pause, writer.uint32(\n    /* id 10, wireType 2 =*/\n    82).fork()).ldelim();\n    if (message.leave != null && message.hasOwnProperty(\"leave\")) $root.SdkLeaveFrame.encode(message.leave, writer.uint32(\n    /* id 11, wireType 2 =*/\n    90).fork()).ldelim();\n    if (message.leaveAck != null && message.hasOwnProperty(\"leaveAck\")) $root.SdkLeaveAckFrame.encode(message.leaveAck, writer.uint32(\n    /* id 12, wireType 2 =*/\n    98).fork()).ldelim();\n    if (message.bitrates != null && message.hasOwnProperty(\"bitrates\")) $root.SdkBitrateFrame.encode(message.bitrates, writer.uint32(\n    /* id 14, wireType 2 =*/\n    114).fork()).ldelim();\n    if (message.audioControl != null && message.hasOwnProperty(\"audioControl\")) $root.SdkAudioControlFrame.encode(message.audioControl, writer.uint32(\n    /* id 17, wireType 2 =*/\n    138).fork()).ldelim();\n    if (message.audioMetadata != null && message.hasOwnProperty(\"audioMetadata\")) $root.SdkAudioMetadataFrame.encode(message.audioMetadata, writer.uint32(\n    /* id 18, wireType 2 =*/\n    146).fork()).ldelim();\n    if (message.audioStreamIdInfo != null && message.hasOwnProperty(\"audioStreamIdInfo\")) $root.SdkAudioStreamIdInfoFrame.encode(message.audioStreamIdInfo, writer.uint32(\n    /* id 19, wireType 2 =*/\n    154).fork()).ldelim();\n    if (message.pingPong != null && message.hasOwnProperty(\"pingPong\")) $root.SdkPingPongFrame.encode(message.pingPong, writer.uint32(\n    /* id 20, wireType 2 =*/\n    162).fork()).ldelim();\n    if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\")) $root.SdkAudioStatusFrame.encode(message.audioStatus, writer.uint32(\n    /* id 21, wireType 2 =*/\n    170).fork()).ldelim();\n    if (message.clientMetric != null && message.hasOwnProperty(\"clientMetric\")) $root.SdkClientMetricFrame.encode(message.clientMetric, writer.uint32(\n    /* id 22, wireType 2 =*/\n    178).fork()).ldelim();\n    if (message.dataMessage != null && message.hasOwnProperty(\"dataMessage\")) $root.SdkDataMessageFrame.encode(message.dataMessage, writer.uint32(\n    /* id 23, wireType 2 =*/\n    186).fork()).ldelim();\n    if (message.remoteVideoUpdate != null && message.hasOwnProperty(\"remoteVideoUpdate\")) $root.SdkRemoteVideoUpdateFrame.encode(message.remoteVideoUpdate, writer.uint32(\n    /* id 25, wireType 2 =*/\n    202).fork()).ldelim();\n    if (message.primaryMeetingJoin != null && message.hasOwnProperty(\"primaryMeetingJoin\")) $root.SdkPrimaryMeetingJoinFrame.encode(message.primaryMeetingJoin, writer.uint32(\n    /* id 26, wireType 2 =*/\n    210).fork()).ldelim();\n    if (message.primaryMeetingJoinAck != null && message.hasOwnProperty(\"primaryMeetingJoinAck\")) $root.SdkPrimaryMeetingJoinAckFrame.encode(message.primaryMeetingJoinAck, writer.uint32(\n    /* id 27, wireType 2 =*/\n    218).fork()).ldelim();\n    if (message.primaryMeetingLeave != null && message.hasOwnProperty(\"primaryMeetingLeave\")) $root.SdkPrimaryMeetingLeaveFrame.encode(message.primaryMeetingLeave, writer.uint32(\n    /* id 28, wireType 2 =*/\n    226).fork()).ldelim();\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkSignalFrame message, length delimited. Does not implicitly {@link SdkSignalFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkSignalFrame\n   * @static\n   * @param {ISdkSignalFrame} message SdkSignalFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkSignalFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkSignalFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkSignalFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkSignalFrame} SdkSignalFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkSignalFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkSignalFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.timestampMs = reader.uint64();\n          break;\n\n        case 2:\n          message.type = reader.int32();\n          break;\n\n        case 3:\n          message.error = $root.SdkErrorFrame.decode(reader, reader.uint32());\n          break;\n\n        case 4:\n          message.join = $root.SdkJoinFrame.decode(reader, reader.uint32());\n          break;\n\n        case 5:\n          message.joinack = $root.SdkJoinAckFrame.decode(reader, reader.uint32());\n          break;\n\n        case 6:\n          message.sub = $root.SdkSubscribeFrame.decode(reader, reader.uint32());\n          break;\n\n        case 7:\n          message.suback = $root.SdkSubscribeAckFrame.decode(reader, reader.uint32());\n          break;\n\n        case 8:\n          message.index = $root.SdkIndexFrame.decode(reader, reader.uint32());\n          break;\n\n        case 10:\n          message.pause = $root.SdkPauseResumeFrame.decode(reader, reader.uint32());\n          break;\n\n        case 11:\n          message.leave = $root.SdkLeaveFrame.decode(reader, reader.uint32());\n          break;\n\n        case 12:\n          message.leaveAck = $root.SdkLeaveAckFrame.decode(reader, reader.uint32());\n          break;\n\n        case 14:\n          message.bitrates = $root.SdkBitrateFrame.decode(reader, reader.uint32());\n          break;\n\n        case 17:\n          message.audioControl = $root.SdkAudioControlFrame.decode(reader, reader.uint32());\n          break;\n\n        case 18:\n          message.audioMetadata = $root.SdkAudioMetadataFrame.decode(reader, reader.uint32());\n          break;\n\n        case 19:\n          message.audioStreamIdInfo = $root.SdkAudioStreamIdInfoFrame.decode(reader, reader.uint32());\n          break;\n\n        case 20:\n          message.pingPong = $root.SdkPingPongFrame.decode(reader, reader.uint32());\n          break;\n\n        case 21:\n          message.audioStatus = $root.SdkAudioStatusFrame.decode(reader, reader.uint32());\n          break;\n\n        case 22:\n          message.clientMetric = $root.SdkClientMetricFrame.decode(reader, reader.uint32());\n          break;\n\n        case 23:\n          message.dataMessage = $root.SdkDataMessageFrame.decode(reader, reader.uint32());\n          break;\n\n        case 25:\n          message.remoteVideoUpdate = $root.SdkRemoteVideoUpdateFrame.decode(reader, reader.uint32());\n          break;\n\n        case 26:\n          message.primaryMeetingJoin = $root.SdkPrimaryMeetingJoinFrame.decode(reader, reader.uint32());\n          break;\n\n        case 27:\n          message.primaryMeetingJoinAck = $root.SdkPrimaryMeetingJoinAckFrame.decode(reader, reader.uint32());\n          break;\n\n        case 28:\n          message.primaryMeetingLeave = $root.SdkPrimaryMeetingLeaveFrame.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    if (!message.hasOwnProperty(\"timestampMs\")) throw $util.ProtocolError(\"missing required 'timestampMs'\", {\n      instance: message\n    });\n    if (!message.hasOwnProperty(\"type\")) throw $util.ProtocolError(\"missing required 'type'\", {\n      instance: message\n    });\n    return message;\n  };\n  /**\n   * Decodes a SdkSignalFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkSignalFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkSignalFrame} SdkSignalFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkSignalFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkSignalFrame message.\n   * @function verify\n   * @memberof SdkSignalFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkSignalFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (!$util.isInteger(message.timestampMs) && !(message.timestampMs && $util.isInteger(message.timestampMs.low) && $util.isInteger(message.timestampMs.high))) return \"timestampMs: integer|Long expected\";\n\n    switch (message.type) {\n      default:\n        return \"type: enum value expected\";\n\n      case 1:\n      case 2:\n      case 3:\n      case 4:\n      case 5:\n      case 7:\n      case 8:\n      case 9:\n      case 10:\n      case 13:\n      case 16:\n      case 17:\n      case 18:\n      case 19:\n      case 20:\n      case 21:\n      case 22:\n      case 24:\n      case 25:\n      case 26:\n      case 27:\n        break;\n    }\n\n    if (message.error != null && message.hasOwnProperty(\"error\")) {\n      var error = $root.SdkErrorFrame.verify(message.error);\n      if (error) return \"error.\" + error;\n    }\n\n    if (message.join != null && message.hasOwnProperty(\"join\")) {\n      var error = $root.SdkJoinFrame.verify(message.join);\n      if (error) return \"join.\" + error;\n    }\n\n    if (message.joinack != null && message.hasOwnProperty(\"joinack\")) {\n      var error = $root.SdkJoinAckFrame.verify(message.joinack);\n      if (error) return \"joinack.\" + error;\n    }\n\n    if (message.sub != null && message.hasOwnProperty(\"sub\")) {\n      var error = $root.SdkSubscribeFrame.verify(message.sub);\n      if (error) return \"sub.\" + error;\n    }\n\n    if (message.suback != null && message.hasOwnProperty(\"suback\")) {\n      var error = $root.SdkSubscribeAckFrame.verify(message.suback);\n      if (error) return \"suback.\" + error;\n    }\n\n    if (message.index != null && message.hasOwnProperty(\"index\")) {\n      var error = $root.SdkIndexFrame.verify(message.index);\n      if (error) return \"index.\" + error;\n    }\n\n    if (message.pause != null && message.hasOwnProperty(\"pause\")) {\n      var error = $root.SdkPauseResumeFrame.verify(message.pause);\n      if (error) return \"pause.\" + error;\n    }\n\n    if (message.leave != null && message.hasOwnProperty(\"leave\")) {\n      var error = $root.SdkLeaveFrame.verify(message.leave);\n      if (error) return \"leave.\" + error;\n    }\n\n    if (message.leaveAck != null && message.hasOwnProperty(\"leaveAck\")) {\n      var error = $root.SdkLeaveAckFrame.verify(message.leaveAck);\n      if (error) return \"leaveAck.\" + error;\n    }\n\n    if (message.bitrates != null && message.hasOwnProperty(\"bitrates\")) {\n      var error = $root.SdkBitrateFrame.verify(message.bitrates);\n      if (error) return \"bitrates.\" + error;\n    }\n\n    if (message.audioControl != null && message.hasOwnProperty(\"audioControl\")) {\n      var error = $root.SdkAudioControlFrame.verify(message.audioControl);\n      if (error) return \"audioControl.\" + error;\n    }\n\n    if (message.audioMetadata != null && message.hasOwnProperty(\"audioMetadata\")) {\n      var error = $root.SdkAudioMetadataFrame.verify(message.audioMetadata);\n      if (error) return \"audioMetadata.\" + error;\n    }\n\n    if (message.audioStreamIdInfo != null && message.hasOwnProperty(\"audioStreamIdInfo\")) {\n      var error = $root.SdkAudioStreamIdInfoFrame.verify(message.audioStreamIdInfo);\n      if (error) return \"audioStreamIdInfo.\" + error;\n    }\n\n    if (message.pingPong != null && message.hasOwnProperty(\"pingPong\")) {\n      var error = $root.SdkPingPongFrame.verify(message.pingPong);\n      if (error) return \"pingPong.\" + error;\n    }\n\n    if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\")) {\n      var error = $root.SdkAudioStatusFrame.verify(message.audioStatus);\n      if (error) return \"audioStatus.\" + error;\n    }\n\n    if (message.clientMetric != null && message.hasOwnProperty(\"clientMetric\")) {\n      var error = $root.SdkClientMetricFrame.verify(message.clientMetric);\n      if (error) return \"clientMetric.\" + error;\n    }\n\n    if (message.dataMessage != null && message.hasOwnProperty(\"dataMessage\")) {\n      var error = $root.SdkDataMessageFrame.verify(message.dataMessage);\n      if (error) return \"dataMessage.\" + error;\n    }\n\n    if (message.remoteVideoUpdate != null && message.hasOwnProperty(\"remoteVideoUpdate\")) {\n      var error = $root.SdkRemoteVideoUpdateFrame.verify(message.remoteVideoUpdate);\n      if (error) return \"remoteVideoUpdate.\" + error;\n    }\n\n    if (message.primaryMeetingJoin != null && message.hasOwnProperty(\"primaryMeetingJoin\")) {\n      var error = $root.SdkPrimaryMeetingJoinFrame.verify(message.primaryMeetingJoin);\n      if (error) return \"primaryMeetingJoin.\" + error;\n    }\n\n    if (message.primaryMeetingJoinAck != null && message.hasOwnProperty(\"primaryMeetingJoinAck\")) {\n      var error = $root.SdkPrimaryMeetingJoinAckFrame.verify(message.primaryMeetingJoinAck);\n      if (error) return \"primaryMeetingJoinAck.\" + error;\n    }\n\n    if (message.primaryMeetingLeave != null && message.hasOwnProperty(\"primaryMeetingLeave\")) {\n      var error = $root.SdkPrimaryMeetingLeaveFrame.verify(message.primaryMeetingLeave);\n      if (error) return \"primaryMeetingLeave.\" + error;\n    }\n\n    return null;\n  };\n  /**\n   * Creates a SdkSignalFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkSignalFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkSignalFrame} SdkSignalFrame\n   */\n\n\n  SdkSignalFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkSignalFrame) return object;\n    var message = new $root.SdkSignalFrame();\n    if (object.timestampMs != null) if ($util.Long) (message.timestampMs = $util.Long.fromValue(object.timestampMs)).unsigned = true;else if (typeof object.timestampMs === \"string\") message.timestampMs = parseInt(object.timestampMs, 10);else if (typeof object.timestampMs === \"number\") message.timestampMs = object.timestampMs;else if (typeof object.timestampMs === \"object\") message.timestampMs = new $util.LongBits(object.timestampMs.low >>> 0, object.timestampMs.high >>> 0).toNumber(true);\n\n    switch (object.type) {\n      case \"JOIN\":\n      case 1:\n        message.type = 1;\n        break;\n\n      case \"JOIN_ACK\":\n      case 2:\n        message.type = 2;\n        break;\n\n      case \"SUBSCRIBE\":\n      case 3:\n        message.type = 3;\n        break;\n\n      case \"SUBSCRIBE_ACK\":\n      case 4:\n        message.type = 4;\n        break;\n\n      case \"INDEX\":\n      case 5:\n        message.type = 5;\n        break;\n\n      case \"PAUSE\":\n      case 7:\n        message.type = 7;\n        break;\n\n      case \"RESUME\":\n      case 8:\n        message.type = 8;\n        break;\n\n      case \"LEAVE\":\n      case 9:\n        message.type = 9;\n        break;\n\n      case \"LEAVE_ACK\":\n      case 10:\n        message.type = 10;\n        break;\n\n      case \"BITRATES\":\n      case 13:\n        message.type = 13;\n        break;\n\n      case \"AUDIO_CONTROL\":\n      case 16:\n        message.type = 16;\n        break;\n\n      case \"AUDIO_METADATA\":\n      case 17:\n        message.type = 17;\n        break;\n\n      case \"AUDIO_STREAM_ID_INFO\":\n      case 18:\n        message.type = 18;\n        break;\n\n      case \"PING_PONG\":\n      case 19:\n        message.type = 19;\n        break;\n\n      case \"AUDIO_STATUS\":\n      case 20:\n        message.type = 20;\n        break;\n\n      case \"CLIENT_METRIC\":\n      case 21:\n        message.type = 21;\n        break;\n\n      case \"DATA_MESSAGE\":\n      case 22:\n        message.type = 22;\n        break;\n\n      case \"REMOTE_VIDEO_UPDATE\":\n      case 24:\n        message.type = 24;\n        break;\n\n      case \"PRIMARY_MEETING_JOIN\":\n      case 25:\n        message.type = 25;\n        break;\n\n      case \"PRIMARY_MEETING_JOIN_ACK\":\n      case 26:\n        message.type = 26;\n        break;\n\n      case \"PRIMARY_MEETING_LEAVE\":\n      case 27:\n        message.type = 27;\n        break;\n    }\n\n    if (object.error != null) {\n      if (typeof object.error !== \"object\") throw TypeError(\".SdkSignalFrame.error: object expected\");\n      message.error = $root.SdkErrorFrame.fromObject(object.error);\n    }\n\n    if (object.join != null) {\n      if (typeof object.join !== \"object\") throw TypeError(\".SdkSignalFrame.join: object expected\");\n      message.join = $root.SdkJoinFrame.fromObject(object.join);\n    }\n\n    if (object.joinack != null) {\n      if (typeof object.joinack !== \"object\") throw TypeError(\".SdkSignalFrame.joinack: object expected\");\n      message.joinack = $root.SdkJoinAckFrame.fromObject(object.joinack);\n    }\n\n    if (object.sub != null) {\n      if (typeof object.sub !== \"object\") throw TypeError(\".SdkSignalFrame.sub: object expected\");\n      message.sub = $root.SdkSubscribeFrame.fromObject(object.sub);\n    }\n\n    if (object.suback != null) {\n      if (typeof object.suback !== \"object\") throw TypeError(\".SdkSignalFrame.suback: object expected\");\n      message.suback = $root.SdkSubscribeAckFrame.fromObject(object.suback);\n    }\n\n    if (object.index != null) {\n      if (typeof object.index !== \"object\") throw TypeError(\".SdkSignalFrame.index: object expected\");\n      message.index = $root.SdkIndexFrame.fromObject(object.index);\n    }\n\n    if (object.pause != null) {\n      if (typeof object.pause !== \"object\") throw TypeError(\".SdkSignalFrame.pause: object expected\");\n      message.pause = $root.SdkPauseResumeFrame.fromObject(object.pause);\n    }\n\n    if (object.leave != null) {\n      if (typeof object.leave !== \"object\") throw TypeError(\".SdkSignalFrame.leave: object expected\");\n      message.leave = $root.SdkLeaveFrame.fromObject(object.leave);\n    }\n\n    if (object.leaveAck != null) {\n      if (typeof object.leaveAck !== \"object\") throw TypeError(\".SdkSignalFrame.leaveAck: object expected\");\n      message.leaveAck = $root.SdkLeaveAckFrame.fromObject(object.leaveAck);\n    }\n\n    if (object.bitrates != null) {\n      if (typeof object.bitrates !== \"object\") throw TypeError(\".SdkSignalFrame.bitrates: object expected\");\n      message.bitrates = $root.SdkBitrateFrame.fromObject(object.bitrates);\n    }\n\n    if (object.audioControl != null) {\n      if (typeof object.audioControl !== \"object\") throw TypeError(\".SdkSignalFrame.audioControl: object expected\");\n      message.audioControl = $root.SdkAudioControlFrame.fromObject(object.audioControl);\n    }\n\n    if (object.audioMetadata != null) {\n      if (typeof object.audioMetadata !== \"object\") throw TypeError(\".SdkSignalFrame.audioMetadata: object expected\");\n      message.audioMetadata = $root.SdkAudioMetadataFrame.fromObject(object.audioMetadata);\n    }\n\n    if (object.audioStreamIdInfo != null) {\n      if (typeof object.audioStreamIdInfo !== \"object\") throw TypeError(\".SdkSignalFrame.audioStreamIdInfo: object expected\");\n      message.audioStreamIdInfo = $root.SdkAudioStreamIdInfoFrame.fromObject(object.audioStreamIdInfo);\n    }\n\n    if (object.pingPong != null) {\n      if (typeof object.pingPong !== \"object\") throw TypeError(\".SdkSignalFrame.pingPong: object expected\");\n      message.pingPong = $root.SdkPingPongFrame.fromObject(object.pingPong);\n    }\n\n    if (object.audioStatus != null) {\n      if (typeof object.audioStatus !== \"object\") throw TypeError(\".SdkSignalFrame.audioStatus: object expected\");\n      message.audioStatus = $root.SdkAudioStatusFrame.fromObject(object.audioStatus);\n    }\n\n    if (object.clientMetric != null) {\n      if (typeof object.clientMetric !== \"object\") throw TypeError(\".SdkSignalFrame.clientMetric: object expected\");\n      message.clientMetric = $root.SdkClientMetricFrame.fromObject(object.clientMetric);\n    }\n\n    if (object.dataMessage != null) {\n      if (typeof object.dataMessage !== \"object\") throw TypeError(\".SdkSignalFrame.dataMessage: object expected\");\n      message.dataMessage = $root.SdkDataMessageFrame.fromObject(object.dataMessage);\n    }\n\n    if (object.remoteVideoUpdate != null) {\n      if (typeof object.remoteVideoUpdate !== \"object\") throw TypeError(\".SdkSignalFrame.remoteVideoUpdate: object expected\");\n      message.remoteVideoUpdate = $root.SdkRemoteVideoUpdateFrame.fromObject(object.remoteVideoUpdate);\n    }\n\n    if (object.primaryMeetingJoin != null) {\n      if (typeof object.primaryMeetingJoin !== \"object\") throw TypeError(\".SdkSignalFrame.primaryMeetingJoin: object expected\");\n      message.primaryMeetingJoin = $root.SdkPrimaryMeetingJoinFrame.fromObject(object.primaryMeetingJoin);\n    }\n\n    if (object.primaryMeetingJoinAck != null) {\n      if (typeof object.primaryMeetingJoinAck !== \"object\") throw TypeError(\".SdkSignalFrame.primaryMeetingJoinAck: object expected\");\n      message.primaryMeetingJoinAck = $root.SdkPrimaryMeetingJoinAckFrame.fromObject(object.primaryMeetingJoinAck);\n    }\n\n    if (object.primaryMeetingLeave != null) {\n      if (typeof object.primaryMeetingLeave !== \"object\") throw TypeError(\".SdkSignalFrame.primaryMeetingLeave: object expected\");\n      message.primaryMeetingLeave = $root.SdkPrimaryMeetingLeaveFrame.fromObject(object.primaryMeetingLeave);\n    }\n\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkSignalFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkSignalFrame\n   * @static\n   * @param {SdkSignalFrame} message SdkSignalFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkSignalFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      if ($util.Long) {\n        var long = new $util.Long(0, 0, true);\n        object.timestampMs = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n      } else object.timestampMs = options.longs === String ? \"0\" : 0;\n\n      object.type = options.enums === String ? \"JOIN\" : 1;\n      object.error = null;\n      object.join = null;\n      object.joinack = null;\n      object.sub = null;\n      object.suback = null;\n      object.index = null;\n      object.pause = null;\n      object.leave = null;\n      object.leaveAck = null;\n      object.bitrates = null;\n      object.audioControl = null;\n      object.audioMetadata = null;\n      object.audioStreamIdInfo = null;\n      object.pingPong = null;\n      object.audioStatus = null;\n      object.clientMetric = null;\n      object.dataMessage = null;\n      object.remoteVideoUpdate = null;\n      object.primaryMeetingJoin = null;\n      object.primaryMeetingJoinAck = null;\n      object.primaryMeetingLeave = null;\n    }\n\n    if (message.timestampMs != null && message.hasOwnProperty(\"timestampMs\")) if (typeof message.timestampMs === \"number\") object.timestampMs = options.longs === String ? String(message.timestampMs) : message.timestampMs;else object.timestampMs = options.longs === String ? $util.Long.prototype.toString.call(message.timestampMs) : options.longs === Number ? new $util.LongBits(message.timestampMs.low >>> 0, message.timestampMs.high >>> 0).toNumber(true) : message.timestampMs;\n    if (message.type != null && message.hasOwnProperty(\"type\")) object.type = options.enums === String ? $root.SdkSignalFrame.Type[message.type] : message.type;\n    if (message.error != null && message.hasOwnProperty(\"error\")) object.error = $root.SdkErrorFrame.toObject(message.error, options);\n    if (message.join != null && message.hasOwnProperty(\"join\")) object.join = $root.SdkJoinFrame.toObject(message.join, options);\n    if (message.joinack != null && message.hasOwnProperty(\"joinack\")) object.joinack = $root.SdkJoinAckFrame.toObject(message.joinack, options);\n    if (message.sub != null && message.hasOwnProperty(\"sub\")) object.sub = $root.SdkSubscribeFrame.toObject(message.sub, options);\n    if (message.suback != null && message.hasOwnProperty(\"suback\")) object.suback = $root.SdkSubscribeAckFrame.toObject(message.suback, options);\n    if (message.index != null && message.hasOwnProperty(\"index\")) object.index = $root.SdkIndexFrame.toObject(message.index, options);\n    if (message.pause != null && message.hasOwnProperty(\"pause\")) object.pause = $root.SdkPauseResumeFrame.toObject(message.pause, options);\n    if (message.leave != null && message.hasOwnProperty(\"leave\")) object.leave = $root.SdkLeaveFrame.toObject(message.leave, options);\n    if (message.leaveAck != null && message.hasOwnProperty(\"leaveAck\")) object.leaveAck = $root.SdkLeaveAckFrame.toObject(message.leaveAck, options);\n    if (message.bitrates != null && message.hasOwnProperty(\"bitrates\")) object.bitrates = $root.SdkBitrateFrame.toObject(message.bitrates, options);\n    if (message.audioControl != null && message.hasOwnProperty(\"audioControl\")) object.audioControl = $root.SdkAudioControlFrame.toObject(message.audioControl, options);\n    if (message.audioMetadata != null && message.hasOwnProperty(\"audioMetadata\")) object.audioMetadata = $root.SdkAudioMetadataFrame.toObject(message.audioMetadata, options);\n    if (message.audioStreamIdInfo != null && message.hasOwnProperty(\"audioStreamIdInfo\")) object.audioStreamIdInfo = $root.SdkAudioStreamIdInfoFrame.toObject(message.audioStreamIdInfo, options);\n    if (message.pingPong != null && message.hasOwnProperty(\"pingPong\")) object.pingPong = $root.SdkPingPongFrame.toObject(message.pingPong, options);\n    if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\")) object.audioStatus = $root.SdkAudioStatusFrame.toObject(message.audioStatus, options);\n    if (message.clientMetric != null && message.hasOwnProperty(\"clientMetric\")) object.clientMetric = $root.SdkClientMetricFrame.toObject(message.clientMetric, options);\n    if (message.dataMessage != null && message.hasOwnProperty(\"dataMessage\")) object.dataMessage = $root.SdkDataMessageFrame.toObject(message.dataMessage, options);\n    if (message.remoteVideoUpdate != null && message.hasOwnProperty(\"remoteVideoUpdate\")) object.remoteVideoUpdate = $root.SdkRemoteVideoUpdateFrame.toObject(message.remoteVideoUpdate, options);\n    if (message.primaryMeetingJoin != null && message.hasOwnProperty(\"primaryMeetingJoin\")) object.primaryMeetingJoin = $root.SdkPrimaryMeetingJoinFrame.toObject(message.primaryMeetingJoin, options);\n    if (message.primaryMeetingJoinAck != null && message.hasOwnProperty(\"primaryMeetingJoinAck\")) object.primaryMeetingJoinAck = $root.SdkPrimaryMeetingJoinAckFrame.toObject(message.primaryMeetingJoinAck, options);\n    if (message.primaryMeetingLeave != null && message.hasOwnProperty(\"primaryMeetingLeave\")) object.primaryMeetingLeave = $root.SdkPrimaryMeetingLeaveFrame.toObject(message.primaryMeetingLeave, options);\n    return object;\n  };\n  /**\n   * Converts this SdkSignalFrame to JSON.\n   * @function toJSON\n   * @memberof SdkSignalFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkSignalFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n  /**\n   * Type enum.\n   * @name SdkSignalFrame.Type\n   * @enum {string}\n   * @property {number} JOIN=1 JOIN value\n   * @property {number} JOIN_ACK=2 JOIN_ACK value\n   * @property {number} SUBSCRIBE=3 SUBSCRIBE value\n   * @property {number} SUBSCRIBE_ACK=4 SUBSCRIBE_ACK value\n   * @property {number} INDEX=5 INDEX value\n   * @property {number} PAUSE=7 PAUSE value\n   * @property {number} RESUME=8 RESUME value\n   * @property {number} LEAVE=9 LEAVE value\n   * @property {number} LEAVE_ACK=10 LEAVE_ACK value\n   * @property {number} BITRATES=13 BITRATES value\n   * @property {number} AUDIO_CONTROL=16 AUDIO_CONTROL value\n   * @property {number} AUDIO_METADATA=17 AUDIO_METADATA value\n   * @property {number} AUDIO_STREAM_ID_INFO=18 AUDIO_STREAM_ID_INFO value\n   * @property {number} PING_PONG=19 PING_PONG value\n   * @property {number} AUDIO_STATUS=20 AUDIO_STATUS value\n   * @property {number} CLIENT_METRIC=21 CLIENT_METRIC value\n   * @property {number} DATA_MESSAGE=22 DATA_MESSAGE value\n   * @property {number} REMOTE_VIDEO_UPDATE=24 REMOTE_VIDEO_UPDATE value\n   * @property {number} PRIMARY_MEETING_JOIN=25 PRIMARY_MEETING_JOIN value\n   * @property {number} PRIMARY_MEETING_JOIN_ACK=26 PRIMARY_MEETING_JOIN_ACK value\n   * @property {number} PRIMARY_MEETING_LEAVE=27 PRIMARY_MEETING_LEAVE value\n   */\n\n\n  SdkSignalFrame.Type = function () {\n    var valuesById = {},\n        values = Object.create(valuesById);\n    values[valuesById[1] = \"JOIN\"] = 1;\n    values[valuesById[2] = \"JOIN_ACK\"] = 2;\n    values[valuesById[3] = \"SUBSCRIBE\"] = 3;\n    values[valuesById[4] = \"SUBSCRIBE_ACK\"] = 4;\n    values[valuesById[5] = \"INDEX\"] = 5;\n    values[valuesById[7] = \"PAUSE\"] = 7;\n    values[valuesById[8] = \"RESUME\"] = 8;\n    values[valuesById[9] = \"LEAVE\"] = 9;\n    values[valuesById[10] = \"LEAVE_ACK\"] = 10;\n    values[valuesById[13] = \"BITRATES\"] = 13;\n    values[valuesById[16] = \"AUDIO_CONTROL\"] = 16;\n    values[valuesById[17] = \"AUDIO_METADATA\"] = 17;\n    values[valuesById[18] = \"AUDIO_STREAM_ID_INFO\"] = 18;\n    values[valuesById[19] = \"PING_PONG\"] = 19;\n    values[valuesById[20] = \"AUDIO_STATUS\"] = 20;\n    values[valuesById[21] = \"CLIENT_METRIC\"] = 21;\n    values[valuesById[22] = \"DATA_MESSAGE\"] = 22;\n    values[valuesById[24] = \"REMOTE_VIDEO_UPDATE\"] = 24;\n    values[valuesById[25] = \"PRIMARY_MEETING_JOIN\"] = 25;\n    values[valuesById[26] = \"PRIMARY_MEETING_JOIN_ACK\"] = 26;\n    values[valuesById[27] = \"PRIMARY_MEETING_LEAVE\"] = 27;\n    return values;\n  }();\n\n  return SdkSignalFrame;\n}();\n\n$root.SdkErrorFrame = function () {\n  /**\n   * Properties of a SdkErrorFrame.\n   * @exports ISdkErrorFrame\n   * @interface ISdkErrorFrame\n   * @property {number|null} [status] SdkErrorFrame status\n   * @property {string|null} [description] SdkErrorFrame description\n   */\n\n  /**\n   * Constructs a new SdkErrorFrame.\n   * @exports SdkErrorFrame\n   * @classdesc Represents a SdkErrorFrame.\n   * @implements ISdkErrorFrame\n   * @constructor\n   * @param {ISdkErrorFrame=} [properties] Properties to set\n   */\n  function SdkErrorFrame(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkErrorFrame status.\n   * @member {number} status\n   * @memberof SdkErrorFrame\n   * @instance\n   */\n\n\n  SdkErrorFrame.prototype.status = 0;\n  /**\n   * SdkErrorFrame description.\n   * @member {string} description\n   * @memberof SdkErrorFrame\n   * @instance\n   */\n\n  SdkErrorFrame.prototype.description = \"\";\n  /**\n   * Creates a new SdkErrorFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkErrorFrame\n   * @static\n   * @param {ISdkErrorFrame=} [properties] Properties to set\n   * @returns {SdkErrorFrame} SdkErrorFrame instance\n   */\n\n  SdkErrorFrame.create = function create(properties) {\n    return new SdkErrorFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkErrorFrame message. Does not implicitly {@link SdkErrorFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkErrorFrame\n   * @static\n   * @param {ISdkErrorFrame} message SdkErrorFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkErrorFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.status != null && message.hasOwnProperty(\"status\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).uint32(message.status);\n    if (message.description != null && message.hasOwnProperty(\"description\")) writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).string(message.description);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkErrorFrame message, length delimited. Does not implicitly {@link SdkErrorFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkErrorFrame\n   * @static\n   * @param {ISdkErrorFrame} message SdkErrorFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkErrorFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkErrorFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkErrorFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkErrorFrame} SdkErrorFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkErrorFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkErrorFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.status = reader.uint32();\n          break;\n\n        case 2:\n          message.description = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkErrorFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkErrorFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkErrorFrame} SdkErrorFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkErrorFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkErrorFrame message.\n   * @function verify\n   * @memberof SdkErrorFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkErrorFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.status != null && message.hasOwnProperty(\"status\")) if (!$util.isInteger(message.status)) return \"status: integer expected\";\n    if (message.description != null && message.hasOwnProperty(\"description\")) if (!$util.isString(message.description)) return \"description: string expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkErrorFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkErrorFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkErrorFrame} SdkErrorFrame\n   */\n\n\n  SdkErrorFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkErrorFrame) return object;\n    var message = new $root.SdkErrorFrame();\n    if (object.status != null) message.status = object.status >>> 0;\n    if (object.description != null) message.description = String(object.description);\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkErrorFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkErrorFrame\n   * @static\n   * @param {SdkErrorFrame} message SdkErrorFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkErrorFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.status = 0;\n      object.description = \"\";\n    }\n\n    if (message.status != null && message.hasOwnProperty(\"status\")) object.status = message.status;\n    if (message.description != null && message.hasOwnProperty(\"description\")) object.description = message.description;\n    return object;\n  };\n  /**\n   * Converts this SdkErrorFrame to JSON.\n   * @function toJSON\n   * @memberof SdkErrorFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkErrorFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkErrorFrame;\n}();\n/**\n * SdkJoinFlags enum.\n * @exports SdkJoinFlags\n * @enum {string}\n * @property {number} SEND_BITRATES=1 SEND_BITRATES value\n * @property {number} HAS_STREAM_UPDATE=2 HAS_STREAM_UPDATE value\n * @property {number} USE_SEND_SIDE_BWE=8 USE_SEND_SIDE_BWE value\n * @property {number} COMPLETE_VIDEO_SOURCES_LIST=16 COMPLETE_VIDEO_SOURCES_LIST value\n * @property {number} EXCLUDE_SELF_CONTENT_IN_INDEX=32 EXCLUDE_SELF_CONTENT_IN_INDEX value\n */\n\n\n$root.SdkJoinFlags = function () {\n  var valuesById = {},\n      values = Object.create(valuesById);\n  values[valuesById[1] = \"SEND_BITRATES\"] = 1;\n  values[valuesById[2] = \"HAS_STREAM_UPDATE\"] = 2;\n  values[valuesById[8] = \"USE_SEND_SIDE_BWE\"] = 8;\n  values[valuesById[16] = \"COMPLETE_VIDEO_SOURCES_LIST\"] = 16;\n  values[valuesById[32] = \"EXCLUDE_SELF_CONTENT_IN_INDEX\"] = 32;\n  return values;\n}();\n\n$root.SdkClientDetails = function () {\n  /**\n   * Properties of a SdkClientDetails.\n   * @exports ISdkClientDetails\n   * @interface ISdkClientDetails\n   * @property {string|null} [appName] SdkClientDetails appName\n   * @property {string|null} [appVersion] SdkClientDetails appVersion\n   * @property {string|null} [deviceModel] SdkClientDetails deviceModel\n   * @property {string|null} [deviceMake] SdkClientDetails deviceMake\n   * @property {string|null} [platformName] SdkClientDetails platformName\n   * @property {string|null} [platformVersion] SdkClientDetails platformVersion\n   * @property {string|null} [clientSource] SdkClientDetails clientSource\n   * @property {string|null} [chimeSdkVersion] SdkClientDetails chimeSdkVersion\n   */\n\n  /**\n   * Constructs a new SdkClientDetails.\n   * @exports SdkClientDetails\n   * @classdesc Represents a SdkClientDetails.\n   * @implements ISdkClientDetails\n   * @constructor\n   * @param {ISdkClientDetails=} [properties] Properties to set\n   */\n  function SdkClientDetails(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkClientDetails appName.\n   * @member {string} appName\n   * @memberof SdkClientDetails\n   * @instance\n   */\n\n\n  SdkClientDetails.prototype.appName = \"\";\n  /**\n   * SdkClientDetails appVersion.\n   * @member {string} appVersion\n   * @memberof SdkClientDetails\n   * @instance\n   */\n\n  SdkClientDetails.prototype.appVersion = \"\";\n  /**\n   * SdkClientDetails deviceModel.\n   * @member {string} deviceModel\n   * @memberof SdkClientDetails\n   * @instance\n   */\n\n  SdkClientDetails.prototype.deviceModel = \"\";\n  /**\n   * SdkClientDetails deviceMake.\n   * @member {string} deviceMake\n   * @memberof SdkClientDetails\n   * @instance\n   */\n\n  SdkClientDetails.prototype.deviceMake = \"\";\n  /**\n   * SdkClientDetails platformName.\n   * @member {string} platformName\n   * @memberof SdkClientDetails\n   * @instance\n   */\n\n  SdkClientDetails.prototype.platformName = \"\";\n  /**\n   * SdkClientDetails platformVersion.\n   * @member {string} platformVersion\n   * @memberof SdkClientDetails\n   * @instance\n   */\n\n  SdkClientDetails.prototype.platformVersion = \"\";\n  /**\n   * SdkClientDetails clientSource.\n   * @member {string} clientSource\n   * @memberof SdkClientDetails\n   * @instance\n   */\n\n  SdkClientDetails.prototype.clientSource = \"\";\n  /**\n   * SdkClientDetails chimeSdkVersion.\n   * @member {string} chimeSdkVersion\n   * @memberof SdkClientDetails\n   * @instance\n   */\n\n  SdkClientDetails.prototype.chimeSdkVersion = \"\";\n  /**\n   * Creates a new SdkClientDetails instance using the specified properties.\n   * @function create\n   * @memberof SdkClientDetails\n   * @static\n   * @param {ISdkClientDetails=} [properties] Properties to set\n   * @returns {SdkClientDetails} SdkClientDetails instance\n   */\n\n  SdkClientDetails.create = function create(properties) {\n    return new SdkClientDetails(properties);\n  };\n  /**\n   * Encodes the specified SdkClientDetails message. Does not implicitly {@link SdkClientDetails.verify|verify} messages.\n   * @function encode\n   * @memberof SdkClientDetails\n   * @static\n   * @param {ISdkClientDetails} message SdkClientDetails message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkClientDetails.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.appName != null && message.hasOwnProperty(\"appName\")) writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).string(message.appName);\n    if (message.appVersion != null && message.hasOwnProperty(\"appVersion\")) writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).string(message.appVersion);\n    if (message.deviceModel != null && message.hasOwnProperty(\"deviceModel\")) writer.uint32(\n    /* id 3, wireType 2 =*/\n    26).string(message.deviceModel);\n    if (message.deviceMake != null && message.hasOwnProperty(\"deviceMake\")) writer.uint32(\n    /* id 4, wireType 2 =*/\n    34).string(message.deviceMake);\n    if (message.platformName != null && message.hasOwnProperty(\"platformName\")) writer.uint32(\n    /* id 5, wireType 2 =*/\n    42).string(message.platformName);\n    if (message.platformVersion != null && message.hasOwnProperty(\"platformVersion\")) writer.uint32(\n    /* id 6, wireType 2 =*/\n    50).string(message.platformVersion);\n    if (message.clientSource != null && message.hasOwnProperty(\"clientSource\")) writer.uint32(\n    /* id 7, wireType 2 =*/\n    58).string(message.clientSource);\n    if (message.chimeSdkVersion != null && message.hasOwnProperty(\"chimeSdkVersion\")) writer.uint32(\n    /* id 8, wireType 2 =*/\n    66).string(message.chimeSdkVersion);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkClientDetails message, length delimited. Does not implicitly {@link SdkClientDetails.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkClientDetails\n   * @static\n   * @param {ISdkClientDetails} message SdkClientDetails message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkClientDetails.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkClientDetails message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkClientDetails\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkClientDetails} SdkClientDetails\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkClientDetails.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkClientDetails();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.appName = reader.string();\n          break;\n\n        case 2:\n          message.appVersion = reader.string();\n          break;\n\n        case 3:\n          message.deviceModel = reader.string();\n          break;\n\n        case 4:\n          message.deviceMake = reader.string();\n          break;\n\n        case 5:\n          message.platformName = reader.string();\n          break;\n\n        case 6:\n          message.platformVersion = reader.string();\n          break;\n\n        case 7:\n          message.clientSource = reader.string();\n          break;\n\n        case 8:\n          message.chimeSdkVersion = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkClientDetails message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkClientDetails\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkClientDetails} SdkClientDetails\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkClientDetails.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkClientDetails message.\n   * @function verify\n   * @memberof SdkClientDetails\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkClientDetails.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.appName != null && message.hasOwnProperty(\"appName\")) if (!$util.isString(message.appName)) return \"appName: string expected\";\n    if (message.appVersion != null && message.hasOwnProperty(\"appVersion\")) if (!$util.isString(message.appVersion)) return \"appVersion: string expected\";\n    if (message.deviceModel != null && message.hasOwnProperty(\"deviceModel\")) if (!$util.isString(message.deviceModel)) return \"deviceModel: string expected\";\n    if (message.deviceMake != null && message.hasOwnProperty(\"deviceMake\")) if (!$util.isString(message.deviceMake)) return \"deviceMake: string expected\";\n    if (message.platformName != null && message.hasOwnProperty(\"platformName\")) if (!$util.isString(message.platformName)) return \"platformName: string expected\";\n    if (message.platformVersion != null && message.hasOwnProperty(\"platformVersion\")) if (!$util.isString(message.platformVersion)) return \"platformVersion: string expected\";\n    if (message.clientSource != null && message.hasOwnProperty(\"clientSource\")) if (!$util.isString(message.clientSource)) return \"clientSource: string expected\";\n    if (message.chimeSdkVersion != null && message.hasOwnProperty(\"chimeSdkVersion\")) if (!$util.isString(message.chimeSdkVersion)) return \"chimeSdkVersion: string expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkClientDetails message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkClientDetails\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkClientDetails} SdkClientDetails\n   */\n\n\n  SdkClientDetails.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkClientDetails) return object;\n    var message = new $root.SdkClientDetails();\n    if (object.appName != null) message.appName = String(object.appName);\n    if (object.appVersion != null) message.appVersion = String(object.appVersion);\n    if (object.deviceModel != null) message.deviceModel = String(object.deviceModel);\n    if (object.deviceMake != null) message.deviceMake = String(object.deviceMake);\n    if (object.platformName != null) message.platformName = String(object.platformName);\n    if (object.platformVersion != null) message.platformVersion = String(object.platformVersion);\n    if (object.clientSource != null) message.clientSource = String(object.clientSource);\n    if (object.chimeSdkVersion != null) message.chimeSdkVersion = String(object.chimeSdkVersion);\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkClientDetails message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkClientDetails\n   * @static\n   * @param {SdkClientDetails} message SdkClientDetails\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkClientDetails.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.appName = \"\";\n      object.appVersion = \"\";\n      object.deviceModel = \"\";\n      object.deviceMake = \"\";\n      object.platformName = \"\";\n      object.platformVersion = \"\";\n      object.clientSource = \"\";\n      object.chimeSdkVersion = \"\";\n    }\n\n    if (message.appName != null && message.hasOwnProperty(\"appName\")) object.appName = message.appName;\n    if (message.appVersion != null && message.hasOwnProperty(\"appVersion\")) object.appVersion = message.appVersion;\n    if (message.deviceModel != null && message.hasOwnProperty(\"deviceModel\")) object.deviceModel = message.deviceModel;\n    if (message.deviceMake != null && message.hasOwnProperty(\"deviceMake\")) object.deviceMake = message.deviceMake;\n    if (message.platformName != null && message.hasOwnProperty(\"platformName\")) object.platformName = message.platformName;\n    if (message.platformVersion != null && message.hasOwnProperty(\"platformVersion\")) object.platformVersion = message.platformVersion;\n    if (message.clientSource != null && message.hasOwnProperty(\"clientSource\")) object.clientSource = message.clientSource;\n    if (message.chimeSdkVersion != null && message.hasOwnProperty(\"chimeSdkVersion\")) object.chimeSdkVersion = message.chimeSdkVersion;\n    return object;\n  };\n  /**\n   * Converts this SdkClientDetails to JSON.\n   * @function toJSON\n   * @memberof SdkClientDetails\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkClientDetails.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkClientDetails;\n}();\n\n$root.SdkJoinFrame = function () {\n  /**\n   * Properties of a SdkJoinFrame.\n   * @exports ISdkJoinFrame\n   * @interface ISdkJoinFrame\n   * @property {number|null} [protocolVersion] SdkJoinFrame protocolVersion\n   * @property {number|null} [maxNumOfVideos] SdkJoinFrame maxNumOfVideos\n   * @property {number|null} [flags] SdkJoinFrame flags\n   * @property {ISdkClientDetails|null} [clientDetails] SdkJoinFrame clientDetails\n   * @property {number|Long|null} [audioSessionId] SdkJoinFrame audioSessionId\n   * @property {boolean|null} [wantsCompressedSdp] SdkJoinFrame wantsCompressedSdp\n   */\n\n  /**\n   * Constructs a new SdkJoinFrame.\n   * @exports SdkJoinFrame\n   * @classdesc Represents a SdkJoinFrame.\n   * @implements ISdkJoinFrame\n   * @constructor\n   * @param {ISdkJoinFrame=} [properties] Properties to set\n   */\n  function SdkJoinFrame(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkJoinFrame protocolVersion.\n   * @member {number} protocolVersion\n   * @memberof SdkJoinFrame\n   * @instance\n   */\n\n\n  SdkJoinFrame.prototype.protocolVersion = 2;\n  /**\n   * SdkJoinFrame maxNumOfVideos.\n   * @member {number} maxNumOfVideos\n   * @memberof SdkJoinFrame\n   * @instance\n   */\n\n  SdkJoinFrame.prototype.maxNumOfVideos = 0;\n  /**\n   * SdkJoinFrame flags.\n   * @member {number} flags\n   * @memberof SdkJoinFrame\n   * @instance\n   */\n\n  SdkJoinFrame.prototype.flags = 0;\n  /**\n   * SdkJoinFrame clientDetails.\n   * @member {ISdkClientDetails|null|undefined} clientDetails\n   * @memberof SdkJoinFrame\n   * @instance\n   */\n\n  SdkJoinFrame.prototype.clientDetails = null;\n  /**\n   * SdkJoinFrame audioSessionId.\n   * @member {number|Long} audioSessionId\n   * @memberof SdkJoinFrame\n   * @instance\n   */\n\n  SdkJoinFrame.prototype.audioSessionId = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  /**\n   * SdkJoinFrame wantsCompressedSdp.\n   * @member {boolean} wantsCompressedSdp\n   * @memberof SdkJoinFrame\n   * @instance\n   */\n\n  SdkJoinFrame.prototype.wantsCompressedSdp = false;\n  /**\n   * Creates a new SdkJoinFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkJoinFrame\n   * @static\n   * @param {ISdkJoinFrame=} [properties] Properties to set\n   * @returns {SdkJoinFrame} SdkJoinFrame instance\n   */\n\n  SdkJoinFrame.create = function create(properties) {\n    return new SdkJoinFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkJoinFrame message. Does not implicitly {@link SdkJoinFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkJoinFrame\n   * @static\n   * @param {ISdkJoinFrame} message SdkJoinFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkJoinFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.protocolVersion != null && message.hasOwnProperty(\"protocolVersion\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).uint32(message.protocolVersion);\n    if (message.maxNumOfVideos != null && message.hasOwnProperty(\"maxNumOfVideos\")) writer.uint32(\n    /* id 2, wireType 0 =*/\n    16).uint32(message.maxNumOfVideos);\n    if (message.flags != null && message.hasOwnProperty(\"flags\")) writer.uint32(\n    /* id 3, wireType 0 =*/\n    24).uint32(message.flags);\n    if (message.clientDetails != null && message.hasOwnProperty(\"clientDetails\")) $root.SdkClientDetails.encode(message.clientDetails, writer.uint32(\n    /* id 4, wireType 2 =*/\n    34).fork()).ldelim();\n    if (message.audioSessionId != null && message.hasOwnProperty(\"audioSessionId\")) writer.uint32(\n    /* id 6, wireType 0 =*/\n    48).uint64(message.audioSessionId);\n    if (message.wantsCompressedSdp != null && message.hasOwnProperty(\"wantsCompressedSdp\")) writer.uint32(\n    /* id 7, wireType 0 =*/\n    56).bool(message.wantsCompressedSdp);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkJoinFrame message, length delimited. Does not implicitly {@link SdkJoinFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkJoinFrame\n   * @static\n   * @param {ISdkJoinFrame} message SdkJoinFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkJoinFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkJoinFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkJoinFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkJoinFrame} SdkJoinFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkJoinFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkJoinFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.protocolVersion = reader.uint32();\n          break;\n\n        case 2:\n          message.maxNumOfVideos = reader.uint32();\n          break;\n\n        case 3:\n          message.flags = reader.uint32();\n          break;\n\n        case 4:\n          message.clientDetails = $root.SdkClientDetails.decode(reader, reader.uint32());\n          break;\n\n        case 6:\n          message.audioSessionId = reader.uint64();\n          break;\n\n        case 7:\n          message.wantsCompressedSdp = reader.bool();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkJoinFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkJoinFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkJoinFrame} SdkJoinFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkJoinFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkJoinFrame message.\n   * @function verify\n   * @memberof SdkJoinFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkJoinFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.protocolVersion != null && message.hasOwnProperty(\"protocolVersion\")) if (!$util.isInteger(message.protocolVersion)) return \"protocolVersion: integer expected\";\n    if (message.maxNumOfVideos != null && message.hasOwnProperty(\"maxNumOfVideos\")) if (!$util.isInteger(message.maxNumOfVideos)) return \"maxNumOfVideos: integer expected\";\n    if (message.flags != null && message.hasOwnProperty(\"flags\")) if (!$util.isInteger(message.flags)) return \"flags: integer expected\";\n\n    if (message.clientDetails != null && message.hasOwnProperty(\"clientDetails\")) {\n      var error = $root.SdkClientDetails.verify(message.clientDetails);\n      if (error) return \"clientDetails.\" + error;\n    }\n\n    if (message.audioSessionId != null && message.hasOwnProperty(\"audioSessionId\")) if (!$util.isInteger(message.audioSessionId) && !(message.audioSessionId && $util.isInteger(message.audioSessionId.low) && $util.isInteger(message.audioSessionId.high))) return \"audioSessionId: integer|Long expected\";\n    if (message.wantsCompressedSdp != null && message.hasOwnProperty(\"wantsCompressedSdp\")) if (typeof message.wantsCompressedSdp !== \"boolean\") return \"wantsCompressedSdp: boolean expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkJoinFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkJoinFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkJoinFrame} SdkJoinFrame\n   */\n\n\n  SdkJoinFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkJoinFrame) return object;\n    var message = new $root.SdkJoinFrame();\n    if (object.protocolVersion != null) message.protocolVersion = object.protocolVersion >>> 0;\n    if (object.maxNumOfVideos != null) message.maxNumOfVideos = object.maxNumOfVideos >>> 0;\n    if (object.flags != null) message.flags = object.flags >>> 0;\n\n    if (object.clientDetails != null) {\n      if (typeof object.clientDetails !== \"object\") throw TypeError(\".SdkJoinFrame.clientDetails: object expected\");\n      message.clientDetails = $root.SdkClientDetails.fromObject(object.clientDetails);\n    }\n\n    if (object.audioSessionId != null) if ($util.Long) (message.audioSessionId = $util.Long.fromValue(object.audioSessionId)).unsigned = true;else if (typeof object.audioSessionId === \"string\") message.audioSessionId = parseInt(object.audioSessionId, 10);else if (typeof object.audioSessionId === \"number\") message.audioSessionId = object.audioSessionId;else if (typeof object.audioSessionId === \"object\") message.audioSessionId = new $util.LongBits(object.audioSessionId.low >>> 0, object.audioSessionId.high >>> 0).toNumber(true);\n    if (object.wantsCompressedSdp != null) message.wantsCompressedSdp = Boolean(object.wantsCompressedSdp);\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkJoinFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkJoinFrame\n   * @static\n   * @param {SdkJoinFrame} message SdkJoinFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkJoinFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.protocolVersion = 2;\n      object.maxNumOfVideos = 0;\n      object.flags = 0;\n      object.clientDetails = null;\n\n      if ($util.Long) {\n        var long = new $util.Long(0, 0, true);\n        object.audioSessionId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n      } else object.audioSessionId = options.longs === String ? \"0\" : 0;\n\n      object.wantsCompressedSdp = false;\n    }\n\n    if (message.protocolVersion != null && message.hasOwnProperty(\"protocolVersion\")) object.protocolVersion = message.protocolVersion;\n    if (message.maxNumOfVideos != null && message.hasOwnProperty(\"maxNumOfVideos\")) object.maxNumOfVideos = message.maxNumOfVideos;\n    if (message.flags != null && message.hasOwnProperty(\"flags\")) object.flags = message.flags;\n    if (message.clientDetails != null && message.hasOwnProperty(\"clientDetails\")) object.clientDetails = $root.SdkClientDetails.toObject(message.clientDetails, options);\n    if (message.audioSessionId != null && message.hasOwnProperty(\"audioSessionId\")) if (typeof message.audioSessionId === \"number\") object.audioSessionId = options.longs === String ? String(message.audioSessionId) : message.audioSessionId;else object.audioSessionId = options.longs === String ? $util.Long.prototype.toString.call(message.audioSessionId) : options.longs === Number ? new $util.LongBits(message.audioSessionId.low >>> 0, message.audioSessionId.high >>> 0).toNumber(true) : message.audioSessionId;\n    if (message.wantsCompressedSdp != null && message.hasOwnProperty(\"wantsCompressedSdp\")) object.wantsCompressedSdp = message.wantsCompressedSdp;\n    return object;\n  };\n  /**\n   * Converts this SdkJoinFrame to JSON.\n   * @function toJSON\n   * @memberof SdkJoinFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkJoinFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkJoinFrame;\n}();\n\n$root.SdkJoinAckFrame = function () {\n  /**\n   * Properties of a SdkJoinAckFrame.\n   * @exports ISdkJoinAckFrame\n   * @interface ISdkJoinAckFrame\n   * @property {ISdkTurnCredentials|null} [turnCredentials] SdkJoinAckFrame turnCredentials\n   * @property {number|null} [videoSubscriptionLimit] SdkJoinAckFrame videoSubscriptionLimit\n   * @property {boolean|null} [wantsCompressedSdp] SdkJoinAckFrame wantsCompressedSdp\n   */\n\n  /**\n   * Constructs a new SdkJoinAckFrame.\n   * @exports SdkJoinAckFrame\n   * @classdesc Represents a SdkJoinAckFrame.\n   * @implements ISdkJoinAckFrame\n   * @constructor\n   * @param {ISdkJoinAckFrame=} [properties] Properties to set\n   */\n  function SdkJoinAckFrame(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkJoinAckFrame turnCredentials.\n   * @member {ISdkTurnCredentials|null|undefined} turnCredentials\n   * @memberof SdkJoinAckFrame\n   * @instance\n   */\n\n\n  SdkJoinAckFrame.prototype.turnCredentials = null;\n  /**\n   * SdkJoinAckFrame videoSubscriptionLimit.\n   * @member {number} videoSubscriptionLimit\n   * @memberof SdkJoinAckFrame\n   * @instance\n   */\n\n  SdkJoinAckFrame.prototype.videoSubscriptionLimit = 25;\n  /**\n   * SdkJoinAckFrame wantsCompressedSdp.\n   * @member {boolean} wantsCompressedSdp\n   * @memberof SdkJoinAckFrame\n   * @instance\n   */\n\n  SdkJoinAckFrame.prototype.wantsCompressedSdp = false;\n  /**\n   * Creates a new SdkJoinAckFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkJoinAckFrame\n   * @static\n   * @param {ISdkJoinAckFrame=} [properties] Properties to set\n   * @returns {SdkJoinAckFrame} SdkJoinAckFrame instance\n   */\n\n  SdkJoinAckFrame.create = function create(properties) {\n    return new SdkJoinAckFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkJoinAckFrame message. Does not implicitly {@link SdkJoinAckFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkJoinAckFrame\n   * @static\n   * @param {ISdkJoinAckFrame} message SdkJoinAckFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkJoinAckFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.turnCredentials != null && message.hasOwnProperty(\"turnCredentials\")) $root.SdkTurnCredentials.encode(message.turnCredentials, writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).fork()).ldelim();\n    if (message.videoSubscriptionLimit != null && message.hasOwnProperty(\"videoSubscriptionLimit\")) writer.uint32(\n    /* id 2, wireType 0 =*/\n    16).uint32(message.videoSubscriptionLimit);\n    if (message.wantsCompressedSdp != null && message.hasOwnProperty(\"wantsCompressedSdp\")) writer.uint32(\n    /* id 3, wireType 0 =*/\n    24).bool(message.wantsCompressedSdp);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkJoinAckFrame message, length delimited. Does not implicitly {@link SdkJoinAckFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkJoinAckFrame\n   * @static\n   * @param {ISdkJoinAckFrame} message SdkJoinAckFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkJoinAckFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkJoinAckFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkJoinAckFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkJoinAckFrame} SdkJoinAckFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkJoinAckFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkJoinAckFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.turnCredentials = $root.SdkTurnCredentials.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.videoSubscriptionLimit = reader.uint32();\n          break;\n\n        case 3:\n          message.wantsCompressedSdp = reader.bool();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkJoinAckFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkJoinAckFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkJoinAckFrame} SdkJoinAckFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkJoinAckFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkJoinAckFrame message.\n   * @function verify\n   * @memberof SdkJoinAckFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkJoinAckFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n    if (message.turnCredentials != null && message.hasOwnProperty(\"turnCredentials\")) {\n      var error = $root.SdkTurnCredentials.verify(message.turnCredentials);\n      if (error) return \"turnCredentials.\" + error;\n    }\n\n    if (message.videoSubscriptionLimit != null && message.hasOwnProperty(\"videoSubscriptionLimit\")) if (!$util.isInteger(message.videoSubscriptionLimit)) return \"videoSubscriptionLimit: integer expected\";\n    if (message.wantsCompressedSdp != null && message.hasOwnProperty(\"wantsCompressedSdp\")) if (typeof message.wantsCompressedSdp !== \"boolean\") return \"wantsCompressedSdp: boolean expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkJoinAckFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkJoinAckFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkJoinAckFrame} SdkJoinAckFrame\n   */\n\n\n  SdkJoinAckFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkJoinAckFrame) return object;\n    var message = new $root.SdkJoinAckFrame();\n\n    if (object.turnCredentials != null) {\n      if (typeof object.turnCredentials !== \"object\") throw TypeError(\".SdkJoinAckFrame.turnCredentials: object expected\");\n      message.turnCredentials = $root.SdkTurnCredentials.fromObject(object.turnCredentials);\n    }\n\n    if (object.videoSubscriptionLimit != null) message.videoSubscriptionLimit = object.videoSubscriptionLimit >>> 0;\n    if (object.wantsCompressedSdp != null) message.wantsCompressedSdp = Boolean(object.wantsCompressedSdp);\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkJoinAckFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkJoinAckFrame\n   * @static\n   * @param {SdkJoinAckFrame} message SdkJoinAckFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkJoinAckFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.turnCredentials = null;\n      object.videoSubscriptionLimit = 25;\n      object.wantsCompressedSdp = false;\n    }\n\n    if (message.turnCredentials != null && message.hasOwnProperty(\"turnCredentials\")) object.turnCredentials = $root.SdkTurnCredentials.toObject(message.turnCredentials, options);\n    if (message.videoSubscriptionLimit != null && message.hasOwnProperty(\"videoSubscriptionLimit\")) object.videoSubscriptionLimit = message.videoSubscriptionLimit;\n    if (message.wantsCompressedSdp != null && message.hasOwnProperty(\"wantsCompressedSdp\")) object.wantsCompressedSdp = message.wantsCompressedSdp;\n    return object;\n  };\n  /**\n   * Converts this SdkJoinAckFrame to JSON.\n   * @function toJSON\n   * @memberof SdkJoinAckFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkJoinAckFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkJoinAckFrame;\n}();\n\n$root.SdkLeaveFrame = function () {\n  /**\n   * Properties of a SdkLeaveFrame.\n   * @exports ISdkLeaveFrame\n   * @interface ISdkLeaveFrame\n   */\n\n  /**\n   * Constructs a new SdkLeaveFrame.\n   * @exports SdkLeaveFrame\n   * @classdesc Represents a SdkLeaveFrame.\n   * @implements ISdkLeaveFrame\n   * @constructor\n   * @param {ISdkLeaveFrame=} [properties] Properties to set\n   */\n  function SdkLeaveFrame(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * Creates a new SdkLeaveFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkLeaveFrame\n   * @static\n   * @param {ISdkLeaveFrame=} [properties] Properties to set\n   * @returns {SdkLeaveFrame} SdkLeaveFrame instance\n   */\n\n\n  SdkLeaveFrame.create = function create(properties) {\n    return new SdkLeaveFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkLeaveFrame message. Does not implicitly {@link SdkLeaveFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkLeaveFrame\n   * @static\n   * @param {ISdkLeaveFrame} message SdkLeaveFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkLeaveFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkLeaveFrame message, length delimited. Does not implicitly {@link SdkLeaveFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkLeaveFrame\n   * @static\n   * @param {ISdkLeaveFrame} message SdkLeaveFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkLeaveFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkLeaveFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkLeaveFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkLeaveFrame} SdkLeaveFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkLeaveFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkLeaveFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkLeaveFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkLeaveFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkLeaveFrame} SdkLeaveFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkLeaveFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkLeaveFrame message.\n   * @function verify\n   * @memberof SdkLeaveFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkLeaveFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkLeaveFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkLeaveFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkLeaveFrame} SdkLeaveFrame\n   */\n\n\n  SdkLeaveFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkLeaveFrame) return object;\n    return new $root.SdkLeaveFrame();\n  };\n  /**\n   * Creates a plain object from a SdkLeaveFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkLeaveFrame\n   * @static\n   * @param {SdkLeaveFrame} message SdkLeaveFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkLeaveFrame.toObject = function toObject() {\n    return {};\n  };\n  /**\n   * Converts this SdkLeaveFrame to JSON.\n   * @function toJSON\n   * @memberof SdkLeaveFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkLeaveFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkLeaveFrame;\n}();\n\n$root.SdkLeaveAckFrame = function () {\n  /**\n   * Properties of a SdkLeaveAckFrame.\n   * @exports ISdkLeaveAckFrame\n   * @interface ISdkLeaveAckFrame\n   */\n\n  /**\n   * Constructs a new SdkLeaveAckFrame.\n   * @exports SdkLeaveAckFrame\n   * @classdesc Represents a SdkLeaveAckFrame.\n   * @implements ISdkLeaveAckFrame\n   * @constructor\n   * @param {ISdkLeaveAckFrame=} [properties] Properties to set\n   */\n  function SdkLeaveAckFrame(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * Creates a new SdkLeaveAckFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkLeaveAckFrame\n   * @static\n   * @param {ISdkLeaveAckFrame=} [properties] Properties to set\n   * @returns {SdkLeaveAckFrame} SdkLeaveAckFrame instance\n   */\n\n\n  SdkLeaveAckFrame.create = function create(properties) {\n    return new SdkLeaveAckFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkLeaveAckFrame message. Does not implicitly {@link SdkLeaveAckFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkLeaveAckFrame\n   * @static\n   * @param {ISdkLeaveAckFrame} message SdkLeaveAckFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkLeaveAckFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkLeaveAckFrame message, length delimited. Does not implicitly {@link SdkLeaveAckFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkLeaveAckFrame\n   * @static\n   * @param {ISdkLeaveAckFrame} message SdkLeaveAckFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkLeaveAckFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkLeaveAckFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkLeaveAckFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkLeaveAckFrame} SdkLeaveAckFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkLeaveAckFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkLeaveAckFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkLeaveAckFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkLeaveAckFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkLeaveAckFrame} SdkLeaveAckFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkLeaveAckFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkLeaveAckFrame message.\n   * @function verify\n   * @memberof SdkLeaveAckFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkLeaveAckFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkLeaveAckFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkLeaveAckFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkLeaveAckFrame} SdkLeaveAckFrame\n   */\n\n\n  SdkLeaveAckFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkLeaveAckFrame) return object;\n    return new $root.SdkLeaveAckFrame();\n  };\n  /**\n   * Creates a plain object from a SdkLeaveAckFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkLeaveAckFrame\n   * @static\n   * @param {SdkLeaveAckFrame} message SdkLeaveAckFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkLeaveAckFrame.toObject = function toObject() {\n    return {};\n  };\n  /**\n   * Converts this SdkLeaveAckFrame to JSON.\n   * @function toJSON\n   * @memberof SdkLeaveAckFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkLeaveAckFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkLeaveAckFrame;\n}();\n/**\n * SdkStreamServiceType enum.\n * @exports SdkStreamServiceType\n * @enum {string}\n * @property {number} RX=1 RX value\n * @property {number} TX=2 TX value\n * @property {number} DUPLEX=3 DUPLEX value\n */\n\n\n$root.SdkStreamServiceType = function () {\n  var valuesById = {},\n      values = Object.create(valuesById);\n  values[valuesById[1] = \"RX\"] = 1;\n  values[valuesById[2] = \"TX\"] = 2;\n  values[valuesById[3] = \"DUPLEX\"] = 3;\n  return values;\n}();\n/**\n * SdkStreamMediaType enum.\n * @exports SdkStreamMediaType\n * @enum {string}\n * @property {number} AUDIO=1 AUDIO value\n * @property {number} VIDEO=2 VIDEO value\n */\n\n\n$root.SdkStreamMediaType = function () {\n  var valuesById = {},\n      values = Object.create(valuesById);\n  values[valuesById[1] = \"AUDIO\"] = 1;\n  values[valuesById[2] = \"VIDEO\"] = 2;\n  return values;\n}();\n\n$root.SdkSubscribeFrame = function () {\n  /**\n   * Properties of a SdkSubscribeFrame.\n   * @exports ISdkSubscribeFrame\n   * @interface ISdkSubscribeFrame\n   * @property {SdkStreamServiceType|null} [duplex] SdkSubscribeFrame duplex\n   * @property {Array.<ISdkStreamDescriptor>|null} [sendStreams] SdkSubscribeFrame sendStreams\n   * @property {Array.<number>|null} [receiveStreamIds] SdkSubscribeFrame receiveStreamIds\n   * @property {string|null} [sdpOffer] SdkSubscribeFrame sdpOffer\n   * @property {string|null} [audioHost] SdkSubscribeFrame audioHost\n   * @property {boolean|null} [audioCheckin] SdkSubscribeFrame audioCheckin\n   * @property {boolean|null} [audioMuted] SdkSubscribeFrame audioMuted\n   * @property {Uint8Array|null} [compressedSdpOffer] SdkSubscribeFrame compressedSdpOffer\n   */\n\n  /**\n   * Constructs a new SdkSubscribeFrame.\n   * @exports SdkSubscribeFrame\n   * @classdesc Represents a SdkSubscribeFrame.\n   * @implements ISdkSubscribeFrame\n   * @constructor\n   * @param {ISdkSubscribeFrame=} [properties] Properties to set\n   */\n  function SdkSubscribeFrame(properties) {\n    this.sendStreams = [];\n    this.receiveStreamIds = [];\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkSubscribeFrame duplex.\n   * @member {SdkStreamServiceType} duplex\n   * @memberof SdkSubscribeFrame\n   * @instance\n   */\n\n\n  SdkSubscribeFrame.prototype.duplex = 1;\n  /**\n   * SdkSubscribeFrame sendStreams.\n   * @member {Array.<ISdkStreamDescriptor>} sendStreams\n   * @memberof SdkSubscribeFrame\n   * @instance\n   */\n\n  SdkSubscribeFrame.prototype.sendStreams = $util.emptyArray;\n  /**\n   * SdkSubscribeFrame receiveStreamIds.\n   * @member {Array.<number>} receiveStreamIds\n   * @memberof SdkSubscribeFrame\n   * @instance\n   */\n\n  SdkSubscribeFrame.prototype.receiveStreamIds = $util.emptyArray;\n  /**\n   * SdkSubscribeFrame sdpOffer.\n   * @member {string} sdpOffer\n   * @memberof SdkSubscribeFrame\n   * @instance\n   */\n\n  SdkSubscribeFrame.prototype.sdpOffer = \"\";\n  /**\n   * SdkSubscribeFrame audioHost.\n   * @member {string} audioHost\n   * @memberof SdkSubscribeFrame\n   * @instance\n   */\n\n  SdkSubscribeFrame.prototype.audioHost = \"\";\n  /**\n   * SdkSubscribeFrame audioCheckin.\n   * @member {boolean} audioCheckin\n   * @memberof SdkSubscribeFrame\n   * @instance\n   */\n\n  SdkSubscribeFrame.prototype.audioCheckin = false;\n  /**\n   * SdkSubscribeFrame audioMuted.\n   * @member {boolean} audioMuted\n   * @memberof SdkSubscribeFrame\n   * @instance\n   */\n\n  SdkSubscribeFrame.prototype.audioMuted = false;\n  /**\n   * SdkSubscribeFrame compressedSdpOffer.\n   * @member {Uint8Array} compressedSdpOffer\n   * @memberof SdkSubscribeFrame\n   * @instance\n   */\n\n  SdkSubscribeFrame.prototype.compressedSdpOffer = $util.newBuffer([]);\n  /**\n   * Creates a new SdkSubscribeFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkSubscribeFrame\n   * @static\n   * @param {ISdkSubscribeFrame=} [properties] Properties to set\n   * @returns {SdkSubscribeFrame} SdkSubscribeFrame instance\n   */\n\n  SdkSubscribeFrame.create = function create(properties) {\n    return new SdkSubscribeFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkSubscribeFrame message. Does not implicitly {@link SdkSubscribeFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkSubscribeFrame\n   * @static\n   * @param {ISdkSubscribeFrame} message SdkSubscribeFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkSubscribeFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.duplex != null && message.hasOwnProperty(\"duplex\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).int32(message.duplex);\n    if (message.sendStreams != null && message.sendStreams.length) for (var i = 0; i < message.sendStreams.length; ++i) $root.SdkStreamDescriptor.encode(message.sendStreams[i], writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).fork()).ldelim();\n    if (message.receiveStreamIds != null && message.receiveStreamIds.length) for (var i = 0; i < message.receiveStreamIds.length; ++i) writer.uint32(\n    /* id 3, wireType 0 =*/\n    24).uint32(message.receiveStreamIds[i]);\n    if (message.sdpOffer != null && message.hasOwnProperty(\"sdpOffer\")) writer.uint32(\n    /* id 4, wireType 2 =*/\n    34).string(message.sdpOffer);\n    if (message.audioHost != null && message.hasOwnProperty(\"audioHost\")) writer.uint32(\n    /* id 5, wireType 2 =*/\n    42).string(message.audioHost);\n    if (message.audioCheckin != null && message.hasOwnProperty(\"audioCheckin\")) writer.uint32(\n    /* id 6, wireType 0 =*/\n    48).bool(message.audioCheckin);\n    if (message.audioMuted != null && message.hasOwnProperty(\"audioMuted\")) writer.uint32(\n    /* id 7, wireType 0 =*/\n    56).bool(message.audioMuted);\n    if (message.compressedSdpOffer != null && message.hasOwnProperty(\"compressedSdpOffer\")) writer.uint32(\n    /* id 8, wireType 2 =*/\n    66).bytes(message.compressedSdpOffer);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkSubscribeFrame message, length delimited. Does not implicitly {@link SdkSubscribeFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkSubscribeFrame\n   * @static\n   * @param {ISdkSubscribeFrame} message SdkSubscribeFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkSubscribeFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkSubscribeFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkSubscribeFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkSubscribeFrame} SdkSubscribeFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkSubscribeFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkSubscribeFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.duplex = reader.int32();\n          break;\n\n        case 2:\n          if (!(message.sendStreams && message.sendStreams.length)) message.sendStreams = [];\n          message.sendStreams.push($root.SdkStreamDescriptor.decode(reader, reader.uint32()));\n          break;\n\n        case 3:\n          if (!(message.receiveStreamIds && message.receiveStreamIds.length)) message.receiveStreamIds = [];\n\n          if ((tag & 7) === 2) {\n            var end2 = reader.uint32() + reader.pos;\n\n            while (reader.pos < end2) message.receiveStreamIds.push(reader.uint32());\n          } else message.receiveStreamIds.push(reader.uint32());\n\n          break;\n\n        case 4:\n          message.sdpOffer = reader.string();\n          break;\n\n        case 5:\n          message.audioHost = reader.string();\n          break;\n\n        case 6:\n          message.audioCheckin = reader.bool();\n          break;\n\n        case 7:\n          message.audioMuted = reader.bool();\n          break;\n\n        case 8:\n          message.compressedSdpOffer = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkSubscribeFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkSubscribeFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkSubscribeFrame} SdkSubscribeFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkSubscribeFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkSubscribeFrame message.\n   * @function verify\n   * @memberof SdkSubscribeFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkSubscribeFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.duplex != null && message.hasOwnProperty(\"duplex\")) switch (message.duplex) {\n      default:\n        return \"duplex: enum value expected\";\n\n      case 1:\n      case 2:\n      case 3:\n        break;\n    }\n\n    if (message.sendStreams != null && message.hasOwnProperty(\"sendStreams\")) {\n      if (!Array.isArray(message.sendStreams)) return \"sendStreams: array expected\";\n\n      for (var i = 0; i < message.sendStreams.length; ++i) {\n        var error = $root.SdkStreamDescriptor.verify(message.sendStreams[i]);\n        if (error) return \"sendStreams.\" + error;\n      }\n    }\n\n    if (message.receiveStreamIds != null && message.hasOwnProperty(\"receiveStreamIds\")) {\n      if (!Array.isArray(message.receiveStreamIds)) return \"receiveStreamIds: array expected\";\n\n      for (var i = 0; i < message.receiveStreamIds.length; ++i) if (!$util.isInteger(message.receiveStreamIds[i])) return \"receiveStreamIds: integer[] expected\";\n    }\n\n    if (message.sdpOffer != null && message.hasOwnProperty(\"sdpOffer\")) if (!$util.isString(message.sdpOffer)) return \"sdpOffer: string expected\";\n    if (message.audioHost != null && message.hasOwnProperty(\"audioHost\")) if (!$util.isString(message.audioHost)) return \"audioHost: string expected\";\n    if (message.audioCheckin != null && message.hasOwnProperty(\"audioCheckin\")) if (typeof message.audioCheckin !== \"boolean\") return \"audioCheckin: boolean expected\";\n    if (message.audioMuted != null && message.hasOwnProperty(\"audioMuted\")) if (typeof message.audioMuted !== \"boolean\") return \"audioMuted: boolean expected\";\n    if (message.compressedSdpOffer != null && message.hasOwnProperty(\"compressedSdpOffer\")) if (!(message.compressedSdpOffer && typeof message.compressedSdpOffer.length === \"number\" || $util.isString(message.compressedSdpOffer))) return \"compressedSdpOffer: buffer expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkSubscribeFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkSubscribeFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkSubscribeFrame} SdkSubscribeFrame\n   */\n\n\n  SdkSubscribeFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkSubscribeFrame) return object;\n    var message = new $root.SdkSubscribeFrame();\n\n    switch (object.duplex) {\n      case \"RX\":\n      case 1:\n        message.duplex = 1;\n        break;\n\n      case \"TX\":\n      case 2:\n        message.duplex = 2;\n        break;\n\n      case \"DUPLEX\":\n      case 3:\n        message.duplex = 3;\n        break;\n    }\n\n    if (object.sendStreams) {\n      if (!Array.isArray(object.sendStreams)) throw TypeError(\".SdkSubscribeFrame.sendStreams: array expected\");\n      message.sendStreams = [];\n\n      for (var i = 0; i < object.sendStreams.length; ++i) {\n        if (typeof object.sendStreams[i] !== \"object\") throw TypeError(\".SdkSubscribeFrame.sendStreams: object expected\");\n        message.sendStreams[i] = $root.SdkStreamDescriptor.fromObject(object.sendStreams[i]);\n      }\n    }\n\n    if (object.receiveStreamIds) {\n      if (!Array.isArray(object.receiveStreamIds)) throw TypeError(\".SdkSubscribeFrame.receiveStreamIds: array expected\");\n      message.receiveStreamIds = [];\n\n      for (var i = 0; i < object.receiveStreamIds.length; ++i) message.receiveStreamIds[i] = object.receiveStreamIds[i] >>> 0;\n    }\n\n    if (object.sdpOffer != null) message.sdpOffer = String(object.sdpOffer);\n    if (object.audioHost != null) message.audioHost = String(object.audioHost);\n    if (object.audioCheckin != null) message.audioCheckin = Boolean(object.audioCheckin);\n    if (object.audioMuted != null) message.audioMuted = Boolean(object.audioMuted);\n    if (object.compressedSdpOffer != null) if (typeof object.compressedSdpOffer === \"string\") $util.base64.decode(object.compressedSdpOffer, message.compressedSdpOffer = $util.newBuffer($util.base64.length(object.compressedSdpOffer)), 0);else if (object.compressedSdpOffer.length) message.compressedSdpOffer = object.compressedSdpOffer;\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkSubscribeFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkSubscribeFrame\n   * @static\n   * @param {SdkSubscribeFrame} message SdkSubscribeFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkSubscribeFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.arrays || options.defaults) {\n      object.sendStreams = [];\n      object.receiveStreamIds = [];\n    }\n\n    if (options.defaults) {\n      object.duplex = options.enums === String ? \"RX\" : 1;\n      object.sdpOffer = \"\";\n      object.audioHost = \"\";\n      object.audioCheckin = false;\n      object.audioMuted = false;\n      if (options.bytes === String) object.compressedSdpOffer = \"\";else {\n        object.compressedSdpOffer = [];\n        if (options.bytes !== Array) object.compressedSdpOffer = $util.newBuffer(object.compressedSdpOffer);\n      }\n    }\n\n    if (message.duplex != null && message.hasOwnProperty(\"duplex\")) object.duplex = options.enums === String ? $root.SdkStreamServiceType[message.duplex] : message.duplex;\n\n    if (message.sendStreams && message.sendStreams.length) {\n      object.sendStreams = [];\n\n      for (var j = 0; j < message.sendStreams.length; ++j) object.sendStreams[j] = $root.SdkStreamDescriptor.toObject(message.sendStreams[j], options);\n    }\n\n    if (message.receiveStreamIds && message.receiveStreamIds.length) {\n      object.receiveStreamIds = [];\n\n      for (var j = 0; j < message.receiveStreamIds.length; ++j) object.receiveStreamIds[j] = message.receiveStreamIds[j];\n    }\n\n    if (message.sdpOffer != null && message.hasOwnProperty(\"sdpOffer\")) object.sdpOffer = message.sdpOffer;\n    if (message.audioHost != null && message.hasOwnProperty(\"audioHost\")) object.audioHost = message.audioHost;\n    if (message.audioCheckin != null && message.hasOwnProperty(\"audioCheckin\")) object.audioCheckin = message.audioCheckin;\n    if (message.audioMuted != null && message.hasOwnProperty(\"audioMuted\")) object.audioMuted = message.audioMuted;\n    if (message.compressedSdpOffer != null && message.hasOwnProperty(\"compressedSdpOffer\")) object.compressedSdpOffer = options.bytes === String ? $util.base64.encode(message.compressedSdpOffer, 0, message.compressedSdpOffer.length) : options.bytes === Array ? Array.prototype.slice.call(message.compressedSdpOffer) : message.compressedSdpOffer;\n    return object;\n  };\n  /**\n   * Converts this SdkSubscribeFrame to JSON.\n   * @function toJSON\n   * @memberof SdkSubscribeFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkSubscribeFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkSubscribeFrame;\n}();\n\n$root.SdkSubscribeAckFrame = function () {\n  /**\n   * Properties of a SdkSubscribeAckFrame.\n   * @exports ISdkSubscribeAckFrame\n   * @interface ISdkSubscribeAckFrame\n   * @property {SdkStreamServiceType|null} [duplex] SdkSubscribeAckFrame duplex\n   * @property {Array.<ISdkStreamAllocation>|null} [allocations] SdkSubscribeAckFrame allocations\n   * @property {string|null} [sdpAnswer] SdkSubscribeAckFrame sdpAnswer\n   * @property {Array.<ISdkTrackMapping>|null} [tracks] SdkSubscribeAckFrame tracks\n   * @property {Uint8Array|null} [compressedSdpAnswer] SdkSubscribeAckFrame compressedSdpAnswer\n   */\n\n  /**\n   * Constructs a new SdkSubscribeAckFrame.\n   * @exports SdkSubscribeAckFrame\n   * @classdesc Represents a SdkSubscribeAckFrame.\n   * @implements ISdkSubscribeAckFrame\n   * @constructor\n   * @param {ISdkSubscribeAckFrame=} [properties] Properties to set\n   */\n  function SdkSubscribeAckFrame(properties) {\n    this.allocations = [];\n    this.tracks = [];\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkSubscribeAckFrame duplex.\n   * @member {SdkStreamServiceType} duplex\n   * @memberof SdkSubscribeAckFrame\n   * @instance\n   */\n\n\n  SdkSubscribeAckFrame.prototype.duplex = 1;\n  /**\n   * SdkSubscribeAckFrame allocations.\n   * @member {Array.<ISdkStreamAllocation>} allocations\n   * @memberof SdkSubscribeAckFrame\n   * @instance\n   */\n\n  SdkSubscribeAckFrame.prototype.allocations = $util.emptyArray;\n  /**\n   * SdkSubscribeAckFrame sdpAnswer.\n   * @member {string} sdpAnswer\n   * @memberof SdkSubscribeAckFrame\n   * @instance\n   */\n\n  SdkSubscribeAckFrame.prototype.sdpAnswer = \"\";\n  /**\n   * SdkSubscribeAckFrame tracks.\n   * @member {Array.<ISdkTrackMapping>} tracks\n   * @memberof SdkSubscribeAckFrame\n   * @instance\n   */\n\n  SdkSubscribeAckFrame.prototype.tracks = $util.emptyArray;\n  /**\n   * SdkSubscribeAckFrame compressedSdpAnswer.\n   * @member {Uint8Array} compressedSdpAnswer\n   * @memberof SdkSubscribeAckFrame\n   * @instance\n   */\n\n  SdkSubscribeAckFrame.prototype.compressedSdpAnswer = $util.newBuffer([]);\n  /**\n   * Creates a new SdkSubscribeAckFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkSubscribeAckFrame\n   * @static\n   * @param {ISdkSubscribeAckFrame=} [properties] Properties to set\n   * @returns {SdkSubscribeAckFrame} SdkSubscribeAckFrame instance\n   */\n\n  SdkSubscribeAckFrame.create = function create(properties) {\n    return new SdkSubscribeAckFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkSubscribeAckFrame message. Does not implicitly {@link SdkSubscribeAckFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkSubscribeAckFrame\n   * @static\n   * @param {ISdkSubscribeAckFrame} message SdkSubscribeAckFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkSubscribeAckFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.duplex != null && message.hasOwnProperty(\"duplex\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).int32(message.duplex);\n    if (message.allocations != null && message.allocations.length) for (var i = 0; i < message.allocations.length; ++i) $root.SdkStreamAllocation.encode(message.allocations[i], writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).fork()).ldelim();\n    if (message.sdpAnswer != null && message.hasOwnProperty(\"sdpAnswer\")) writer.uint32(\n    /* id 3, wireType 2 =*/\n    26).string(message.sdpAnswer);\n    if (message.tracks != null && message.tracks.length) for (var i = 0; i < message.tracks.length; ++i) $root.SdkTrackMapping.encode(message.tracks[i], writer.uint32(\n    /* id 4, wireType 2 =*/\n    34).fork()).ldelim();\n    if (message.compressedSdpAnswer != null && message.hasOwnProperty(\"compressedSdpAnswer\")) writer.uint32(\n    /* id 5, wireType 2 =*/\n    42).bytes(message.compressedSdpAnswer);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkSubscribeAckFrame message, length delimited. Does not implicitly {@link SdkSubscribeAckFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkSubscribeAckFrame\n   * @static\n   * @param {ISdkSubscribeAckFrame} message SdkSubscribeAckFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkSubscribeAckFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkSubscribeAckFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkSubscribeAckFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkSubscribeAckFrame} SdkSubscribeAckFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkSubscribeAckFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkSubscribeAckFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.duplex = reader.int32();\n          break;\n\n        case 2:\n          if (!(message.allocations && message.allocations.length)) message.allocations = [];\n          message.allocations.push($root.SdkStreamAllocation.decode(reader, reader.uint32()));\n          break;\n\n        case 3:\n          message.sdpAnswer = reader.string();\n          break;\n\n        case 4:\n          if (!(message.tracks && message.tracks.length)) message.tracks = [];\n          message.tracks.push($root.SdkTrackMapping.decode(reader, reader.uint32()));\n          break;\n\n        case 5:\n          message.compressedSdpAnswer = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkSubscribeAckFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkSubscribeAckFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkSubscribeAckFrame} SdkSubscribeAckFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkSubscribeAckFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkSubscribeAckFrame message.\n   * @function verify\n   * @memberof SdkSubscribeAckFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkSubscribeAckFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.duplex != null && message.hasOwnProperty(\"duplex\")) switch (message.duplex) {\n      default:\n        return \"duplex: enum value expected\";\n\n      case 1:\n      case 2:\n      case 3:\n        break;\n    }\n\n    if (message.allocations != null && message.hasOwnProperty(\"allocations\")) {\n      if (!Array.isArray(message.allocations)) return \"allocations: array expected\";\n\n      for (var i = 0; i < message.allocations.length; ++i) {\n        var error = $root.SdkStreamAllocation.verify(message.allocations[i]);\n        if (error) return \"allocations.\" + error;\n      }\n    }\n\n    if (message.sdpAnswer != null && message.hasOwnProperty(\"sdpAnswer\")) if (!$util.isString(message.sdpAnswer)) return \"sdpAnswer: string expected\";\n\n    if (message.tracks != null && message.hasOwnProperty(\"tracks\")) {\n      if (!Array.isArray(message.tracks)) return \"tracks: array expected\";\n\n      for (var i = 0; i < message.tracks.length; ++i) {\n        var error = $root.SdkTrackMapping.verify(message.tracks[i]);\n        if (error) return \"tracks.\" + error;\n      }\n    }\n\n    if (message.compressedSdpAnswer != null && message.hasOwnProperty(\"compressedSdpAnswer\")) if (!(message.compressedSdpAnswer && typeof message.compressedSdpAnswer.length === \"number\" || $util.isString(message.compressedSdpAnswer))) return \"compressedSdpAnswer: buffer expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkSubscribeAckFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkSubscribeAckFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkSubscribeAckFrame} SdkSubscribeAckFrame\n   */\n\n\n  SdkSubscribeAckFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkSubscribeAckFrame) return object;\n    var message = new $root.SdkSubscribeAckFrame();\n\n    switch (object.duplex) {\n      case \"RX\":\n      case 1:\n        message.duplex = 1;\n        break;\n\n      case \"TX\":\n      case 2:\n        message.duplex = 2;\n        break;\n\n      case \"DUPLEX\":\n      case 3:\n        message.duplex = 3;\n        break;\n    }\n\n    if (object.allocations) {\n      if (!Array.isArray(object.allocations)) throw TypeError(\".SdkSubscribeAckFrame.allocations: array expected\");\n      message.allocations = [];\n\n      for (var i = 0; i < object.allocations.length; ++i) {\n        if (typeof object.allocations[i] !== \"object\") throw TypeError(\".SdkSubscribeAckFrame.allocations: object expected\");\n        message.allocations[i] = $root.SdkStreamAllocation.fromObject(object.allocations[i]);\n      }\n    }\n\n    if (object.sdpAnswer != null) message.sdpAnswer = String(object.sdpAnswer);\n\n    if (object.tracks) {\n      if (!Array.isArray(object.tracks)) throw TypeError(\".SdkSubscribeAckFrame.tracks: array expected\");\n      message.tracks = [];\n\n      for (var i = 0; i < object.tracks.length; ++i) {\n        if (typeof object.tracks[i] !== \"object\") throw TypeError(\".SdkSubscribeAckFrame.tracks: object expected\");\n        message.tracks[i] = $root.SdkTrackMapping.fromObject(object.tracks[i]);\n      }\n    }\n\n    if (object.compressedSdpAnswer != null) if (typeof object.compressedSdpAnswer === \"string\") $util.base64.decode(object.compressedSdpAnswer, message.compressedSdpAnswer = $util.newBuffer($util.base64.length(object.compressedSdpAnswer)), 0);else if (object.compressedSdpAnswer.length) message.compressedSdpAnswer = object.compressedSdpAnswer;\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkSubscribeAckFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkSubscribeAckFrame\n   * @static\n   * @param {SdkSubscribeAckFrame} message SdkSubscribeAckFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkSubscribeAckFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.arrays || options.defaults) {\n      object.allocations = [];\n      object.tracks = [];\n    }\n\n    if (options.defaults) {\n      object.duplex = options.enums === String ? \"RX\" : 1;\n      object.sdpAnswer = \"\";\n      if (options.bytes === String) object.compressedSdpAnswer = \"\";else {\n        object.compressedSdpAnswer = [];\n        if (options.bytes !== Array) object.compressedSdpAnswer = $util.newBuffer(object.compressedSdpAnswer);\n      }\n    }\n\n    if (message.duplex != null && message.hasOwnProperty(\"duplex\")) object.duplex = options.enums === String ? $root.SdkStreamServiceType[message.duplex] : message.duplex;\n\n    if (message.allocations && message.allocations.length) {\n      object.allocations = [];\n\n      for (var j = 0; j < message.allocations.length; ++j) object.allocations[j] = $root.SdkStreamAllocation.toObject(message.allocations[j], options);\n    }\n\n    if (message.sdpAnswer != null && message.hasOwnProperty(\"sdpAnswer\")) object.sdpAnswer = message.sdpAnswer;\n\n    if (message.tracks && message.tracks.length) {\n      object.tracks = [];\n\n      for (var j = 0; j < message.tracks.length; ++j) object.tracks[j] = $root.SdkTrackMapping.toObject(message.tracks[j], options);\n    }\n\n    if (message.compressedSdpAnswer != null && message.hasOwnProperty(\"compressedSdpAnswer\")) object.compressedSdpAnswer = options.bytes === String ? $util.base64.encode(message.compressedSdpAnswer, 0, message.compressedSdpAnswer.length) : options.bytes === Array ? Array.prototype.slice.call(message.compressedSdpAnswer) : message.compressedSdpAnswer;\n    return object;\n  };\n  /**\n   * Converts this SdkSubscribeAckFrame to JSON.\n   * @function toJSON\n   * @memberof SdkSubscribeAckFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkSubscribeAckFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkSubscribeAckFrame;\n}();\n\n$root.SdkIndexFrame = function () {\n  /**\n   * Properties of a SdkIndexFrame.\n   * @exports ISdkIndexFrame\n   * @interface ISdkIndexFrame\n   * @property {boolean|null} [atCapacity] SdkIndexFrame atCapacity\n   * @property {Array.<ISdkStreamDescriptor>|null} [sources] SdkIndexFrame sources\n   * @property {Array.<number>|null} [pausedAtSourceIds] SdkIndexFrame pausedAtSourceIds\n   * @property {number|null} [numParticipants] SdkIndexFrame numParticipants\n   */\n\n  /**\n   * Constructs a new SdkIndexFrame.\n   * @exports SdkIndexFrame\n   * @classdesc Represents a SdkIndexFrame.\n   * @implements ISdkIndexFrame\n   * @constructor\n   * @param {ISdkIndexFrame=} [properties] Properties to set\n   */\n  function SdkIndexFrame(properties) {\n    this.sources = [];\n    this.pausedAtSourceIds = [];\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkIndexFrame atCapacity.\n   * @member {boolean} atCapacity\n   * @memberof SdkIndexFrame\n   * @instance\n   */\n\n\n  SdkIndexFrame.prototype.atCapacity = false;\n  /**\n   * SdkIndexFrame sources.\n   * @member {Array.<ISdkStreamDescriptor>} sources\n   * @memberof SdkIndexFrame\n   * @instance\n   */\n\n  SdkIndexFrame.prototype.sources = $util.emptyArray;\n  /**\n   * SdkIndexFrame pausedAtSourceIds.\n   * @member {Array.<number>} pausedAtSourceIds\n   * @memberof SdkIndexFrame\n   * @instance\n   */\n\n  SdkIndexFrame.prototype.pausedAtSourceIds = $util.emptyArray;\n  /**\n   * SdkIndexFrame numParticipants.\n   * @member {number} numParticipants\n   * @memberof SdkIndexFrame\n   * @instance\n   */\n\n  SdkIndexFrame.prototype.numParticipants = 0;\n  /**\n   * Creates a new SdkIndexFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkIndexFrame\n   * @static\n   * @param {ISdkIndexFrame=} [properties] Properties to set\n   * @returns {SdkIndexFrame} SdkIndexFrame instance\n   */\n\n  SdkIndexFrame.create = function create(properties) {\n    return new SdkIndexFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkIndexFrame message. Does not implicitly {@link SdkIndexFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkIndexFrame\n   * @static\n   * @param {ISdkIndexFrame} message SdkIndexFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkIndexFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.atCapacity != null && message.hasOwnProperty(\"atCapacity\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).bool(message.atCapacity);\n    if (message.sources != null && message.sources.length) for (var i = 0; i < message.sources.length; ++i) $root.SdkStreamDescriptor.encode(message.sources[i], writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).fork()).ldelim();\n    if (message.pausedAtSourceIds != null && message.pausedAtSourceIds.length) for (var i = 0; i < message.pausedAtSourceIds.length; ++i) writer.uint32(\n    /* id 3, wireType 0 =*/\n    24).uint32(message.pausedAtSourceIds[i]);\n    if (message.numParticipants != null && message.hasOwnProperty(\"numParticipants\")) writer.uint32(\n    /* id 4, wireType 0 =*/\n    32).uint32(message.numParticipants);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkIndexFrame message, length delimited. Does not implicitly {@link SdkIndexFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkIndexFrame\n   * @static\n   * @param {ISdkIndexFrame} message SdkIndexFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkIndexFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkIndexFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkIndexFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkIndexFrame} SdkIndexFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkIndexFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkIndexFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.atCapacity = reader.bool();\n          break;\n\n        case 2:\n          if (!(message.sources && message.sources.length)) message.sources = [];\n          message.sources.push($root.SdkStreamDescriptor.decode(reader, reader.uint32()));\n          break;\n\n        case 3:\n          if (!(message.pausedAtSourceIds && message.pausedAtSourceIds.length)) message.pausedAtSourceIds = [];\n\n          if ((tag & 7) === 2) {\n            var end2 = reader.uint32() + reader.pos;\n\n            while (reader.pos < end2) message.pausedAtSourceIds.push(reader.uint32());\n          } else message.pausedAtSourceIds.push(reader.uint32());\n\n          break;\n\n        case 4:\n          message.numParticipants = reader.uint32();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkIndexFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkIndexFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkIndexFrame} SdkIndexFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkIndexFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkIndexFrame message.\n   * @function verify\n   * @memberof SdkIndexFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkIndexFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.atCapacity != null && message.hasOwnProperty(\"atCapacity\")) if (typeof message.atCapacity !== \"boolean\") return \"atCapacity: boolean expected\";\n\n    if (message.sources != null && message.hasOwnProperty(\"sources\")) {\n      if (!Array.isArray(message.sources)) return \"sources: array expected\";\n\n      for (var i = 0; i < message.sources.length; ++i) {\n        var error = $root.SdkStreamDescriptor.verify(message.sources[i]);\n        if (error) return \"sources.\" + error;\n      }\n    }\n\n    if (message.pausedAtSourceIds != null && message.hasOwnProperty(\"pausedAtSourceIds\")) {\n      if (!Array.isArray(message.pausedAtSourceIds)) return \"pausedAtSourceIds: array expected\";\n\n      for (var i = 0; i < message.pausedAtSourceIds.length; ++i) if (!$util.isInteger(message.pausedAtSourceIds[i])) return \"pausedAtSourceIds: integer[] expected\";\n    }\n\n    if (message.numParticipants != null && message.hasOwnProperty(\"numParticipants\")) if (!$util.isInteger(message.numParticipants)) return \"numParticipants: integer expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkIndexFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkIndexFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkIndexFrame} SdkIndexFrame\n   */\n\n\n  SdkIndexFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkIndexFrame) return object;\n    var message = new $root.SdkIndexFrame();\n    if (object.atCapacity != null) message.atCapacity = Boolean(object.atCapacity);\n\n    if (object.sources) {\n      if (!Array.isArray(object.sources)) throw TypeError(\".SdkIndexFrame.sources: array expected\");\n      message.sources = [];\n\n      for (var i = 0; i < object.sources.length; ++i) {\n        if (typeof object.sources[i] !== \"object\") throw TypeError(\".SdkIndexFrame.sources: object expected\");\n        message.sources[i] = $root.SdkStreamDescriptor.fromObject(object.sources[i]);\n      }\n    }\n\n    if (object.pausedAtSourceIds) {\n      if (!Array.isArray(object.pausedAtSourceIds)) throw TypeError(\".SdkIndexFrame.pausedAtSourceIds: array expected\");\n      message.pausedAtSourceIds = [];\n\n      for (var i = 0; i < object.pausedAtSourceIds.length; ++i) message.pausedAtSourceIds[i] = object.pausedAtSourceIds[i] >>> 0;\n    }\n\n    if (object.numParticipants != null) message.numParticipants = object.numParticipants >>> 0;\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkIndexFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkIndexFrame\n   * @static\n   * @param {SdkIndexFrame} message SdkIndexFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkIndexFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.arrays || options.defaults) {\n      object.sources = [];\n      object.pausedAtSourceIds = [];\n    }\n\n    if (options.defaults) {\n      object.atCapacity = false;\n      object.numParticipants = 0;\n    }\n\n    if (message.atCapacity != null && message.hasOwnProperty(\"atCapacity\")) object.atCapacity = message.atCapacity;\n\n    if (message.sources && message.sources.length) {\n      object.sources = [];\n\n      for (var j = 0; j < message.sources.length; ++j) object.sources[j] = $root.SdkStreamDescriptor.toObject(message.sources[j], options);\n    }\n\n    if (message.pausedAtSourceIds && message.pausedAtSourceIds.length) {\n      object.pausedAtSourceIds = [];\n\n      for (var j = 0; j < message.pausedAtSourceIds.length; ++j) object.pausedAtSourceIds[j] = message.pausedAtSourceIds[j];\n    }\n\n    if (message.numParticipants != null && message.hasOwnProperty(\"numParticipants\")) object.numParticipants = message.numParticipants;\n    return object;\n  };\n  /**\n   * Converts this SdkIndexFrame to JSON.\n   * @function toJSON\n   * @memberof SdkIndexFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkIndexFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkIndexFrame;\n}();\n\n$root.SdkPauseResumeFrame = function () {\n  /**\n   * Properties of a SdkPauseResumeFrame.\n   * @exports ISdkPauseResumeFrame\n   * @interface ISdkPauseResumeFrame\n   * @property {Array.<number>|null} [streamIds] SdkPauseResumeFrame streamIds\n   */\n\n  /**\n   * Constructs a new SdkPauseResumeFrame.\n   * @exports SdkPauseResumeFrame\n   * @classdesc Represents a SdkPauseResumeFrame.\n   * @implements ISdkPauseResumeFrame\n   * @constructor\n   * @param {ISdkPauseResumeFrame=} [properties] Properties to set\n   */\n  function SdkPauseResumeFrame(properties) {\n    this.streamIds = [];\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkPauseResumeFrame streamIds.\n   * @member {Array.<number>} streamIds\n   * @memberof SdkPauseResumeFrame\n   * @instance\n   */\n\n\n  SdkPauseResumeFrame.prototype.streamIds = $util.emptyArray;\n  /**\n   * Creates a new SdkPauseResumeFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkPauseResumeFrame\n   * @static\n   * @param {ISdkPauseResumeFrame=} [properties] Properties to set\n   * @returns {SdkPauseResumeFrame} SdkPauseResumeFrame instance\n   */\n\n  SdkPauseResumeFrame.create = function create(properties) {\n    return new SdkPauseResumeFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkPauseResumeFrame message. Does not implicitly {@link SdkPauseResumeFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkPauseResumeFrame\n   * @static\n   * @param {ISdkPauseResumeFrame} message SdkPauseResumeFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkPauseResumeFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.streamIds != null && message.streamIds.length) for (var i = 0; i < message.streamIds.length; ++i) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).uint32(message.streamIds[i]);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkPauseResumeFrame message, length delimited. Does not implicitly {@link SdkPauseResumeFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkPauseResumeFrame\n   * @static\n   * @param {ISdkPauseResumeFrame} message SdkPauseResumeFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkPauseResumeFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkPauseResumeFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkPauseResumeFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkPauseResumeFrame} SdkPauseResumeFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkPauseResumeFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkPauseResumeFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          if (!(message.streamIds && message.streamIds.length)) message.streamIds = [];\n\n          if ((tag & 7) === 2) {\n            var end2 = reader.uint32() + reader.pos;\n\n            while (reader.pos < end2) message.streamIds.push(reader.uint32());\n          } else message.streamIds.push(reader.uint32());\n\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkPauseResumeFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkPauseResumeFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkPauseResumeFrame} SdkPauseResumeFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkPauseResumeFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkPauseResumeFrame message.\n   * @function verify\n   * @memberof SdkPauseResumeFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkPauseResumeFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n    if (message.streamIds != null && message.hasOwnProperty(\"streamIds\")) {\n      if (!Array.isArray(message.streamIds)) return \"streamIds: array expected\";\n\n      for (var i = 0; i < message.streamIds.length; ++i) if (!$util.isInteger(message.streamIds[i])) return \"streamIds: integer[] expected\";\n    }\n\n    return null;\n  };\n  /**\n   * Creates a SdkPauseResumeFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkPauseResumeFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkPauseResumeFrame} SdkPauseResumeFrame\n   */\n\n\n  SdkPauseResumeFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkPauseResumeFrame) return object;\n    var message = new $root.SdkPauseResumeFrame();\n\n    if (object.streamIds) {\n      if (!Array.isArray(object.streamIds)) throw TypeError(\".SdkPauseResumeFrame.streamIds: array expected\");\n      message.streamIds = [];\n\n      for (var i = 0; i < object.streamIds.length; ++i) message.streamIds[i] = object.streamIds[i] >>> 0;\n    }\n\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkPauseResumeFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkPauseResumeFrame\n   * @static\n   * @param {SdkPauseResumeFrame} message SdkPauseResumeFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkPauseResumeFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n    if (options.arrays || options.defaults) object.streamIds = [];\n\n    if (message.streamIds && message.streamIds.length) {\n      object.streamIds = [];\n\n      for (var j = 0; j < message.streamIds.length; ++j) object.streamIds[j] = message.streamIds[j];\n    }\n\n    return object;\n  };\n  /**\n   * Converts this SdkPauseResumeFrame to JSON.\n   * @function toJSON\n   * @memberof SdkPauseResumeFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkPauseResumeFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkPauseResumeFrame;\n}();\n\n$root.SdkBitrateFrame = function () {\n  /**\n   * Properties of a SdkBitrateFrame.\n   * @exports ISdkBitrateFrame\n   * @interface ISdkBitrateFrame\n   * @property {Array.<ISdkBitrate>|null} [bitrates] SdkBitrateFrame bitrates\n   */\n\n  /**\n   * Constructs a new SdkBitrateFrame.\n   * @exports SdkBitrateFrame\n   * @classdesc Represents a SdkBitrateFrame.\n   * @implements ISdkBitrateFrame\n   * @constructor\n   * @param {ISdkBitrateFrame=} [properties] Properties to set\n   */\n  function SdkBitrateFrame(properties) {\n    this.bitrates = [];\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkBitrateFrame bitrates.\n   * @member {Array.<ISdkBitrate>} bitrates\n   * @memberof SdkBitrateFrame\n   * @instance\n   */\n\n\n  SdkBitrateFrame.prototype.bitrates = $util.emptyArray;\n  /**\n   * Creates a new SdkBitrateFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkBitrateFrame\n   * @static\n   * @param {ISdkBitrateFrame=} [properties] Properties to set\n   * @returns {SdkBitrateFrame} SdkBitrateFrame instance\n   */\n\n  SdkBitrateFrame.create = function create(properties) {\n    return new SdkBitrateFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkBitrateFrame message. Does not implicitly {@link SdkBitrateFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkBitrateFrame\n   * @static\n   * @param {ISdkBitrateFrame} message SdkBitrateFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkBitrateFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.bitrates != null && message.bitrates.length) for (var i = 0; i < message.bitrates.length; ++i) $root.SdkBitrate.encode(message.bitrates[i], writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).fork()).ldelim();\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkBitrateFrame message, length delimited. Does not implicitly {@link SdkBitrateFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkBitrateFrame\n   * @static\n   * @param {ISdkBitrateFrame} message SdkBitrateFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkBitrateFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkBitrateFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkBitrateFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkBitrateFrame} SdkBitrateFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkBitrateFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkBitrateFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          if (!(message.bitrates && message.bitrates.length)) message.bitrates = [];\n          message.bitrates.push($root.SdkBitrate.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkBitrateFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkBitrateFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkBitrateFrame} SdkBitrateFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkBitrateFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkBitrateFrame message.\n   * @function verify\n   * @memberof SdkBitrateFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkBitrateFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n    if (message.bitrates != null && message.hasOwnProperty(\"bitrates\")) {\n      if (!Array.isArray(message.bitrates)) return \"bitrates: array expected\";\n\n      for (var i = 0; i < message.bitrates.length; ++i) {\n        var error = $root.SdkBitrate.verify(message.bitrates[i]);\n        if (error) return \"bitrates.\" + error;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Creates a SdkBitrateFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkBitrateFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkBitrateFrame} SdkBitrateFrame\n   */\n\n\n  SdkBitrateFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkBitrateFrame) return object;\n    var message = new $root.SdkBitrateFrame();\n\n    if (object.bitrates) {\n      if (!Array.isArray(object.bitrates)) throw TypeError(\".SdkBitrateFrame.bitrates: array expected\");\n      message.bitrates = [];\n\n      for (var i = 0; i < object.bitrates.length; ++i) {\n        if (typeof object.bitrates[i] !== \"object\") throw TypeError(\".SdkBitrateFrame.bitrates: object expected\");\n        message.bitrates[i] = $root.SdkBitrate.fromObject(object.bitrates[i]);\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkBitrateFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkBitrateFrame\n   * @static\n   * @param {SdkBitrateFrame} message SdkBitrateFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkBitrateFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n    if (options.arrays || options.defaults) object.bitrates = [];\n\n    if (message.bitrates && message.bitrates.length) {\n      object.bitrates = [];\n\n      for (var j = 0; j < message.bitrates.length; ++j) object.bitrates[j] = $root.SdkBitrate.toObject(message.bitrates[j], options);\n    }\n\n    return object;\n  };\n  /**\n   * Converts this SdkBitrateFrame to JSON.\n   * @function toJSON\n   * @memberof SdkBitrateFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkBitrateFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkBitrateFrame;\n}();\n\n$root.SdkStreamDescriptor = function () {\n  /**\n   * Properties of a SdkStreamDescriptor.\n   * @exports ISdkStreamDescriptor\n   * @interface ISdkStreamDescriptor\n   * @property {number|null} [streamId] SdkStreamDescriptor streamId\n   * @property {number|null} [framerate] SdkStreamDescriptor framerate\n   * @property {number|null} [maxBitrateKbps] SdkStreamDescriptor maxBitrateKbps\n   * @property {string|null} [trackLabel] SdkStreamDescriptor trackLabel\n   * @property {number|null} [groupId] SdkStreamDescriptor groupId\n   * @property {number|null} [avgBitrateBps] SdkStreamDescriptor avgBitrateBps\n   * @property {string|null} [attendeeId] SdkStreamDescriptor attendeeId\n   * @property {SdkStreamMediaType|null} [mediaType] SdkStreamDescriptor mediaType\n   * @property {string|null} [externalUserId] SdkStreamDescriptor externalUserId\n   */\n\n  /**\n   * Constructs a new SdkStreamDescriptor.\n   * @exports SdkStreamDescriptor\n   * @classdesc Represents a SdkStreamDescriptor.\n   * @implements ISdkStreamDescriptor\n   * @constructor\n   * @param {ISdkStreamDescriptor=} [properties] Properties to set\n   */\n  function SdkStreamDescriptor(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkStreamDescriptor streamId.\n   * @member {number} streamId\n   * @memberof SdkStreamDescriptor\n   * @instance\n   */\n\n\n  SdkStreamDescriptor.prototype.streamId = 0;\n  /**\n   * SdkStreamDescriptor framerate.\n   * @member {number} framerate\n   * @memberof SdkStreamDescriptor\n   * @instance\n   */\n\n  SdkStreamDescriptor.prototype.framerate = 0;\n  /**\n   * SdkStreamDescriptor maxBitrateKbps.\n   * @member {number} maxBitrateKbps\n   * @memberof SdkStreamDescriptor\n   * @instance\n   */\n\n  SdkStreamDescriptor.prototype.maxBitrateKbps = 0;\n  /**\n   * SdkStreamDescriptor trackLabel.\n   * @member {string} trackLabel\n   * @memberof SdkStreamDescriptor\n   * @instance\n   */\n\n  SdkStreamDescriptor.prototype.trackLabel = \"\";\n  /**\n   * SdkStreamDescriptor groupId.\n   * @member {number} groupId\n   * @memberof SdkStreamDescriptor\n   * @instance\n   */\n\n  SdkStreamDescriptor.prototype.groupId = 0;\n  /**\n   * SdkStreamDescriptor avgBitrateBps.\n   * @member {number} avgBitrateBps\n   * @memberof SdkStreamDescriptor\n   * @instance\n   */\n\n  SdkStreamDescriptor.prototype.avgBitrateBps = 0;\n  /**\n   * SdkStreamDescriptor attendeeId.\n   * @member {string} attendeeId\n   * @memberof SdkStreamDescriptor\n   * @instance\n   */\n\n  SdkStreamDescriptor.prototype.attendeeId = \"\";\n  /**\n   * SdkStreamDescriptor mediaType.\n   * @member {SdkStreamMediaType} mediaType\n   * @memberof SdkStreamDescriptor\n   * @instance\n   */\n\n  SdkStreamDescriptor.prototype.mediaType = 1;\n  /**\n   * SdkStreamDescriptor externalUserId.\n   * @member {string} externalUserId\n   * @memberof SdkStreamDescriptor\n   * @instance\n   */\n\n  SdkStreamDescriptor.prototype.externalUserId = \"\";\n  /**\n   * Creates a new SdkStreamDescriptor instance using the specified properties.\n   * @function create\n   * @memberof SdkStreamDescriptor\n   * @static\n   * @param {ISdkStreamDescriptor=} [properties] Properties to set\n   * @returns {SdkStreamDescriptor} SdkStreamDescriptor instance\n   */\n\n  SdkStreamDescriptor.create = function create(properties) {\n    return new SdkStreamDescriptor(properties);\n  };\n  /**\n   * Encodes the specified SdkStreamDescriptor message. Does not implicitly {@link SdkStreamDescriptor.verify|verify} messages.\n   * @function encode\n   * @memberof SdkStreamDescriptor\n   * @static\n   * @param {ISdkStreamDescriptor} message SdkStreamDescriptor message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkStreamDescriptor.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.streamId != null && message.hasOwnProperty(\"streamId\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).uint32(message.streamId);\n    if (message.framerate != null && message.hasOwnProperty(\"framerate\")) writer.uint32(\n    /* id 2, wireType 0 =*/\n    16).uint32(message.framerate);\n    if (message.maxBitrateKbps != null && message.hasOwnProperty(\"maxBitrateKbps\")) writer.uint32(\n    /* id 3, wireType 0 =*/\n    24).uint32(message.maxBitrateKbps);\n    if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\")) writer.uint32(\n    /* id 4, wireType 2 =*/\n    34).string(message.trackLabel);\n    if (message.groupId != null && message.hasOwnProperty(\"groupId\")) writer.uint32(\n    /* id 6, wireType 0 =*/\n    48).uint32(message.groupId);\n    if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\")) writer.uint32(\n    /* id 7, wireType 0 =*/\n    56).uint32(message.avgBitrateBps);\n    if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\")) writer.uint32(\n    /* id 8, wireType 2 =*/\n    66).string(message.attendeeId);\n    if (message.mediaType != null && message.hasOwnProperty(\"mediaType\")) writer.uint32(\n    /* id 9, wireType 0 =*/\n    72).int32(message.mediaType);\n    if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\")) writer.uint32(\n    /* id 10, wireType 2 =*/\n    82).string(message.externalUserId);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkStreamDescriptor message, length delimited. Does not implicitly {@link SdkStreamDescriptor.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkStreamDescriptor\n   * @static\n   * @param {ISdkStreamDescriptor} message SdkStreamDescriptor message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkStreamDescriptor.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkStreamDescriptor message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkStreamDescriptor\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkStreamDescriptor} SdkStreamDescriptor\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkStreamDescriptor.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkStreamDescriptor();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.streamId = reader.uint32();\n          break;\n\n        case 2:\n          message.framerate = reader.uint32();\n          break;\n\n        case 3:\n          message.maxBitrateKbps = reader.uint32();\n          break;\n\n        case 4:\n          message.trackLabel = reader.string();\n          break;\n\n        case 6:\n          message.groupId = reader.uint32();\n          break;\n\n        case 7:\n          message.avgBitrateBps = reader.uint32();\n          break;\n\n        case 8:\n          message.attendeeId = reader.string();\n          break;\n\n        case 9:\n          message.mediaType = reader.int32();\n          break;\n\n        case 10:\n          message.externalUserId = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkStreamDescriptor message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkStreamDescriptor\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkStreamDescriptor} SdkStreamDescriptor\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkStreamDescriptor.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkStreamDescriptor message.\n   * @function verify\n   * @memberof SdkStreamDescriptor\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkStreamDescriptor.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.streamId != null && message.hasOwnProperty(\"streamId\")) if (!$util.isInteger(message.streamId)) return \"streamId: integer expected\";\n    if (message.framerate != null && message.hasOwnProperty(\"framerate\")) if (!$util.isInteger(message.framerate)) return \"framerate: integer expected\";\n    if (message.maxBitrateKbps != null && message.hasOwnProperty(\"maxBitrateKbps\")) if (!$util.isInteger(message.maxBitrateKbps)) return \"maxBitrateKbps: integer expected\";\n    if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\")) if (!$util.isString(message.trackLabel)) return \"trackLabel: string expected\";\n    if (message.groupId != null && message.hasOwnProperty(\"groupId\")) if (!$util.isInteger(message.groupId)) return \"groupId: integer expected\";\n    if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\")) if (!$util.isInteger(message.avgBitrateBps)) return \"avgBitrateBps: integer expected\";\n    if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\")) if (!$util.isString(message.attendeeId)) return \"attendeeId: string expected\";\n    if (message.mediaType != null && message.hasOwnProperty(\"mediaType\")) switch (message.mediaType) {\n      default:\n        return \"mediaType: enum value expected\";\n\n      case 1:\n      case 2:\n        break;\n    }\n    if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\")) if (!$util.isString(message.externalUserId)) return \"externalUserId: string expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkStreamDescriptor message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkStreamDescriptor\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkStreamDescriptor} SdkStreamDescriptor\n   */\n\n\n  SdkStreamDescriptor.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkStreamDescriptor) return object;\n    var message = new $root.SdkStreamDescriptor();\n    if (object.streamId != null) message.streamId = object.streamId >>> 0;\n    if (object.framerate != null) message.framerate = object.framerate >>> 0;\n    if (object.maxBitrateKbps != null) message.maxBitrateKbps = object.maxBitrateKbps >>> 0;\n    if (object.trackLabel != null) message.trackLabel = String(object.trackLabel);\n    if (object.groupId != null) message.groupId = object.groupId >>> 0;\n    if (object.avgBitrateBps != null) message.avgBitrateBps = object.avgBitrateBps >>> 0;\n    if (object.attendeeId != null) message.attendeeId = String(object.attendeeId);\n\n    switch (object.mediaType) {\n      case \"AUDIO\":\n      case 1:\n        message.mediaType = 1;\n        break;\n\n      case \"VIDEO\":\n      case 2:\n        message.mediaType = 2;\n        break;\n    }\n\n    if (object.externalUserId != null) message.externalUserId = String(object.externalUserId);\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkStreamDescriptor message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkStreamDescriptor\n   * @static\n   * @param {SdkStreamDescriptor} message SdkStreamDescriptor\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkStreamDescriptor.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.streamId = 0;\n      object.framerate = 0;\n      object.maxBitrateKbps = 0;\n      object.trackLabel = \"\";\n      object.groupId = 0;\n      object.avgBitrateBps = 0;\n      object.attendeeId = \"\";\n      object.mediaType = options.enums === String ? \"AUDIO\" : 1;\n      object.externalUserId = \"\";\n    }\n\n    if (message.streamId != null && message.hasOwnProperty(\"streamId\")) object.streamId = message.streamId;\n    if (message.framerate != null && message.hasOwnProperty(\"framerate\")) object.framerate = message.framerate;\n    if (message.maxBitrateKbps != null && message.hasOwnProperty(\"maxBitrateKbps\")) object.maxBitrateKbps = message.maxBitrateKbps;\n    if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\")) object.trackLabel = message.trackLabel;\n    if (message.groupId != null && message.hasOwnProperty(\"groupId\")) object.groupId = message.groupId;\n    if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\")) object.avgBitrateBps = message.avgBitrateBps;\n    if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\")) object.attendeeId = message.attendeeId;\n    if (message.mediaType != null && message.hasOwnProperty(\"mediaType\")) object.mediaType = options.enums === String ? $root.SdkStreamMediaType[message.mediaType] : message.mediaType;\n    if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\")) object.externalUserId = message.externalUserId;\n    return object;\n  };\n  /**\n   * Converts this SdkStreamDescriptor to JSON.\n   * @function toJSON\n   * @memberof SdkStreamDescriptor\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkStreamDescriptor.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkStreamDescriptor;\n}();\n\n$root.SdkStreamAllocation = function () {\n  /**\n   * Properties of a SdkStreamAllocation.\n   * @exports ISdkStreamAllocation\n   * @interface ISdkStreamAllocation\n   * @property {string|null} [trackLabel] SdkStreamAllocation trackLabel\n   * @property {number|null} [streamId] SdkStreamAllocation streamId\n   * @property {number|null} [groupId] SdkStreamAllocation groupId\n   */\n\n  /**\n   * Constructs a new SdkStreamAllocation.\n   * @exports SdkStreamAllocation\n   * @classdesc Represents a SdkStreamAllocation.\n   * @implements ISdkStreamAllocation\n   * @constructor\n   * @param {ISdkStreamAllocation=} [properties] Properties to set\n   */\n  function SdkStreamAllocation(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkStreamAllocation trackLabel.\n   * @member {string} trackLabel\n   * @memberof SdkStreamAllocation\n   * @instance\n   */\n\n\n  SdkStreamAllocation.prototype.trackLabel = \"\";\n  /**\n   * SdkStreamAllocation streamId.\n   * @member {number} streamId\n   * @memberof SdkStreamAllocation\n   * @instance\n   */\n\n  SdkStreamAllocation.prototype.streamId = 0;\n  /**\n   * SdkStreamAllocation groupId.\n   * @member {number} groupId\n   * @memberof SdkStreamAllocation\n   * @instance\n   */\n\n  SdkStreamAllocation.prototype.groupId = 0;\n  /**\n   * Creates a new SdkStreamAllocation instance using the specified properties.\n   * @function create\n   * @memberof SdkStreamAllocation\n   * @static\n   * @param {ISdkStreamAllocation=} [properties] Properties to set\n   * @returns {SdkStreamAllocation} SdkStreamAllocation instance\n   */\n\n  SdkStreamAllocation.create = function create(properties) {\n    return new SdkStreamAllocation(properties);\n  };\n  /**\n   * Encodes the specified SdkStreamAllocation message. Does not implicitly {@link SdkStreamAllocation.verify|verify} messages.\n   * @function encode\n   * @memberof SdkStreamAllocation\n   * @static\n   * @param {ISdkStreamAllocation} message SdkStreamAllocation message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkStreamAllocation.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\")) writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).string(message.trackLabel);\n    if (message.streamId != null && message.hasOwnProperty(\"streamId\")) writer.uint32(\n    /* id 2, wireType 0 =*/\n    16).uint32(message.streamId);\n    if (message.groupId != null && message.hasOwnProperty(\"groupId\")) writer.uint32(\n    /* id 3, wireType 0 =*/\n    24).uint32(message.groupId);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkStreamAllocation message, length delimited. Does not implicitly {@link SdkStreamAllocation.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkStreamAllocation\n   * @static\n   * @param {ISdkStreamAllocation} message SdkStreamAllocation message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkStreamAllocation.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkStreamAllocation message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkStreamAllocation\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkStreamAllocation} SdkStreamAllocation\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkStreamAllocation.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkStreamAllocation();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.trackLabel = reader.string();\n          break;\n\n        case 2:\n          message.streamId = reader.uint32();\n          break;\n\n        case 3:\n          message.groupId = reader.uint32();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkStreamAllocation message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkStreamAllocation\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkStreamAllocation} SdkStreamAllocation\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkStreamAllocation.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkStreamAllocation message.\n   * @function verify\n   * @memberof SdkStreamAllocation\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkStreamAllocation.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\")) if (!$util.isString(message.trackLabel)) return \"trackLabel: string expected\";\n    if (message.streamId != null && message.hasOwnProperty(\"streamId\")) if (!$util.isInteger(message.streamId)) return \"streamId: integer expected\";\n    if (message.groupId != null && message.hasOwnProperty(\"groupId\")) if (!$util.isInteger(message.groupId)) return \"groupId: integer expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkStreamAllocation message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkStreamAllocation\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkStreamAllocation} SdkStreamAllocation\n   */\n\n\n  SdkStreamAllocation.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkStreamAllocation) return object;\n    var message = new $root.SdkStreamAllocation();\n    if (object.trackLabel != null) message.trackLabel = String(object.trackLabel);\n    if (object.streamId != null) message.streamId = object.streamId >>> 0;\n    if (object.groupId != null) message.groupId = object.groupId >>> 0;\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkStreamAllocation message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkStreamAllocation\n   * @static\n   * @param {SdkStreamAllocation} message SdkStreamAllocation\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkStreamAllocation.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.trackLabel = \"\";\n      object.streamId = 0;\n      object.groupId = 0;\n    }\n\n    if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\")) object.trackLabel = message.trackLabel;\n    if (message.streamId != null && message.hasOwnProperty(\"streamId\")) object.streamId = message.streamId;\n    if (message.groupId != null && message.hasOwnProperty(\"groupId\")) object.groupId = message.groupId;\n    return object;\n  };\n  /**\n   * Converts this SdkStreamAllocation to JSON.\n   * @function toJSON\n   * @memberof SdkStreamAllocation\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkStreamAllocation.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkStreamAllocation;\n}();\n\n$root.SdkTrackMapping = function () {\n  /**\n   * Properties of a SdkTrackMapping.\n   * @exports ISdkTrackMapping\n   * @interface ISdkTrackMapping\n   * @property {number|null} [streamId] SdkTrackMapping streamId\n   * @property {number|null} [ssrc] SdkTrackMapping ssrc\n   * @property {string|null} [trackLabel] SdkTrackMapping trackLabel\n   */\n\n  /**\n   * Constructs a new SdkTrackMapping.\n   * @exports SdkTrackMapping\n   * @classdesc Represents a SdkTrackMapping.\n   * @implements ISdkTrackMapping\n   * @constructor\n   * @param {ISdkTrackMapping=} [properties] Properties to set\n   */\n  function SdkTrackMapping(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkTrackMapping streamId.\n   * @member {number} streamId\n   * @memberof SdkTrackMapping\n   * @instance\n   */\n\n\n  SdkTrackMapping.prototype.streamId = 0;\n  /**\n   * SdkTrackMapping ssrc.\n   * @member {number} ssrc\n   * @memberof SdkTrackMapping\n   * @instance\n   */\n\n  SdkTrackMapping.prototype.ssrc = 0;\n  /**\n   * SdkTrackMapping trackLabel.\n   * @member {string} trackLabel\n   * @memberof SdkTrackMapping\n   * @instance\n   */\n\n  SdkTrackMapping.prototype.trackLabel = \"\";\n  /**\n   * Creates a new SdkTrackMapping instance using the specified properties.\n   * @function create\n   * @memberof SdkTrackMapping\n   * @static\n   * @param {ISdkTrackMapping=} [properties] Properties to set\n   * @returns {SdkTrackMapping} SdkTrackMapping instance\n   */\n\n  SdkTrackMapping.create = function create(properties) {\n    return new SdkTrackMapping(properties);\n  };\n  /**\n   * Encodes the specified SdkTrackMapping message. Does not implicitly {@link SdkTrackMapping.verify|verify} messages.\n   * @function encode\n   * @memberof SdkTrackMapping\n   * @static\n   * @param {ISdkTrackMapping} message SdkTrackMapping message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkTrackMapping.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.streamId != null && message.hasOwnProperty(\"streamId\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).uint32(message.streamId);\n    if (message.ssrc != null && message.hasOwnProperty(\"ssrc\")) writer.uint32(\n    /* id 2, wireType 0 =*/\n    16).uint32(message.ssrc);\n    if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\")) writer.uint32(\n    /* id 3, wireType 2 =*/\n    26).string(message.trackLabel);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkTrackMapping message, length delimited. Does not implicitly {@link SdkTrackMapping.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkTrackMapping\n   * @static\n   * @param {ISdkTrackMapping} message SdkTrackMapping message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkTrackMapping.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkTrackMapping message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkTrackMapping\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkTrackMapping} SdkTrackMapping\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkTrackMapping.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkTrackMapping();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.streamId = reader.uint32();\n          break;\n\n        case 2:\n          message.ssrc = reader.uint32();\n          break;\n\n        case 3:\n          message.trackLabel = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkTrackMapping message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkTrackMapping\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkTrackMapping} SdkTrackMapping\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkTrackMapping.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkTrackMapping message.\n   * @function verify\n   * @memberof SdkTrackMapping\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkTrackMapping.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.streamId != null && message.hasOwnProperty(\"streamId\")) if (!$util.isInteger(message.streamId)) return \"streamId: integer expected\";\n    if (message.ssrc != null && message.hasOwnProperty(\"ssrc\")) if (!$util.isInteger(message.ssrc)) return \"ssrc: integer expected\";\n    if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\")) if (!$util.isString(message.trackLabel)) return \"trackLabel: string expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkTrackMapping message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkTrackMapping\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkTrackMapping} SdkTrackMapping\n   */\n\n\n  SdkTrackMapping.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkTrackMapping) return object;\n    var message = new $root.SdkTrackMapping();\n    if (object.streamId != null) message.streamId = object.streamId >>> 0;\n    if (object.ssrc != null) message.ssrc = object.ssrc >>> 0;\n    if (object.trackLabel != null) message.trackLabel = String(object.trackLabel);\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkTrackMapping message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkTrackMapping\n   * @static\n   * @param {SdkTrackMapping} message SdkTrackMapping\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkTrackMapping.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.streamId = 0;\n      object.ssrc = 0;\n      object.trackLabel = \"\";\n    }\n\n    if (message.streamId != null && message.hasOwnProperty(\"streamId\")) object.streamId = message.streamId;\n    if (message.ssrc != null && message.hasOwnProperty(\"ssrc\")) object.ssrc = message.ssrc;\n    if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\")) object.trackLabel = message.trackLabel;\n    return object;\n  };\n  /**\n   * Converts this SdkTrackMapping to JSON.\n   * @function toJSON\n   * @memberof SdkTrackMapping\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkTrackMapping.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkTrackMapping;\n}();\n\n$root.SdkBitrate = function () {\n  /**\n   * Properties of a SdkBitrate.\n   * @exports ISdkBitrate\n   * @interface ISdkBitrate\n   * @property {number|null} [sourceStreamId] SdkBitrate sourceStreamId\n   * @property {number|null} [avgBitrateBps] SdkBitrate avgBitrateBps\n   */\n\n  /**\n   * Constructs a new SdkBitrate.\n   * @exports SdkBitrate\n   * @classdesc Represents a SdkBitrate.\n   * @implements ISdkBitrate\n   * @constructor\n   * @param {ISdkBitrate=} [properties] Properties to set\n   */\n  function SdkBitrate(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkBitrate sourceStreamId.\n   * @member {number} sourceStreamId\n   * @memberof SdkBitrate\n   * @instance\n   */\n\n\n  SdkBitrate.prototype.sourceStreamId = 0;\n  /**\n   * SdkBitrate avgBitrateBps.\n   * @member {number} avgBitrateBps\n   * @memberof SdkBitrate\n   * @instance\n   */\n\n  SdkBitrate.prototype.avgBitrateBps = 0;\n  /**\n   * Creates a new SdkBitrate instance using the specified properties.\n   * @function create\n   * @memberof SdkBitrate\n   * @static\n   * @param {ISdkBitrate=} [properties] Properties to set\n   * @returns {SdkBitrate} SdkBitrate instance\n   */\n\n  SdkBitrate.create = function create(properties) {\n    return new SdkBitrate(properties);\n  };\n  /**\n   * Encodes the specified SdkBitrate message. Does not implicitly {@link SdkBitrate.verify|verify} messages.\n   * @function encode\n   * @memberof SdkBitrate\n   * @static\n   * @param {ISdkBitrate} message SdkBitrate message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkBitrate.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.sourceStreamId != null && message.hasOwnProperty(\"sourceStreamId\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).uint32(message.sourceStreamId);\n    if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\")) writer.uint32(\n    /* id 2, wireType 0 =*/\n    16).uint32(message.avgBitrateBps);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkBitrate message, length delimited. Does not implicitly {@link SdkBitrate.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkBitrate\n   * @static\n   * @param {ISdkBitrate} message SdkBitrate message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkBitrate.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkBitrate message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkBitrate\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkBitrate} SdkBitrate\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkBitrate.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkBitrate();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.sourceStreamId = reader.uint32();\n          break;\n\n        case 2:\n          message.avgBitrateBps = reader.uint32();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkBitrate message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkBitrate\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkBitrate} SdkBitrate\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkBitrate.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkBitrate message.\n   * @function verify\n   * @memberof SdkBitrate\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkBitrate.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.sourceStreamId != null && message.hasOwnProperty(\"sourceStreamId\")) if (!$util.isInteger(message.sourceStreamId)) return \"sourceStreamId: integer expected\";\n    if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\")) if (!$util.isInteger(message.avgBitrateBps)) return \"avgBitrateBps: integer expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkBitrate message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkBitrate\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkBitrate} SdkBitrate\n   */\n\n\n  SdkBitrate.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkBitrate) return object;\n    var message = new $root.SdkBitrate();\n    if (object.sourceStreamId != null) message.sourceStreamId = object.sourceStreamId >>> 0;\n    if (object.avgBitrateBps != null) message.avgBitrateBps = object.avgBitrateBps >>> 0;\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkBitrate message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkBitrate\n   * @static\n   * @param {SdkBitrate} message SdkBitrate\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkBitrate.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.sourceStreamId = 0;\n      object.avgBitrateBps = 0;\n    }\n\n    if (message.sourceStreamId != null && message.hasOwnProperty(\"sourceStreamId\")) object.sourceStreamId = message.sourceStreamId;\n    if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\")) object.avgBitrateBps = message.avgBitrateBps;\n    return object;\n  };\n  /**\n   * Converts this SdkBitrate to JSON.\n   * @function toJSON\n   * @memberof SdkBitrate\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkBitrate.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkBitrate;\n}();\n\n$root.SdkAudioControlFrame = function () {\n  /**\n   * Properties of a SdkAudioControlFrame.\n   * @exports ISdkAudioControlFrame\n   * @interface ISdkAudioControlFrame\n   * @property {boolean|null} [muted] SdkAudioControlFrame muted\n   */\n\n  /**\n   * Constructs a new SdkAudioControlFrame.\n   * @exports SdkAudioControlFrame\n   * @classdesc Represents a SdkAudioControlFrame.\n   * @implements ISdkAudioControlFrame\n   * @constructor\n   * @param {ISdkAudioControlFrame=} [properties] Properties to set\n   */\n  function SdkAudioControlFrame(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkAudioControlFrame muted.\n   * @member {boolean} muted\n   * @memberof SdkAudioControlFrame\n   * @instance\n   */\n\n\n  SdkAudioControlFrame.prototype.muted = false;\n  /**\n   * Creates a new SdkAudioControlFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkAudioControlFrame\n   * @static\n   * @param {ISdkAudioControlFrame=} [properties] Properties to set\n   * @returns {SdkAudioControlFrame} SdkAudioControlFrame instance\n   */\n\n  SdkAudioControlFrame.create = function create(properties) {\n    return new SdkAudioControlFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkAudioControlFrame message. Does not implicitly {@link SdkAudioControlFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkAudioControlFrame\n   * @static\n   * @param {ISdkAudioControlFrame} message SdkAudioControlFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkAudioControlFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.muted != null && message.hasOwnProperty(\"muted\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).bool(message.muted);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkAudioControlFrame message, length delimited. Does not implicitly {@link SdkAudioControlFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkAudioControlFrame\n   * @static\n   * @param {ISdkAudioControlFrame} message SdkAudioControlFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkAudioControlFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkAudioControlFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkAudioControlFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkAudioControlFrame} SdkAudioControlFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkAudioControlFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkAudioControlFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.muted = reader.bool();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkAudioControlFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkAudioControlFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkAudioControlFrame} SdkAudioControlFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkAudioControlFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkAudioControlFrame message.\n   * @function verify\n   * @memberof SdkAudioControlFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkAudioControlFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.muted != null && message.hasOwnProperty(\"muted\")) if (typeof message.muted !== \"boolean\") return \"muted: boolean expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkAudioControlFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkAudioControlFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkAudioControlFrame} SdkAudioControlFrame\n   */\n\n\n  SdkAudioControlFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkAudioControlFrame) return object;\n    var message = new $root.SdkAudioControlFrame();\n    if (object.muted != null) message.muted = Boolean(object.muted);\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkAudioControlFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkAudioControlFrame\n   * @static\n   * @param {SdkAudioControlFrame} message SdkAudioControlFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkAudioControlFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n    if (options.defaults) object.muted = false;\n    if (message.muted != null && message.hasOwnProperty(\"muted\")) object.muted = message.muted;\n    return object;\n  };\n  /**\n   * Converts this SdkAudioControlFrame to JSON.\n   * @function toJSON\n   * @memberof SdkAudioControlFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkAudioControlFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkAudioControlFrame;\n}();\n\n$root.SdkAudioMetadataFrame = function () {\n  /**\n   * Properties of a SdkAudioMetadataFrame.\n   * @exports ISdkAudioMetadataFrame\n   * @interface ISdkAudioMetadataFrame\n   * @property {Array.<ISdkAudioAttendeeState>|null} [attendeeStates] SdkAudioMetadataFrame attendeeStates\n   */\n\n  /**\n   * Constructs a new SdkAudioMetadataFrame.\n   * @exports SdkAudioMetadataFrame\n   * @classdesc Represents a SdkAudioMetadataFrame.\n   * @implements ISdkAudioMetadataFrame\n   * @constructor\n   * @param {ISdkAudioMetadataFrame=} [properties] Properties to set\n   */\n  function SdkAudioMetadataFrame(properties) {\n    this.attendeeStates = [];\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkAudioMetadataFrame attendeeStates.\n   * @member {Array.<ISdkAudioAttendeeState>} attendeeStates\n   * @memberof SdkAudioMetadataFrame\n   * @instance\n   */\n\n\n  SdkAudioMetadataFrame.prototype.attendeeStates = $util.emptyArray;\n  /**\n   * Creates a new SdkAudioMetadataFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkAudioMetadataFrame\n   * @static\n   * @param {ISdkAudioMetadataFrame=} [properties] Properties to set\n   * @returns {SdkAudioMetadataFrame} SdkAudioMetadataFrame instance\n   */\n\n  SdkAudioMetadataFrame.create = function create(properties) {\n    return new SdkAudioMetadataFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkAudioMetadataFrame message. Does not implicitly {@link SdkAudioMetadataFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkAudioMetadataFrame\n   * @static\n   * @param {ISdkAudioMetadataFrame} message SdkAudioMetadataFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkAudioMetadataFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.attendeeStates != null && message.attendeeStates.length) for (var i = 0; i < message.attendeeStates.length; ++i) $root.SdkAudioAttendeeState.encode(message.attendeeStates[i], writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).fork()).ldelim();\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkAudioMetadataFrame message, length delimited. Does not implicitly {@link SdkAudioMetadataFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkAudioMetadataFrame\n   * @static\n   * @param {ISdkAudioMetadataFrame} message SdkAudioMetadataFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkAudioMetadataFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkAudioMetadataFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkAudioMetadataFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkAudioMetadataFrame} SdkAudioMetadataFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkAudioMetadataFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkAudioMetadataFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          if (!(message.attendeeStates && message.attendeeStates.length)) message.attendeeStates = [];\n          message.attendeeStates.push($root.SdkAudioAttendeeState.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkAudioMetadataFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkAudioMetadataFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkAudioMetadataFrame} SdkAudioMetadataFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkAudioMetadataFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkAudioMetadataFrame message.\n   * @function verify\n   * @memberof SdkAudioMetadataFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkAudioMetadataFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n    if (message.attendeeStates != null && message.hasOwnProperty(\"attendeeStates\")) {\n      if (!Array.isArray(message.attendeeStates)) return \"attendeeStates: array expected\";\n\n      for (var i = 0; i < message.attendeeStates.length; ++i) {\n        var error = $root.SdkAudioAttendeeState.verify(message.attendeeStates[i]);\n        if (error) return \"attendeeStates.\" + error;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Creates a SdkAudioMetadataFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkAudioMetadataFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkAudioMetadataFrame} SdkAudioMetadataFrame\n   */\n\n\n  SdkAudioMetadataFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkAudioMetadataFrame) return object;\n    var message = new $root.SdkAudioMetadataFrame();\n\n    if (object.attendeeStates) {\n      if (!Array.isArray(object.attendeeStates)) throw TypeError(\".SdkAudioMetadataFrame.attendeeStates: array expected\");\n      message.attendeeStates = [];\n\n      for (var i = 0; i < object.attendeeStates.length; ++i) {\n        if (typeof object.attendeeStates[i] !== \"object\") throw TypeError(\".SdkAudioMetadataFrame.attendeeStates: object expected\");\n        message.attendeeStates[i] = $root.SdkAudioAttendeeState.fromObject(object.attendeeStates[i]);\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkAudioMetadataFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkAudioMetadataFrame\n   * @static\n   * @param {SdkAudioMetadataFrame} message SdkAudioMetadataFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkAudioMetadataFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n    if (options.arrays || options.defaults) object.attendeeStates = [];\n\n    if (message.attendeeStates && message.attendeeStates.length) {\n      object.attendeeStates = [];\n\n      for (var j = 0; j < message.attendeeStates.length; ++j) object.attendeeStates[j] = $root.SdkAudioAttendeeState.toObject(message.attendeeStates[j], options);\n    }\n\n    return object;\n  };\n  /**\n   * Converts this SdkAudioMetadataFrame to JSON.\n   * @function toJSON\n   * @memberof SdkAudioMetadataFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkAudioMetadataFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkAudioMetadataFrame;\n}();\n\n$root.SdkAudioAttendeeState = function () {\n  /**\n   * Properties of a SdkAudioAttendeeState.\n   * @exports ISdkAudioAttendeeState\n   * @interface ISdkAudioAttendeeState\n   * @property {number|null} [audioStreamId] SdkAudioAttendeeState audioStreamId\n   * @property {number|null} [volume] SdkAudioAttendeeState volume\n   * @property {boolean|null} [muted] SdkAudioAttendeeState muted\n   * @property {number|null} [signalStrength] SdkAudioAttendeeState signalStrength\n   */\n\n  /**\n   * Constructs a new SdkAudioAttendeeState.\n   * @exports SdkAudioAttendeeState\n   * @classdesc Represents a SdkAudioAttendeeState.\n   * @implements ISdkAudioAttendeeState\n   * @constructor\n   * @param {ISdkAudioAttendeeState=} [properties] Properties to set\n   */\n  function SdkAudioAttendeeState(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkAudioAttendeeState audioStreamId.\n   * @member {number} audioStreamId\n   * @memberof SdkAudioAttendeeState\n   * @instance\n   */\n\n\n  SdkAudioAttendeeState.prototype.audioStreamId = 0;\n  /**\n   * SdkAudioAttendeeState volume.\n   * @member {number} volume\n   * @memberof SdkAudioAttendeeState\n   * @instance\n   */\n\n  SdkAudioAttendeeState.prototype.volume = 0;\n  /**\n   * SdkAudioAttendeeState muted.\n   * @member {boolean} muted\n   * @memberof SdkAudioAttendeeState\n   * @instance\n   */\n\n  SdkAudioAttendeeState.prototype.muted = false;\n  /**\n   * SdkAudioAttendeeState signalStrength.\n   * @member {number} signalStrength\n   * @memberof SdkAudioAttendeeState\n   * @instance\n   */\n\n  SdkAudioAttendeeState.prototype.signalStrength = 0;\n  /**\n   * Creates a new SdkAudioAttendeeState instance using the specified properties.\n   * @function create\n   * @memberof SdkAudioAttendeeState\n   * @static\n   * @param {ISdkAudioAttendeeState=} [properties] Properties to set\n   * @returns {SdkAudioAttendeeState} SdkAudioAttendeeState instance\n   */\n\n  SdkAudioAttendeeState.create = function create(properties) {\n    return new SdkAudioAttendeeState(properties);\n  };\n  /**\n   * Encodes the specified SdkAudioAttendeeState message. Does not implicitly {@link SdkAudioAttendeeState.verify|verify} messages.\n   * @function encode\n   * @memberof SdkAudioAttendeeState\n   * @static\n   * @param {ISdkAudioAttendeeState} message SdkAudioAttendeeState message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkAudioAttendeeState.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).uint32(message.audioStreamId);\n    if (message.volume != null && message.hasOwnProperty(\"volume\")) writer.uint32(\n    /* id 2, wireType 0 =*/\n    16).uint32(message.volume);\n    if (message.muted != null && message.hasOwnProperty(\"muted\")) writer.uint32(\n    /* id 3, wireType 0 =*/\n    24).bool(message.muted);\n    if (message.signalStrength != null && message.hasOwnProperty(\"signalStrength\")) writer.uint32(\n    /* id 4, wireType 0 =*/\n    32).uint32(message.signalStrength);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkAudioAttendeeState message, length delimited. Does not implicitly {@link SdkAudioAttendeeState.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkAudioAttendeeState\n   * @static\n   * @param {ISdkAudioAttendeeState} message SdkAudioAttendeeState message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkAudioAttendeeState.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkAudioAttendeeState message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkAudioAttendeeState\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkAudioAttendeeState} SdkAudioAttendeeState\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkAudioAttendeeState.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkAudioAttendeeState();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.audioStreamId = reader.uint32();\n          break;\n\n        case 2:\n          message.volume = reader.uint32();\n          break;\n\n        case 3:\n          message.muted = reader.bool();\n          break;\n\n        case 4:\n          message.signalStrength = reader.uint32();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkAudioAttendeeState message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkAudioAttendeeState\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkAudioAttendeeState} SdkAudioAttendeeState\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkAudioAttendeeState.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkAudioAttendeeState message.\n   * @function verify\n   * @memberof SdkAudioAttendeeState\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkAudioAttendeeState.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\")) if (!$util.isInteger(message.audioStreamId)) return \"audioStreamId: integer expected\";\n    if (message.volume != null && message.hasOwnProperty(\"volume\")) if (!$util.isInteger(message.volume)) return \"volume: integer expected\";\n    if (message.muted != null && message.hasOwnProperty(\"muted\")) if (typeof message.muted !== \"boolean\") return \"muted: boolean expected\";\n    if (message.signalStrength != null && message.hasOwnProperty(\"signalStrength\")) if (!$util.isInteger(message.signalStrength)) return \"signalStrength: integer expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkAudioAttendeeState message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkAudioAttendeeState\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkAudioAttendeeState} SdkAudioAttendeeState\n   */\n\n\n  SdkAudioAttendeeState.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkAudioAttendeeState) return object;\n    var message = new $root.SdkAudioAttendeeState();\n    if (object.audioStreamId != null) message.audioStreamId = object.audioStreamId >>> 0;\n    if (object.volume != null) message.volume = object.volume >>> 0;\n    if (object.muted != null) message.muted = Boolean(object.muted);\n    if (object.signalStrength != null) message.signalStrength = object.signalStrength >>> 0;\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkAudioAttendeeState message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkAudioAttendeeState\n   * @static\n   * @param {SdkAudioAttendeeState} message SdkAudioAttendeeState\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkAudioAttendeeState.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.audioStreamId = 0;\n      object.volume = 0;\n      object.muted = false;\n      object.signalStrength = 0;\n    }\n\n    if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\")) object.audioStreamId = message.audioStreamId;\n    if (message.volume != null && message.hasOwnProperty(\"volume\")) object.volume = message.volume;\n    if (message.muted != null && message.hasOwnProperty(\"muted\")) object.muted = message.muted;\n    if (message.signalStrength != null && message.hasOwnProperty(\"signalStrength\")) object.signalStrength = message.signalStrength;\n    return object;\n  };\n  /**\n   * Converts this SdkAudioAttendeeState to JSON.\n   * @function toJSON\n   * @memberof SdkAudioAttendeeState\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkAudioAttendeeState.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkAudioAttendeeState;\n}();\n\n$root.SdkAudioStreamIdInfoFrame = function () {\n  /**\n   * Properties of a SdkAudioStreamIdInfoFrame.\n   * @exports ISdkAudioStreamIdInfoFrame\n   * @interface ISdkAudioStreamIdInfoFrame\n   * @property {Array.<ISdkAudioStreamIdInfo>|null} [streams] SdkAudioStreamIdInfoFrame streams\n   */\n\n  /**\n   * Constructs a new SdkAudioStreamIdInfoFrame.\n   * @exports SdkAudioStreamIdInfoFrame\n   * @classdesc Represents a SdkAudioStreamIdInfoFrame.\n   * @implements ISdkAudioStreamIdInfoFrame\n   * @constructor\n   * @param {ISdkAudioStreamIdInfoFrame=} [properties] Properties to set\n   */\n  function SdkAudioStreamIdInfoFrame(properties) {\n    this.streams = [];\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkAudioStreamIdInfoFrame streams.\n   * @member {Array.<ISdkAudioStreamIdInfo>} streams\n   * @memberof SdkAudioStreamIdInfoFrame\n   * @instance\n   */\n\n\n  SdkAudioStreamIdInfoFrame.prototype.streams = $util.emptyArray;\n  /**\n   * Creates a new SdkAudioStreamIdInfoFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkAudioStreamIdInfoFrame\n   * @static\n   * @param {ISdkAudioStreamIdInfoFrame=} [properties] Properties to set\n   * @returns {SdkAudioStreamIdInfoFrame} SdkAudioStreamIdInfoFrame instance\n   */\n\n  SdkAudioStreamIdInfoFrame.create = function create(properties) {\n    return new SdkAudioStreamIdInfoFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkAudioStreamIdInfoFrame message. Does not implicitly {@link SdkAudioStreamIdInfoFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkAudioStreamIdInfoFrame\n   * @static\n   * @param {ISdkAudioStreamIdInfoFrame} message SdkAudioStreamIdInfoFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkAudioStreamIdInfoFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.streams != null && message.streams.length) for (var i = 0; i < message.streams.length; ++i) $root.SdkAudioStreamIdInfo.encode(message.streams[i], writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).fork()).ldelim();\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkAudioStreamIdInfoFrame message, length delimited. Does not implicitly {@link SdkAudioStreamIdInfoFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkAudioStreamIdInfoFrame\n   * @static\n   * @param {ISdkAudioStreamIdInfoFrame} message SdkAudioStreamIdInfoFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkAudioStreamIdInfoFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkAudioStreamIdInfoFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkAudioStreamIdInfoFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkAudioStreamIdInfoFrame} SdkAudioStreamIdInfoFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkAudioStreamIdInfoFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkAudioStreamIdInfoFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          if (!(message.streams && message.streams.length)) message.streams = [];\n          message.streams.push($root.SdkAudioStreamIdInfo.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkAudioStreamIdInfoFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkAudioStreamIdInfoFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkAudioStreamIdInfoFrame} SdkAudioStreamIdInfoFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkAudioStreamIdInfoFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkAudioStreamIdInfoFrame message.\n   * @function verify\n   * @memberof SdkAudioStreamIdInfoFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkAudioStreamIdInfoFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n    if (message.streams != null && message.hasOwnProperty(\"streams\")) {\n      if (!Array.isArray(message.streams)) return \"streams: array expected\";\n\n      for (var i = 0; i < message.streams.length; ++i) {\n        var error = $root.SdkAudioStreamIdInfo.verify(message.streams[i]);\n        if (error) return \"streams.\" + error;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Creates a SdkAudioStreamIdInfoFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkAudioStreamIdInfoFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkAudioStreamIdInfoFrame} SdkAudioStreamIdInfoFrame\n   */\n\n\n  SdkAudioStreamIdInfoFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkAudioStreamIdInfoFrame) return object;\n    var message = new $root.SdkAudioStreamIdInfoFrame();\n\n    if (object.streams) {\n      if (!Array.isArray(object.streams)) throw TypeError(\".SdkAudioStreamIdInfoFrame.streams: array expected\");\n      message.streams = [];\n\n      for (var i = 0; i < object.streams.length; ++i) {\n        if (typeof object.streams[i] !== \"object\") throw TypeError(\".SdkAudioStreamIdInfoFrame.streams: object expected\");\n        message.streams[i] = $root.SdkAudioStreamIdInfo.fromObject(object.streams[i]);\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkAudioStreamIdInfoFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkAudioStreamIdInfoFrame\n   * @static\n   * @param {SdkAudioStreamIdInfoFrame} message SdkAudioStreamIdInfoFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkAudioStreamIdInfoFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n    if (options.arrays || options.defaults) object.streams = [];\n\n    if (message.streams && message.streams.length) {\n      object.streams = [];\n\n      for (var j = 0; j < message.streams.length; ++j) object.streams[j] = $root.SdkAudioStreamIdInfo.toObject(message.streams[j], options);\n    }\n\n    return object;\n  };\n  /**\n   * Converts this SdkAudioStreamIdInfoFrame to JSON.\n   * @function toJSON\n   * @memberof SdkAudioStreamIdInfoFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkAudioStreamIdInfoFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkAudioStreamIdInfoFrame;\n}();\n\n$root.SdkAudioStreamIdInfo = function () {\n  /**\n   * Properties of a SdkAudioStreamIdInfo.\n   * @exports ISdkAudioStreamIdInfo\n   * @interface ISdkAudioStreamIdInfo\n   * @property {number|null} [audioStreamId] SdkAudioStreamIdInfo audioStreamId\n   * @property {string|null} [attendeeId] SdkAudioStreamIdInfo attendeeId\n   * @property {boolean|null} [muted] SdkAudioStreamIdInfo muted\n   * @property {string|null} [externalUserId] SdkAudioStreamIdInfo externalUserId\n   * @property {boolean|null} [dropped] SdkAudioStreamIdInfo dropped\n   */\n\n  /**\n   * Constructs a new SdkAudioStreamIdInfo.\n   * @exports SdkAudioStreamIdInfo\n   * @classdesc Represents a SdkAudioStreamIdInfo.\n   * @implements ISdkAudioStreamIdInfo\n   * @constructor\n   * @param {ISdkAudioStreamIdInfo=} [properties] Properties to set\n   */\n  function SdkAudioStreamIdInfo(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkAudioStreamIdInfo audioStreamId.\n   * @member {number} audioStreamId\n   * @memberof SdkAudioStreamIdInfo\n   * @instance\n   */\n\n\n  SdkAudioStreamIdInfo.prototype.audioStreamId = 0;\n  /**\n   * SdkAudioStreamIdInfo attendeeId.\n   * @member {string} attendeeId\n   * @memberof SdkAudioStreamIdInfo\n   * @instance\n   */\n\n  SdkAudioStreamIdInfo.prototype.attendeeId = \"\";\n  /**\n   * SdkAudioStreamIdInfo muted.\n   * @member {boolean} muted\n   * @memberof SdkAudioStreamIdInfo\n   * @instance\n   */\n\n  SdkAudioStreamIdInfo.prototype.muted = false;\n  /**\n   * SdkAudioStreamIdInfo externalUserId.\n   * @member {string} externalUserId\n   * @memberof SdkAudioStreamIdInfo\n   * @instance\n   */\n\n  SdkAudioStreamIdInfo.prototype.externalUserId = \"\";\n  /**\n   * SdkAudioStreamIdInfo dropped.\n   * @member {boolean} dropped\n   * @memberof SdkAudioStreamIdInfo\n   * @instance\n   */\n\n  SdkAudioStreamIdInfo.prototype.dropped = false;\n  /**\n   * Creates a new SdkAudioStreamIdInfo instance using the specified properties.\n   * @function create\n   * @memberof SdkAudioStreamIdInfo\n   * @static\n   * @param {ISdkAudioStreamIdInfo=} [properties] Properties to set\n   * @returns {SdkAudioStreamIdInfo} SdkAudioStreamIdInfo instance\n   */\n\n  SdkAudioStreamIdInfo.create = function create(properties) {\n    return new SdkAudioStreamIdInfo(properties);\n  };\n  /**\n   * Encodes the specified SdkAudioStreamIdInfo message. Does not implicitly {@link SdkAudioStreamIdInfo.verify|verify} messages.\n   * @function encode\n   * @memberof SdkAudioStreamIdInfo\n   * @static\n   * @param {ISdkAudioStreamIdInfo} message SdkAudioStreamIdInfo message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkAudioStreamIdInfo.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).uint32(message.audioStreamId);\n    if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\")) writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).string(message.attendeeId);\n    if (message.muted != null && message.hasOwnProperty(\"muted\")) writer.uint32(\n    /* id 3, wireType 0 =*/\n    24).bool(message.muted);\n    if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\")) writer.uint32(\n    /* id 4, wireType 2 =*/\n    34).string(message.externalUserId);\n    if (message.dropped != null && message.hasOwnProperty(\"dropped\")) writer.uint32(\n    /* id 5, wireType 0 =*/\n    40).bool(message.dropped);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkAudioStreamIdInfo message, length delimited. Does not implicitly {@link SdkAudioStreamIdInfo.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkAudioStreamIdInfo\n   * @static\n   * @param {ISdkAudioStreamIdInfo} message SdkAudioStreamIdInfo message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkAudioStreamIdInfo.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkAudioStreamIdInfo message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkAudioStreamIdInfo\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkAudioStreamIdInfo} SdkAudioStreamIdInfo\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkAudioStreamIdInfo.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkAudioStreamIdInfo();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.audioStreamId = reader.uint32();\n          break;\n\n        case 2:\n          message.attendeeId = reader.string();\n          break;\n\n        case 3:\n          message.muted = reader.bool();\n          break;\n\n        case 4:\n          message.externalUserId = reader.string();\n          break;\n\n        case 5:\n          message.dropped = reader.bool();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkAudioStreamIdInfo message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkAudioStreamIdInfo\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkAudioStreamIdInfo} SdkAudioStreamIdInfo\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkAudioStreamIdInfo.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkAudioStreamIdInfo message.\n   * @function verify\n   * @memberof SdkAudioStreamIdInfo\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkAudioStreamIdInfo.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\")) if (!$util.isInteger(message.audioStreamId)) return \"audioStreamId: integer expected\";\n    if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\")) if (!$util.isString(message.attendeeId)) return \"attendeeId: string expected\";\n    if (message.muted != null && message.hasOwnProperty(\"muted\")) if (typeof message.muted !== \"boolean\") return \"muted: boolean expected\";\n    if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\")) if (!$util.isString(message.externalUserId)) return \"externalUserId: string expected\";\n    if (message.dropped != null && message.hasOwnProperty(\"dropped\")) if (typeof message.dropped !== \"boolean\") return \"dropped: boolean expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkAudioStreamIdInfo message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkAudioStreamIdInfo\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkAudioStreamIdInfo} SdkAudioStreamIdInfo\n   */\n\n\n  SdkAudioStreamIdInfo.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkAudioStreamIdInfo) return object;\n    var message = new $root.SdkAudioStreamIdInfo();\n    if (object.audioStreamId != null) message.audioStreamId = object.audioStreamId >>> 0;\n    if (object.attendeeId != null) message.attendeeId = String(object.attendeeId);\n    if (object.muted != null) message.muted = Boolean(object.muted);\n    if (object.externalUserId != null) message.externalUserId = String(object.externalUserId);\n    if (object.dropped != null) message.dropped = Boolean(object.dropped);\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkAudioStreamIdInfo message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkAudioStreamIdInfo\n   * @static\n   * @param {SdkAudioStreamIdInfo} message SdkAudioStreamIdInfo\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkAudioStreamIdInfo.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.audioStreamId = 0;\n      object.attendeeId = \"\";\n      object.muted = false;\n      object.externalUserId = \"\";\n      object.dropped = false;\n    }\n\n    if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\")) object.audioStreamId = message.audioStreamId;\n    if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\")) object.attendeeId = message.attendeeId;\n    if (message.muted != null && message.hasOwnProperty(\"muted\")) object.muted = message.muted;\n    if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\")) object.externalUserId = message.externalUserId;\n    if (message.dropped != null && message.hasOwnProperty(\"dropped\")) object.dropped = message.dropped;\n    return object;\n  };\n  /**\n   * Converts this SdkAudioStreamIdInfo to JSON.\n   * @function toJSON\n   * @memberof SdkAudioStreamIdInfo\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkAudioStreamIdInfo.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkAudioStreamIdInfo;\n}();\n/**\n * SdkPingPongType enum.\n * @exports SdkPingPongType\n * @enum {string}\n * @property {number} PING=1 PING value\n * @property {number} PONG=2 PONG value\n */\n\n\n$root.SdkPingPongType = function () {\n  var valuesById = {},\n      values = Object.create(valuesById);\n  values[valuesById[1] = \"PING\"] = 1;\n  values[valuesById[2] = \"PONG\"] = 2;\n  return values;\n}();\n\n$root.SdkPingPongFrame = function () {\n  /**\n   * Properties of a SdkPingPongFrame.\n   * @exports ISdkPingPongFrame\n   * @interface ISdkPingPongFrame\n   * @property {SdkPingPongType} type SdkPingPongFrame type\n   * @property {number} pingId SdkPingPongFrame pingId\n   */\n\n  /**\n   * Constructs a new SdkPingPongFrame.\n   * @exports SdkPingPongFrame\n   * @classdesc Represents a SdkPingPongFrame.\n   * @implements ISdkPingPongFrame\n   * @constructor\n   * @param {ISdkPingPongFrame=} [properties] Properties to set\n   */\n  function SdkPingPongFrame(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkPingPongFrame type.\n   * @member {SdkPingPongType} type\n   * @memberof SdkPingPongFrame\n   * @instance\n   */\n\n\n  SdkPingPongFrame.prototype.type = 1;\n  /**\n   * SdkPingPongFrame pingId.\n   * @member {number} pingId\n   * @memberof SdkPingPongFrame\n   * @instance\n   */\n\n  SdkPingPongFrame.prototype.pingId = 0;\n  /**\n   * Creates a new SdkPingPongFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkPingPongFrame\n   * @static\n   * @param {ISdkPingPongFrame=} [properties] Properties to set\n   * @returns {SdkPingPongFrame} SdkPingPongFrame instance\n   */\n\n  SdkPingPongFrame.create = function create(properties) {\n    return new SdkPingPongFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkPingPongFrame message. Does not implicitly {@link SdkPingPongFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkPingPongFrame\n   * @static\n   * @param {ISdkPingPongFrame} message SdkPingPongFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkPingPongFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).int32(message.type);\n    writer.uint32(\n    /* id 2, wireType 0 =*/\n    16).uint32(message.pingId);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkPingPongFrame message, length delimited. Does not implicitly {@link SdkPingPongFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkPingPongFrame\n   * @static\n   * @param {ISdkPingPongFrame} message SdkPingPongFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkPingPongFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkPingPongFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkPingPongFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkPingPongFrame} SdkPingPongFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkPingPongFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkPingPongFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.int32();\n          break;\n\n        case 2:\n          message.pingId = reader.uint32();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    if (!message.hasOwnProperty(\"type\")) throw $util.ProtocolError(\"missing required 'type'\", {\n      instance: message\n    });\n    if (!message.hasOwnProperty(\"pingId\")) throw $util.ProtocolError(\"missing required 'pingId'\", {\n      instance: message\n    });\n    return message;\n  };\n  /**\n   * Decodes a SdkPingPongFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkPingPongFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkPingPongFrame} SdkPingPongFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkPingPongFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkPingPongFrame message.\n   * @function verify\n   * @memberof SdkPingPongFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkPingPongFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n    switch (message.type) {\n      default:\n        return \"type: enum value expected\";\n\n      case 1:\n      case 2:\n        break;\n    }\n\n    if (!$util.isInteger(message.pingId)) return \"pingId: integer expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkPingPongFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkPingPongFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkPingPongFrame} SdkPingPongFrame\n   */\n\n\n  SdkPingPongFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkPingPongFrame) return object;\n    var message = new $root.SdkPingPongFrame();\n\n    switch (object.type) {\n      case \"PING\":\n      case 1:\n        message.type = 1;\n        break;\n\n      case \"PONG\":\n      case 2:\n        message.type = 2;\n        break;\n    }\n\n    if (object.pingId != null) message.pingId = object.pingId >>> 0;\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkPingPongFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkPingPongFrame\n   * @static\n   * @param {SdkPingPongFrame} message SdkPingPongFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkPingPongFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.type = options.enums === String ? \"PING\" : 1;\n      object.pingId = 0;\n    }\n\n    if (message.type != null && message.hasOwnProperty(\"type\")) object.type = options.enums === String ? $root.SdkPingPongType[message.type] : message.type;\n    if (message.pingId != null && message.hasOwnProperty(\"pingId\")) object.pingId = message.pingId;\n    return object;\n  };\n  /**\n   * Converts this SdkPingPongFrame to JSON.\n   * @function toJSON\n   * @memberof SdkPingPongFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkPingPongFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkPingPongFrame;\n}();\n\n$root.SdkAudioStatusFrame = function () {\n  /**\n   * Properties of a SdkAudioStatusFrame.\n   * @exports ISdkAudioStatusFrame\n   * @interface ISdkAudioStatusFrame\n   * @property {number|null} [audioStatus] SdkAudioStatusFrame audioStatus\n   */\n\n  /**\n   * Constructs a new SdkAudioStatusFrame.\n   * @exports SdkAudioStatusFrame\n   * @classdesc Represents a SdkAudioStatusFrame.\n   * @implements ISdkAudioStatusFrame\n   * @constructor\n   * @param {ISdkAudioStatusFrame=} [properties] Properties to set\n   */\n  function SdkAudioStatusFrame(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkAudioStatusFrame audioStatus.\n   * @member {number} audioStatus\n   * @memberof SdkAudioStatusFrame\n   * @instance\n   */\n\n\n  SdkAudioStatusFrame.prototype.audioStatus = 0;\n  /**\n   * Creates a new SdkAudioStatusFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkAudioStatusFrame\n   * @static\n   * @param {ISdkAudioStatusFrame=} [properties] Properties to set\n   * @returns {SdkAudioStatusFrame} SdkAudioStatusFrame instance\n   */\n\n  SdkAudioStatusFrame.create = function create(properties) {\n    return new SdkAudioStatusFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkAudioStatusFrame message. Does not implicitly {@link SdkAudioStatusFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkAudioStatusFrame\n   * @static\n   * @param {ISdkAudioStatusFrame} message SdkAudioStatusFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkAudioStatusFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).uint32(message.audioStatus);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkAudioStatusFrame message, length delimited. Does not implicitly {@link SdkAudioStatusFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkAudioStatusFrame\n   * @static\n   * @param {ISdkAudioStatusFrame} message SdkAudioStatusFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkAudioStatusFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkAudioStatusFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkAudioStatusFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkAudioStatusFrame} SdkAudioStatusFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkAudioStatusFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkAudioStatusFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.audioStatus = reader.uint32();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkAudioStatusFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkAudioStatusFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkAudioStatusFrame} SdkAudioStatusFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkAudioStatusFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkAudioStatusFrame message.\n   * @function verify\n   * @memberof SdkAudioStatusFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkAudioStatusFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\")) if (!$util.isInteger(message.audioStatus)) return \"audioStatus: integer expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkAudioStatusFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkAudioStatusFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkAudioStatusFrame} SdkAudioStatusFrame\n   */\n\n\n  SdkAudioStatusFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkAudioStatusFrame) return object;\n    var message = new $root.SdkAudioStatusFrame();\n    if (object.audioStatus != null) message.audioStatus = object.audioStatus >>> 0;\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkAudioStatusFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkAudioStatusFrame\n   * @static\n   * @param {SdkAudioStatusFrame} message SdkAudioStatusFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkAudioStatusFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n    if (options.defaults) object.audioStatus = 0;\n    if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\")) object.audioStatus = message.audioStatus;\n    return object;\n  };\n  /**\n   * Converts this SdkAudioStatusFrame to JSON.\n   * @function toJSON\n   * @memberof SdkAudioStatusFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkAudioStatusFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkAudioStatusFrame;\n}();\n\n$root.SdkMetric = function () {\n  /**\n   * Properties of a SdkMetric.\n   * @exports ISdkMetric\n   * @interface ISdkMetric\n   * @property {SdkMetric.Type|null} [type] SdkMetric type\n   * @property {number|null} [value] SdkMetric value\n   */\n\n  /**\n   * Constructs a new SdkMetric.\n   * @exports SdkMetric\n   * @classdesc Represents a SdkMetric.\n   * @implements ISdkMetric\n   * @constructor\n   * @param {ISdkMetric=} [properties] Properties to set\n   */\n  function SdkMetric(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkMetric type.\n   * @member {SdkMetric.Type} type\n   * @memberof SdkMetric\n   * @instance\n   */\n\n\n  SdkMetric.prototype.type = 1;\n  /**\n   * SdkMetric value.\n   * @member {number} value\n   * @memberof SdkMetric\n   * @instance\n   */\n\n  SdkMetric.prototype.value = 0;\n  /**\n   * Creates a new SdkMetric instance using the specified properties.\n   * @function create\n   * @memberof SdkMetric\n   * @static\n   * @param {ISdkMetric=} [properties] Properties to set\n   * @returns {SdkMetric} SdkMetric instance\n   */\n\n  SdkMetric.create = function create(properties) {\n    return new SdkMetric(properties);\n  };\n  /**\n   * Encodes the specified SdkMetric message. Does not implicitly {@link SdkMetric.verify|verify} messages.\n   * @function encode\n   * @memberof SdkMetric\n   * @static\n   * @param {ISdkMetric} message SdkMetric message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkMetric.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.type != null && message.hasOwnProperty(\"type\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).int32(message.type);\n    if (message.value != null && message.hasOwnProperty(\"value\")) writer.uint32(\n    /* id 2, wireType 1 =*/\n    17).double(message.value);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkMetric message, length delimited. Does not implicitly {@link SdkMetric.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkMetric\n   * @static\n   * @param {ISdkMetric} message SdkMetric message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkMetric.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkMetric message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkMetric\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkMetric} SdkMetric\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkMetric.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkMetric();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.int32();\n          break;\n\n        case 2:\n          message.value = reader.double();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkMetric message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkMetric\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkMetric} SdkMetric\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkMetric.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkMetric message.\n   * @function verify\n   * @memberof SdkMetric\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkMetric.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.type != null && message.hasOwnProperty(\"type\")) switch (message.type) {\n      default:\n        return \"type: enum value expected\";\n\n      case 1:\n      case 2:\n      case 3:\n      case 4:\n      case 5:\n      case 6:\n      case 7:\n      case 8:\n      case 9:\n      case 10:\n      case 11:\n      case 12:\n      case 13:\n      case 14:\n      case 15:\n      case 16:\n      case 17:\n      case 18:\n      case 19:\n      case 20:\n      case 21:\n      case 22:\n      case 23:\n      case 24:\n      case 25:\n      case 26:\n      case 27:\n      case 28:\n      case 29:\n      case 30:\n      case 31:\n      case 32:\n      case 33:\n      case 34:\n      case 35:\n      case 36:\n      case 37:\n      case 38:\n      case 39:\n      case 40:\n      case 41:\n      case 42:\n      case 43:\n      case 44:\n      case 45:\n      case 46:\n      case 47:\n      case 48:\n      case 49:\n      case 64:\n      case 66:\n      case 69:\n      case 72:\n      case 86:\n      case 87:\n        break;\n    }\n    if (message.value != null && message.hasOwnProperty(\"value\")) if (typeof message.value !== \"number\") return \"value: number expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkMetric message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkMetric\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkMetric} SdkMetric\n   */\n\n\n  SdkMetric.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkMetric) return object;\n    var message = new $root.SdkMetric();\n\n    switch (object.type) {\n      case \"VIDEO_ACTUAL_ENCODER_BITRATE\":\n      case 1:\n        message.type = 1;\n        break;\n\n      case \"VIDEO_AVAILABLE_SEND_BANDWIDTH\":\n      case 2:\n        message.type = 2;\n        break;\n\n      case \"VIDEO_RETRANSMIT_BITRATE\":\n      case 3:\n        message.type = 3;\n        break;\n\n      case \"VIDEO_AVAILABLE_RECEIVE_BANDWIDTH\":\n      case 4:\n        message.type = 4;\n        break;\n\n      case \"VIDEO_TARGET_ENCODER_BITRATE\":\n      case 5:\n        message.type = 5;\n        break;\n\n      case \"VIDEO_BUCKET_DELAY_MS\":\n      case 6:\n        message.type = 6;\n        break;\n\n      case \"STUN_RTT_MS\":\n      case 7:\n        message.type = 7;\n        break;\n\n      case \"SOCKET_DISCARDED_PPS\":\n      case 8:\n        message.type = 8;\n        break;\n\n      case \"RTC_MIC_JITTER_MS\":\n      case 9:\n        message.type = 9;\n        break;\n\n      case \"RTC_MIC_PPS\":\n      case 10:\n        message.type = 10;\n        break;\n\n      case \"RTC_MIC_FRACTION_PACKET_LOST_PERCENT\":\n      case 11:\n        message.type = 11;\n        break;\n\n      case \"RTC_MIC_BITRATE\":\n      case 12:\n        message.type = 12;\n        break;\n\n      case \"RTC_MIC_RTT_MS\":\n      case 13:\n        message.type = 13;\n        break;\n\n      case \"RTC_SPK_PPS\":\n      case 14:\n        message.type = 14;\n        break;\n\n      case \"RTC_SPK_FRACTION_PACKET_LOST_PERCENT\":\n      case 15:\n        message.type = 15;\n        break;\n\n      case \"RTC_SPK_JITTER_MS\":\n      case 16:\n        message.type = 16;\n        break;\n\n      case \"RTC_SPK_FRACTION_DECODER_LOSS_PERCENT\":\n      case 17:\n        message.type = 17;\n        break;\n\n      case \"RTC_SPK_BITRATE\":\n      case 18:\n        message.type = 18;\n        break;\n\n      case \"RTC_SPK_CURRENT_DELAY_MS\":\n      case 19:\n        message.type = 19;\n        break;\n\n      case \"RTC_SPK_JITTER_BUFFER_MS\":\n      case 20:\n        message.type = 20;\n        break;\n\n      case \"VIDEO_SENT_RTT_MS\":\n      case 21:\n        message.type = 21;\n        break;\n\n      case \"VIDEO_ENCODE_USAGE_PERCENT\":\n      case 22:\n        message.type = 22;\n        break;\n\n      case \"VIDEO_NACKS_RECEIVED\":\n      case 23:\n        message.type = 23;\n        break;\n\n      case \"VIDEO_PLIS_RECEIVED\":\n      case 24:\n        message.type = 24;\n        break;\n\n      case \"VIDEO_AVERAGE_ENCODE_MS\":\n      case 25:\n        message.type = 25;\n        break;\n\n      case \"VIDEO_INPUT_FPS\":\n      case 26:\n        message.type = 26;\n        break;\n\n      case \"VIDEO_ENCODE_FPS\":\n      case 27:\n        message.type = 27;\n        break;\n\n      case \"VIDEO_SENT_FPS\":\n      case 28:\n        message.type = 28;\n        break;\n\n      case \"VIDEO_FIRS_RECEIVED\":\n      case 29:\n        message.type = 29;\n        break;\n\n      case \"VIDEO_SENT_PPS\":\n      case 30:\n        message.type = 30;\n        break;\n\n      case \"VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT\":\n      case 31:\n        message.type = 31;\n        break;\n\n      case \"VIDEO_SENT_BITRATE\":\n      case 32:\n        message.type = 32;\n        break;\n\n      case \"VIDEO_DROPPED_FPS\":\n      case 33:\n        message.type = 33;\n        break;\n\n      case \"VIDEO_TARGET_DELAY_MS\":\n      case 34:\n        message.type = 34;\n        break;\n\n      case \"VIDEO_DECODE_MS\":\n      case 35:\n        message.type = 35;\n        break;\n\n      case \"VIDEO_OUTPUT_FPS\":\n      case 36:\n        message.type = 36;\n        break;\n\n      case \"VIDEO_RECEIVED_PPS\":\n      case 37:\n        message.type = 37;\n        break;\n\n      case \"VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT\":\n      case 38:\n        message.type = 38;\n        break;\n\n      case \"VIDEO_RENDER_DELAY_MS\":\n      case 39:\n        message.type = 39;\n        break;\n\n      case \"VIDEO_RECEIVED_FPS\":\n      case 40:\n        message.type = 40;\n        break;\n\n      case \"VIDEO_DECODE_FPS\":\n      case 41:\n        message.type = 41;\n        break;\n\n      case \"VIDEO_NACKS_SENT\":\n      case 42:\n        message.type = 42;\n        break;\n\n      case \"VIDEO_FIRS_SENT\":\n      case 43:\n        message.type = 43;\n        break;\n\n      case \"VIDEO_RECEIVED_BITRATE\":\n      case 44:\n        message.type = 44;\n        break;\n\n      case \"VIDEO_CURRENT_DELAY_MS\":\n      case 45:\n        message.type = 45;\n        break;\n\n      case \"VIDEO_JITTER_BUFFER_MS\":\n      case 46:\n        message.type = 46;\n        break;\n\n      case \"VIDEO_DISCARDED_PPS\":\n      case 47:\n        message.type = 47;\n        break;\n\n      case \"VIDEO_PLIS_SENT\":\n      case 48:\n        message.type = 48;\n        break;\n\n      case \"VIDEO_RECEIVED_JITTER_MS\":\n      case 49:\n        message.type = 49;\n        break;\n\n      case \"VIDEO_ENCODE_HEIGHT\":\n      case 64:\n        message.type = 64;\n        break;\n\n      case \"VIDEO_SENT_QP_SUM\":\n      case 66:\n        message.type = 66;\n        break;\n\n      case \"VIDEO_DECODE_HEIGHT\":\n      case 69:\n        message.type = 69;\n        break;\n\n      case \"VIDEO_RECEIVED_QP_SUM\":\n      case 72:\n        message.type = 72;\n        break;\n\n      case \"VIDEO_ENCODE_WIDTH\":\n      case 86:\n        message.type = 86;\n        break;\n\n      case \"VIDEO_DECODE_WIDTH\":\n      case 87:\n        message.type = 87;\n        break;\n    }\n\n    if (object.value != null) message.value = Number(object.value);\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkMetric message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkMetric\n   * @static\n   * @param {SdkMetric} message SdkMetric\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkMetric.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.type = options.enums === String ? \"VIDEO_ACTUAL_ENCODER_BITRATE\" : 1;\n      object.value = 0;\n    }\n\n    if (message.type != null && message.hasOwnProperty(\"type\")) object.type = options.enums === String ? $root.SdkMetric.Type[message.type] : message.type;\n    if (message.value != null && message.hasOwnProperty(\"value\")) object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;\n    return object;\n  };\n  /**\n   * Converts this SdkMetric to JSON.\n   * @function toJSON\n   * @memberof SdkMetric\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkMetric.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n  /**\n   * Type enum.\n   * @name SdkMetric.Type\n   * @enum {string}\n   * @property {number} VIDEO_ACTUAL_ENCODER_BITRATE=1 VIDEO_ACTUAL_ENCODER_BITRATE value\n   * @property {number} VIDEO_AVAILABLE_SEND_BANDWIDTH=2 VIDEO_AVAILABLE_SEND_BANDWIDTH value\n   * @property {number} VIDEO_RETRANSMIT_BITRATE=3 VIDEO_RETRANSMIT_BITRATE value\n   * @property {number} VIDEO_AVAILABLE_RECEIVE_BANDWIDTH=4 VIDEO_AVAILABLE_RECEIVE_BANDWIDTH value\n   * @property {number} VIDEO_TARGET_ENCODER_BITRATE=5 VIDEO_TARGET_ENCODER_BITRATE value\n   * @property {number} VIDEO_BUCKET_DELAY_MS=6 VIDEO_BUCKET_DELAY_MS value\n   * @property {number} STUN_RTT_MS=7 STUN_RTT_MS value\n   * @property {number} SOCKET_DISCARDED_PPS=8 SOCKET_DISCARDED_PPS value\n   * @property {number} RTC_MIC_JITTER_MS=9 RTC_MIC_JITTER_MS value\n   * @property {number} RTC_MIC_PPS=10 RTC_MIC_PPS value\n   * @property {number} RTC_MIC_FRACTION_PACKET_LOST_PERCENT=11 RTC_MIC_FRACTION_PACKET_LOST_PERCENT value\n   * @property {number} RTC_MIC_BITRATE=12 RTC_MIC_BITRATE value\n   * @property {number} RTC_MIC_RTT_MS=13 RTC_MIC_RTT_MS value\n   * @property {number} RTC_SPK_PPS=14 RTC_SPK_PPS value\n   * @property {number} RTC_SPK_FRACTION_PACKET_LOST_PERCENT=15 RTC_SPK_FRACTION_PACKET_LOST_PERCENT value\n   * @property {number} RTC_SPK_JITTER_MS=16 RTC_SPK_JITTER_MS value\n   * @property {number} RTC_SPK_FRACTION_DECODER_LOSS_PERCENT=17 RTC_SPK_FRACTION_DECODER_LOSS_PERCENT value\n   * @property {number} RTC_SPK_BITRATE=18 RTC_SPK_BITRATE value\n   * @property {number} RTC_SPK_CURRENT_DELAY_MS=19 RTC_SPK_CURRENT_DELAY_MS value\n   * @property {number} RTC_SPK_JITTER_BUFFER_MS=20 RTC_SPK_JITTER_BUFFER_MS value\n   * @property {number} VIDEO_SENT_RTT_MS=21 VIDEO_SENT_RTT_MS value\n   * @property {number} VIDEO_ENCODE_USAGE_PERCENT=22 VIDEO_ENCODE_USAGE_PERCENT value\n   * @property {number} VIDEO_NACKS_RECEIVED=23 VIDEO_NACKS_RECEIVED value\n   * @property {number} VIDEO_PLIS_RECEIVED=24 VIDEO_PLIS_RECEIVED value\n   * @property {number} VIDEO_AVERAGE_ENCODE_MS=25 VIDEO_AVERAGE_ENCODE_MS value\n   * @property {number} VIDEO_INPUT_FPS=26 VIDEO_INPUT_FPS value\n   * @property {number} VIDEO_ENCODE_FPS=27 VIDEO_ENCODE_FPS value\n   * @property {number} VIDEO_SENT_FPS=28 VIDEO_SENT_FPS value\n   * @property {number} VIDEO_FIRS_RECEIVED=29 VIDEO_FIRS_RECEIVED value\n   * @property {number} VIDEO_SENT_PPS=30 VIDEO_SENT_PPS value\n   * @property {number} VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT=31 VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT value\n   * @property {number} VIDEO_SENT_BITRATE=32 VIDEO_SENT_BITRATE value\n   * @property {number} VIDEO_DROPPED_FPS=33 VIDEO_DROPPED_FPS value\n   * @property {number} VIDEO_TARGET_DELAY_MS=34 VIDEO_TARGET_DELAY_MS value\n   * @property {number} VIDEO_DECODE_MS=35 VIDEO_DECODE_MS value\n   * @property {number} VIDEO_OUTPUT_FPS=36 VIDEO_OUTPUT_FPS value\n   * @property {number} VIDEO_RECEIVED_PPS=37 VIDEO_RECEIVED_PPS value\n   * @property {number} VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT=38 VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT value\n   * @property {number} VIDEO_RENDER_DELAY_MS=39 VIDEO_RENDER_DELAY_MS value\n   * @property {number} VIDEO_RECEIVED_FPS=40 VIDEO_RECEIVED_FPS value\n   * @property {number} VIDEO_DECODE_FPS=41 VIDEO_DECODE_FPS value\n   * @property {number} VIDEO_NACKS_SENT=42 VIDEO_NACKS_SENT value\n   * @property {number} VIDEO_FIRS_SENT=43 VIDEO_FIRS_SENT value\n   * @property {number} VIDEO_RECEIVED_BITRATE=44 VIDEO_RECEIVED_BITRATE value\n   * @property {number} VIDEO_CURRENT_DELAY_MS=45 VIDEO_CURRENT_DELAY_MS value\n   * @property {number} VIDEO_JITTER_BUFFER_MS=46 VIDEO_JITTER_BUFFER_MS value\n   * @property {number} VIDEO_DISCARDED_PPS=47 VIDEO_DISCARDED_PPS value\n   * @property {number} VIDEO_PLIS_SENT=48 VIDEO_PLIS_SENT value\n   * @property {number} VIDEO_RECEIVED_JITTER_MS=49 VIDEO_RECEIVED_JITTER_MS value\n   * @property {number} VIDEO_ENCODE_HEIGHT=64 VIDEO_ENCODE_HEIGHT value\n   * @property {number} VIDEO_SENT_QP_SUM=66 VIDEO_SENT_QP_SUM value\n   * @property {number} VIDEO_DECODE_HEIGHT=69 VIDEO_DECODE_HEIGHT value\n   * @property {number} VIDEO_RECEIVED_QP_SUM=72 VIDEO_RECEIVED_QP_SUM value\n   * @property {number} VIDEO_ENCODE_WIDTH=86 VIDEO_ENCODE_WIDTH value\n   * @property {number} VIDEO_DECODE_WIDTH=87 VIDEO_DECODE_WIDTH value\n   */\n\n\n  SdkMetric.Type = function () {\n    var valuesById = {},\n        values = Object.create(valuesById);\n    values[valuesById[1] = \"VIDEO_ACTUAL_ENCODER_BITRATE\"] = 1;\n    values[valuesById[2] = \"VIDEO_AVAILABLE_SEND_BANDWIDTH\"] = 2;\n    values[valuesById[3] = \"VIDEO_RETRANSMIT_BITRATE\"] = 3;\n    values[valuesById[4] = \"VIDEO_AVAILABLE_RECEIVE_BANDWIDTH\"] = 4;\n    values[valuesById[5] = \"VIDEO_TARGET_ENCODER_BITRATE\"] = 5;\n    values[valuesById[6] = \"VIDEO_BUCKET_DELAY_MS\"] = 6;\n    values[valuesById[7] = \"STUN_RTT_MS\"] = 7;\n    values[valuesById[8] = \"SOCKET_DISCARDED_PPS\"] = 8;\n    values[valuesById[9] = \"RTC_MIC_JITTER_MS\"] = 9;\n    values[valuesById[10] = \"RTC_MIC_PPS\"] = 10;\n    values[valuesById[11] = \"RTC_MIC_FRACTION_PACKET_LOST_PERCENT\"] = 11;\n    values[valuesById[12] = \"RTC_MIC_BITRATE\"] = 12;\n    values[valuesById[13] = \"RTC_MIC_RTT_MS\"] = 13;\n    values[valuesById[14] = \"RTC_SPK_PPS\"] = 14;\n    values[valuesById[15] = \"RTC_SPK_FRACTION_PACKET_LOST_PERCENT\"] = 15;\n    values[valuesById[16] = \"RTC_SPK_JITTER_MS\"] = 16;\n    values[valuesById[17] = \"RTC_SPK_FRACTION_DECODER_LOSS_PERCENT\"] = 17;\n    values[valuesById[18] = \"RTC_SPK_BITRATE\"] = 18;\n    values[valuesById[19] = \"RTC_SPK_CURRENT_DELAY_MS\"] = 19;\n    values[valuesById[20] = \"RTC_SPK_JITTER_BUFFER_MS\"] = 20;\n    values[valuesById[21] = \"VIDEO_SENT_RTT_MS\"] = 21;\n    values[valuesById[22] = \"VIDEO_ENCODE_USAGE_PERCENT\"] = 22;\n    values[valuesById[23] = \"VIDEO_NACKS_RECEIVED\"] = 23;\n    values[valuesById[24] = \"VIDEO_PLIS_RECEIVED\"] = 24;\n    values[valuesById[25] = \"VIDEO_AVERAGE_ENCODE_MS\"] = 25;\n    values[valuesById[26] = \"VIDEO_INPUT_FPS\"] = 26;\n    values[valuesById[27] = \"VIDEO_ENCODE_FPS\"] = 27;\n    values[valuesById[28] = \"VIDEO_SENT_FPS\"] = 28;\n    values[valuesById[29] = \"VIDEO_FIRS_RECEIVED\"] = 29;\n    values[valuesById[30] = \"VIDEO_SENT_PPS\"] = 30;\n    values[valuesById[31] = \"VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT\"] = 31;\n    values[valuesById[32] = \"VIDEO_SENT_BITRATE\"] = 32;\n    values[valuesById[33] = \"VIDEO_DROPPED_FPS\"] = 33;\n    values[valuesById[34] = \"VIDEO_TARGET_DELAY_MS\"] = 34;\n    values[valuesById[35] = \"VIDEO_DECODE_MS\"] = 35;\n    values[valuesById[36] = \"VIDEO_OUTPUT_FPS\"] = 36;\n    values[valuesById[37] = \"VIDEO_RECEIVED_PPS\"] = 37;\n    values[valuesById[38] = \"VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT\"] = 38;\n    values[valuesById[39] = \"VIDEO_RENDER_DELAY_MS\"] = 39;\n    values[valuesById[40] = \"VIDEO_RECEIVED_FPS\"] = 40;\n    values[valuesById[41] = \"VIDEO_DECODE_FPS\"] = 41;\n    values[valuesById[42] = \"VIDEO_NACKS_SENT\"] = 42;\n    values[valuesById[43] = \"VIDEO_FIRS_SENT\"] = 43;\n    values[valuesById[44] = \"VIDEO_RECEIVED_BITRATE\"] = 44;\n    values[valuesById[45] = \"VIDEO_CURRENT_DELAY_MS\"] = 45;\n    values[valuesById[46] = \"VIDEO_JITTER_BUFFER_MS\"] = 46;\n    values[valuesById[47] = \"VIDEO_DISCARDED_PPS\"] = 47;\n    values[valuesById[48] = \"VIDEO_PLIS_SENT\"] = 48;\n    values[valuesById[49] = \"VIDEO_RECEIVED_JITTER_MS\"] = 49;\n    values[valuesById[64] = \"VIDEO_ENCODE_HEIGHT\"] = 64;\n    values[valuesById[66] = \"VIDEO_SENT_QP_SUM\"] = 66;\n    values[valuesById[69] = \"VIDEO_DECODE_HEIGHT\"] = 69;\n    values[valuesById[72] = \"VIDEO_RECEIVED_QP_SUM\"] = 72;\n    values[valuesById[86] = \"VIDEO_ENCODE_WIDTH\"] = 86;\n    values[valuesById[87] = \"VIDEO_DECODE_WIDTH\"] = 87;\n    return values;\n  }();\n\n  return SdkMetric;\n}();\n\n$root.SdkStreamMetricFrame = function () {\n  /**\n   * Properties of a SdkStreamMetricFrame.\n   * @exports ISdkStreamMetricFrame\n   * @interface ISdkStreamMetricFrame\n   * @property {number|null} [streamId] SdkStreamMetricFrame streamId\n   * @property {number|null} [groupId] SdkStreamMetricFrame groupId\n   * @property {Array.<ISdkMetric>|null} [metrics] SdkStreamMetricFrame metrics\n   */\n\n  /**\n   * Constructs a new SdkStreamMetricFrame.\n   * @exports SdkStreamMetricFrame\n   * @classdesc Represents a SdkStreamMetricFrame.\n   * @implements ISdkStreamMetricFrame\n   * @constructor\n   * @param {ISdkStreamMetricFrame=} [properties] Properties to set\n   */\n  function SdkStreamMetricFrame(properties) {\n    this.metrics = [];\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkStreamMetricFrame streamId.\n   * @member {number} streamId\n   * @memberof SdkStreamMetricFrame\n   * @instance\n   */\n\n\n  SdkStreamMetricFrame.prototype.streamId = 0;\n  /**\n   * SdkStreamMetricFrame groupId.\n   * @member {number} groupId\n   * @memberof SdkStreamMetricFrame\n   * @instance\n   */\n\n  SdkStreamMetricFrame.prototype.groupId = 0;\n  /**\n   * SdkStreamMetricFrame metrics.\n   * @member {Array.<ISdkMetric>} metrics\n   * @memberof SdkStreamMetricFrame\n   * @instance\n   */\n\n  SdkStreamMetricFrame.prototype.metrics = $util.emptyArray;\n  /**\n   * Creates a new SdkStreamMetricFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkStreamMetricFrame\n   * @static\n   * @param {ISdkStreamMetricFrame=} [properties] Properties to set\n   * @returns {SdkStreamMetricFrame} SdkStreamMetricFrame instance\n   */\n\n  SdkStreamMetricFrame.create = function create(properties) {\n    return new SdkStreamMetricFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkStreamMetricFrame message. Does not implicitly {@link SdkStreamMetricFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkStreamMetricFrame\n   * @static\n   * @param {ISdkStreamMetricFrame} message SdkStreamMetricFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkStreamMetricFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.streamId != null && message.hasOwnProperty(\"streamId\")) writer.uint32(\n    /* id 3, wireType 0 =*/\n    24).uint32(message.streamId);\n    if (message.groupId != null && message.hasOwnProperty(\"groupId\")) writer.uint32(\n    /* id 4, wireType 0 =*/\n    32).uint32(message.groupId);\n    if (message.metrics != null && message.metrics.length) for (var i = 0; i < message.metrics.length; ++i) $root.SdkMetric.encode(message.metrics[i], writer.uint32(\n    /* id 5, wireType 2 =*/\n    42).fork()).ldelim();\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkStreamMetricFrame message, length delimited. Does not implicitly {@link SdkStreamMetricFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkStreamMetricFrame\n   * @static\n   * @param {ISdkStreamMetricFrame} message SdkStreamMetricFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkStreamMetricFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkStreamMetricFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkStreamMetricFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkStreamMetricFrame} SdkStreamMetricFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkStreamMetricFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkStreamMetricFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 3:\n          message.streamId = reader.uint32();\n          break;\n\n        case 4:\n          message.groupId = reader.uint32();\n          break;\n\n        case 5:\n          if (!(message.metrics && message.metrics.length)) message.metrics = [];\n          message.metrics.push($root.SdkMetric.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkStreamMetricFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkStreamMetricFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkStreamMetricFrame} SdkStreamMetricFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkStreamMetricFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkStreamMetricFrame message.\n   * @function verify\n   * @memberof SdkStreamMetricFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkStreamMetricFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.streamId != null && message.hasOwnProperty(\"streamId\")) if (!$util.isInteger(message.streamId)) return \"streamId: integer expected\";\n    if (message.groupId != null && message.hasOwnProperty(\"groupId\")) if (!$util.isInteger(message.groupId)) return \"groupId: integer expected\";\n\n    if (message.metrics != null && message.hasOwnProperty(\"metrics\")) {\n      if (!Array.isArray(message.metrics)) return \"metrics: array expected\";\n\n      for (var i = 0; i < message.metrics.length; ++i) {\n        var error = $root.SdkMetric.verify(message.metrics[i]);\n        if (error) return \"metrics.\" + error;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Creates a SdkStreamMetricFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkStreamMetricFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkStreamMetricFrame} SdkStreamMetricFrame\n   */\n\n\n  SdkStreamMetricFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkStreamMetricFrame) return object;\n    var message = new $root.SdkStreamMetricFrame();\n    if (object.streamId != null) message.streamId = object.streamId >>> 0;\n    if (object.groupId != null) message.groupId = object.groupId >>> 0;\n\n    if (object.metrics) {\n      if (!Array.isArray(object.metrics)) throw TypeError(\".SdkStreamMetricFrame.metrics: array expected\");\n      message.metrics = [];\n\n      for (var i = 0; i < object.metrics.length; ++i) {\n        if (typeof object.metrics[i] !== \"object\") throw TypeError(\".SdkStreamMetricFrame.metrics: object expected\");\n        message.metrics[i] = $root.SdkMetric.fromObject(object.metrics[i]);\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkStreamMetricFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkStreamMetricFrame\n   * @static\n   * @param {SdkStreamMetricFrame} message SdkStreamMetricFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkStreamMetricFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n    if (options.arrays || options.defaults) object.metrics = [];\n\n    if (options.defaults) {\n      object.streamId = 0;\n      object.groupId = 0;\n    }\n\n    if (message.streamId != null && message.hasOwnProperty(\"streamId\")) object.streamId = message.streamId;\n    if (message.groupId != null && message.hasOwnProperty(\"groupId\")) object.groupId = message.groupId;\n\n    if (message.metrics && message.metrics.length) {\n      object.metrics = [];\n\n      for (var j = 0; j < message.metrics.length; ++j) object.metrics[j] = $root.SdkMetric.toObject(message.metrics[j], options);\n    }\n\n    return object;\n  };\n  /**\n   * Converts this SdkStreamMetricFrame to JSON.\n   * @function toJSON\n   * @memberof SdkStreamMetricFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkStreamMetricFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkStreamMetricFrame;\n}();\n\n$root.SdkClientMetricFrame = function () {\n  /**\n   * Properties of a SdkClientMetricFrame.\n   * @exports ISdkClientMetricFrame\n   * @interface ISdkClientMetricFrame\n   * @property {Array.<ISdkMetric>|null} [globalMetrics] SdkClientMetricFrame globalMetrics\n   * @property {Array.<ISdkStreamMetricFrame>|null} [streamMetricFrames] SdkClientMetricFrame streamMetricFrames\n   */\n\n  /**\n   * Constructs a new SdkClientMetricFrame.\n   * @exports SdkClientMetricFrame\n   * @classdesc Represents a SdkClientMetricFrame.\n   * @implements ISdkClientMetricFrame\n   * @constructor\n   * @param {ISdkClientMetricFrame=} [properties] Properties to set\n   */\n  function SdkClientMetricFrame(properties) {\n    this.globalMetrics = [];\n    this.streamMetricFrames = [];\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkClientMetricFrame globalMetrics.\n   * @member {Array.<ISdkMetric>} globalMetrics\n   * @memberof SdkClientMetricFrame\n   * @instance\n   */\n\n\n  SdkClientMetricFrame.prototype.globalMetrics = $util.emptyArray;\n  /**\n   * SdkClientMetricFrame streamMetricFrames.\n   * @member {Array.<ISdkStreamMetricFrame>} streamMetricFrames\n   * @memberof SdkClientMetricFrame\n   * @instance\n   */\n\n  SdkClientMetricFrame.prototype.streamMetricFrames = $util.emptyArray;\n  /**\n   * Creates a new SdkClientMetricFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkClientMetricFrame\n   * @static\n   * @param {ISdkClientMetricFrame=} [properties] Properties to set\n   * @returns {SdkClientMetricFrame} SdkClientMetricFrame instance\n   */\n\n  SdkClientMetricFrame.create = function create(properties) {\n    return new SdkClientMetricFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkClientMetricFrame message. Does not implicitly {@link SdkClientMetricFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkClientMetricFrame\n   * @static\n   * @param {ISdkClientMetricFrame} message SdkClientMetricFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkClientMetricFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.globalMetrics != null && message.globalMetrics.length) for (var i = 0; i < message.globalMetrics.length; ++i) $root.SdkMetric.encode(message.globalMetrics[i], writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).fork()).ldelim();\n    if (message.streamMetricFrames != null && message.streamMetricFrames.length) for (var i = 0; i < message.streamMetricFrames.length; ++i) $root.SdkStreamMetricFrame.encode(message.streamMetricFrames[i], writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).fork()).ldelim();\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkClientMetricFrame message, length delimited. Does not implicitly {@link SdkClientMetricFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkClientMetricFrame\n   * @static\n   * @param {ISdkClientMetricFrame} message SdkClientMetricFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkClientMetricFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkClientMetricFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkClientMetricFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkClientMetricFrame} SdkClientMetricFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkClientMetricFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkClientMetricFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          if (!(message.globalMetrics && message.globalMetrics.length)) message.globalMetrics = [];\n          message.globalMetrics.push($root.SdkMetric.decode(reader, reader.uint32()));\n          break;\n\n        case 2:\n          if (!(message.streamMetricFrames && message.streamMetricFrames.length)) message.streamMetricFrames = [];\n          message.streamMetricFrames.push($root.SdkStreamMetricFrame.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkClientMetricFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkClientMetricFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkClientMetricFrame} SdkClientMetricFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkClientMetricFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkClientMetricFrame message.\n   * @function verify\n   * @memberof SdkClientMetricFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkClientMetricFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n    if (message.globalMetrics != null && message.hasOwnProperty(\"globalMetrics\")) {\n      if (!Array.isArray(message.globalMetrics)) return \"globalMetrics: array expected\";\n\n      for (var i = 0; i < message.globalMetrics.length; ++i) {\n        var error = $root.SdkMetric.verify(message.globalMetrics[i]);\n        if (error) return \"globalMetrics.\" + error;\n      }\n    }\n\n    if (message.streamMetricFrames != null && message.hasOwnProperty(\"streamMetricFrames\")) {\n      if (!Array.isArray(message.streamMetricFrames)) return \"streamMetricFrames: array expected\";\n\n      for (var i = 0; i < message.streamMetricFrames.length; ++i) {\n        var error = $root.SdkStreamMetricFrame.verify(message.streamMetricFrames[i]);\n        if (error) return \"streamMetricFrames.\" + error;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Creates a SdkClientMetricFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkClientMetricFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkClientMetricFrame} SdkClientMetricFrame\n   */\n\n\n  SdkClientMetricFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkClientMetricFrame) return object;\n    var message = new $root.SdkClientMetricFrame();\n\n    if (object.globalMetrics) {\n      if (!Array.isArray(object.globalMetrics)) throw TypeError(\".SdkClientMetricFrame.globalMetrics: array expected\");\n      message.globalMetrics = [];\n\n      for (var i = 0; i < object.globalMetrics.length; ++i) {\n        if (typeof object.globalMetrics[i] !== \"object\") throw TypeError(\".SdkClientMetricFrame.globalMetrics: object expected\");\n        message.globalMetrics[i] = $root.SdkMetric.fromObject(object.globalMetrics[i]);\n      }\n    }\n\n    if (object.streamMetricFrames) {\n      if (!Array.isArray(object.streamMetricFrames)) throw TypeError(\".SdkClientMetricFrame.streamMetricFrames: array expected\");\n      message.streamMetricFrames = [];\n\n      for (var i = 0; i < object.streamMetricFrames.length; ++i) {\n        if (typeof object.streamMetricFrames[i] !== \"object\") throw TypeError(\".SdkClientMetricFrame.streamMetricFrames: object expected\");\n        message.streamMetricFrames[i] = $root.SdkStreamMetricFrame.fromObject(object.streamMetricFrames[i]);\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkClientMetricFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkClientMetricFrame\n   * @static\n   * @param {SdkClientMetricFrame} message SdkClientMetricFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkClientMetricFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.arrays || options.defaults) {\n      object.globalMetrics = [];\n      object.streamMetricFrames = [];\n    }\n\n    if (message.globalMetrics && message.globalMetrics.length) {\n      object.globalMetrics = [];\n\n      for (var j = 0; j < message.globalMetrics.length; ++j) object.globalMetrics[j] = $root.SdkMetric.toObject(message.globalMetrics[j], options);\n    }\n\n    if (message.streamMetricFrames && message.streamMetricFrames.length) {\n      object.streamMetricFrames = [];\n\n      for (var j = 0; j < message.streamMetricFrames.length; ++j) object.streamMetricFrames[j] = $root.SdkStreamMetricFrame.toObject(message.streamMetricFrames[j], options);\n    }\n\n    return object;\n  };\n  /**\n   * Converts this SdkClientMetricFrame to JSON.\n   * @function toJSON\n   * @memberof SdkClientMetricFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkClientMetricFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkClientMetricFrame;\n}();\n\n$root.SdkDataMessageFrame = function () {\n  /**\n   * Properties of a SdkDataMessageFrame.\n   * @exports ISdkDataMessageFrame\n   * @interface ISdkDataMessageFrame\n   * @property {Array.<ISdkDataMessagePayload>|null} [messages] SdkDataMessageFrame messages\n   */\n\n  /**\n   * Constructs a new SdkDataMessageFrame.\n   * @exports SdkDataMessageFrame\n   * @classdesc Represents a SdkDataMessageFrame.\n   * @implements ISdkDataMessageFrame\n   * @constructor\n   * @param {ISdkDataMessageFrame=} [properties] Properties to set\n   */\n  function SdkDataMessageFrame(properties) {\n    this.messages = [];\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkDataMessageFrame messages.\n   * @member {Array.<ISdkDataMessagePayload>} messages\n   * @memberof SdkDataMessageFrame\n   * @instance\n   */\n\n\n  SdkDataMessageFrame.prototype.messages = $util.emptyArray;\n  /**\n   * Creates a new SdkDataMessageFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkDataMessageFrame\n   * @static\n   * @param {ISdkDataMessageFrame=} [properties] Properties to set\n   * @returns {SdkDataMessageFrame} SdkDataMessageFrame instance\n   */\n\n  SdkDataMessageFrame.create = function create(properties) {\n    return new SdkDataMessageFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkDataMessageFrame message. Does not implicitly {@link SdkDataMessageFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkDataMessageFrame\n   * @static\n   * @param {ISdkDataMessageFrame} message SdkDataMessageFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkDataMessageFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.messages != null && message.messages.length) for (var i = 0; i < message.messages.length; ++i) $root.SdkDataMessagePayload.encode(message.messages[i], writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).fork()).ldelim();\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkDataMessageFrame message, length delimited. Does not implicitly {@link SdkDataMessageFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkDataMessageFrame\n   * @static\n   * @param {ISdkDataMessageFrame} message SdkDataMessageFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkDataMessageFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkDataMessageFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkDataMessageFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkDataMessageFrame} SdkDataMessageFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkDataMessageFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkDataMessageFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          if (!(message.messages && message.messages.length)) message.messages = [];\n          message.messages.push($root.SdkDataMessagePayload.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkDataMessageFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkDataMessageFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkDataMessageFrame} SdkDataMessageFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkDataMessageFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkDataMessageFrame message.\n   * @function verify\n   * @memberof SdkDataMessageFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkDataMessageFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n    if (message.messages != null && message.hasOwnProperty(\"messages\")) {\n      if (!Array.isArray(message.messages)) return \"messages: array expected\";\n\n      for (var i = 0; i < message.messages.length; ++i) {\n        var error = $root.SdkDataMessagePayload.verify(message.messages[i]);\n        if (error) return \"messages.\" + error;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Creates a SdkDataMessageFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkDataMessageFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkDataMessageFrame} SdkDataMessageFrame\n   */\n\n\n  SdkDataMessageFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkDataMessageFrame) return object;\n    var message = new $root.SdkDataMessageFrame();\n\n    if (object.messages) {\n      if (!Array.isArray(object.messages)) throw TypeError(\".SdkDataMessageFrame.messages: array expected\");\n      message.messages = [];\n\n      for (var i = 0; i < object.messages.length; ++i) {\n        if (typeof object.messages[i] !== \"object\") throw TypeError(\".SdkDataMessageFrame.messages: object expected\");\n        message.messages[i] = $root.SdkDataMessagePayload.fromObject(object.messages[i]);\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkDataMessageFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkDataMessageFrame\n   * @static\n   * @param {SdkDataMessageFrame} message SdkDataMessageFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkDataMessageFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n    if (options.arrays || options.defaults) object.messages = [];\n\n    if (message.messages && message.messages.length) {\n      object.messages = [];\n\n      for (var j = 0; j < message.messages.length; ++j) object.messages[j] = $root.SdkDataMessagePayload.toObject(message.messages[j], options);\n    }\n\n    return object;\n  };\n  /**\n   * Converts this SdkDataMessageFrame to JSON.\n   * @function toJSON\n   * @memberof SdkDataMessageFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkDataMessageFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkDataMessageFrame;\n}();\n\n$root.SdkDataMessagePayload = function () {\n  /**\n   * Properties of a SdkDataMessagePayload.\n   * @exports ISdkDataMessagePayload\n   * @interface ISdkDataMessagePayload\n   * @property {string|null} [topic] SdkDataMessagePayload topic\n   * @property {Uint8Array|null} [data] SdkDataMessagePayload data\n   * @property {number|null} [lifetimeMs] SdkDataMessagePayload lifetimeMs\n   * @property {string|null} [senderAttendeeId] SdkDataMessagePayload senderAttendeeId\n   * @property {number|Long|null} [ingestTimeNs] SdkDataMessagePayload ingestTimeNs\n   * @property {string|null} [senderExternalUserId] SdkDataMessagePayload senderExternalUserId\n   */\n\n  /**\n   * Constructs a new SdkDataMessagePayload.\n   * @exports SdkDataMessagePayload\n   * @classdesc Represents a SdkDataMessagePayload.\n   * @implements ISdkDataMessagePayload\n   * @constructor\n   * @param {ISdkDataMessagePayload=} [properties] Properties to set\n   */\n  function SdkDataMessagePayload(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkDataMessagePayload topic.\n   * @member {string} topic\n   * @memberof SdkDataMessagePayload\n   * @instance\n   */\n\n\n  SdkDataMessagePayload.prototype.topic = \"\";\n  /**\n   * SdkDataMessagePayload data.\n   * @member {Uint8Array} data\n   * @memberof SdkDataMessagePayload\n   * @instance\n   */\n\n  SdkDataMessagePayload.prototype.data = $util.newBuffer([]);\n  /**\n   * SdkDataMessagePayload lifetimeMs.\n   * @member {number} lifetimeMs\n   * @memberof SdkDataMessagePayload\n   * @instance\n   */\n\n  SdkDataMessagePayload.prototype.lifetimeMs = 0;\n  /**\n   * SdkDataMessagePayload senderAttendeeId.\n   * @member {string} senderAttendeeId\n   * @memberof SdkDataMessagePayload\n   * @instance\n   */\n\n  SdkDataMessagePayload.prototype.senderAttendeeId = \"\";\n  /**\n   * SdkDataMessagePayload ingestTimeNs.\n   * @member {number|Long} ingestTimeNs\n   * @memberof SdkDataMessagePayload\n   * @instance\n   */\n\n  SdkDataMessagePayload.prototype.ingestTimeNs = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n  /**\n   * SdkDataMessagePayload senderExternalUserId.\n   * @member {string} senderExternalUserId\n   * @memberof SdkDataMessagePayload\n   * @instance\n   */\n\n  SdkDataMessagePayload.prototype.senderExternalUserId = \"\";\n  /**\n   * Creates a new SdkDataMessagePayload instance using the specified properties.\n   * @function create\n   * @memberof SdkDataMessagePayload\n   * @static\n   * @param {ISdkDataMessagePayload=} [properties] Properties to set\n   * @returns {SdkDataMessagePayload} SdkDataMessagePayload instance\n   */\n\n  SdkDataMessagePayload.create = function create(properties) {\n    return new SdkDataMessagePayload(properties);\n  };\n  /**\n   * Encodes the specified SdkDataMessagePayload message. Does not implicitly {@link SdkDataMessagePayload.verify|verify} messages.\n   * @function encode\n   * @memberof SdkDataMessagePayload\n   * @static\n   * @param {ISdkDataMessagePayload} message SdkDataMessagePayload message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkDataMessagePayload.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.topic != null && message.hasOwnProperty(\"topic\")) writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).string(message.topic);\n    if (message.data != null && message.hasOwnProperty(\"data\")) writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).bytes(message.data);\n    if (message.lifetimeMs != null && message.hasOwnProperty(\"lifetimeMs\")) writer.uint32(\n    /* id 3, wireType 0 =*/\n    24).uint32(message.lifetimeMs);\n    if (message.senderAttendeeId != null && message.hasOwnProperty(\"senderAttendeeId\")) writer.uint32(\n    /* id 4, wireType 2 =*/\n    34).string(message.senderAttendeeId);\n    if (message.ingestTimeNs != null && message.hasOwnProperty(\"ingestTimeNs\")) writer.uint32(\n    /* id 5, wireType 0 =*/\n    40).int64(message.ingestTimeNs);\n    if (message.senderExternalUserId != null && message.hasOwnProperty(\"senderExternalUserId\")) writer.uint32(\n    /* id 6, wireType 2 =*/\n    50).string(message.senderExternalUserId);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkDataMessagePayload message, length delimited. Does not implicitly {@link SdkDataMessagePayload.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkDataMessagePayload\n   * @static\n   * @param {ISdkDataMessagePayload} message SdkDataMessagePayload message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkDataMessagePayload.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkDataMessagePayload message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkDataMessagePayload\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkDataMessagePayload} SdkDataMessagePayload\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkDataMessagePayload.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkDataMessagePayload();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.topic = reader.string();\n          break;\n\n        case 2:\n          message.data = reader.bytes();\n          break;\n\n        case 3:\n          message.lifetimeMs = reader.uint32();\n          break;\n\n        case 4:\n          message.senderAttendeeId = reader.string();\n          break;\n\n        case 5:\n          message.ingestTimeNs = reader.int64();\n          break;\n\n        case 6:\n          message.senderExternalUserId = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkDataMessagePayload message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkDataMessagePayload\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkDataMessagePayload} SdkDataMessagePayload\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkDataMessagePayload.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkDataMessagePayload message.\n   * @function verify\n   * @memberof SdkDataMessagePayload\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkDataMessagePayload.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.topic != null && message.hasOwnProperty(\"topic\")) if (!$util.isString(message.topic)) return \"topic: string expected\";\n    if (message.data != null && message.hasOwnProperty(\"data\")) if (!(message.data && typeof message.data.length === \"number\" || $util.isString(message.data))) return \"data: buffer expected\";\n    if (message.lifetimeMs != null && message.hasOwnProperty(\"lifetimeMs\")) if (!$util.isInteger(message.lifetimeMs)) return \"lifetimeMs: integer expected\";\n    if (message.senderAttendeeId != null && message.hasOwnProperty(\"senderAttendeeId\")) if (!$util.isString(message.senderAttendeeId)) return \"senderAttendeeId: string expected\";\n    if (message.ingestTimeNs != null && message.hasOwnProperty(\"ingestTimeNs\")) if (!$util.isInteger(message.ingestTimeNs) && !(message.ingestTimeNs && $util.isInteger(message.ingestTimeNs.low) && $util.isInteger(message.ingestTimeNs.high))) return \"ingestTimeNs: integer|Long expected\";\n    if (message.senderExternalUserId != null && message.hasOwnProperty(\"senderExternalUserId\")) if (!$util.isString(message.senderExternalUserId)) return \"senderExternalUserId: string expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkDataMessagePayload message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkDataMessagePayload\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkDataMessagePayload} SdkDataMessagePayload\n   */\n\n\n  SdkDataMessagePayload.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkDataMessagePayload) return object;\n    var message = new $root.SdkDataMessagePayload();\n    if (object.topic != null) message.topic = String(object.topic);\n    if (object.data != null) if (typeof object.data === \"string\") $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);else if (object.data.length) message.data = object.data;\n    if (object.lifetimeMs != null) message.lifetimeMs = object.lifetimeMs >>> 0;\n    if (object.senderAttendeeId != null) message.senderAttendeeId = String(object.senderAttendeeId);\n    if (object.ingestTimeNs != null) if ($util.Long) (message.ingestTimeNs = $util.Long.fromValue(object.ingestTimeNs)).unsigned = false;else if (typeof object.ingestTimeNs === \"string\") message.ingestTimeNs = parseInt(object.ingestTimeNs, 10);else if (typeof object.ingestTimeNs === \"number\") message.ingestTimeNs = object.ingestTimeNs;else if (typeof object.ingestTimeNs === \"object\") message.ingestTimeNs = new $util.LongBits(object.ingestTimeNs.low >>> 0, object.ingestTimeNs.high >>> 0).toNumber();\n    if (object.senderExternalUserId != null) message.senderExternalUserId = String(object.senderExternalUserId);\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkDataMessagePayload message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkDataMessagePayload\n   * @static\n   * @param {SdkDataMessagePayload} message SdkDataMessagePayload\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkDataMessagePayload.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.topic = \"\";\n      if (options.bytes === String) object.data = \"\";else {\n        object.data = [];\n        if (options.bytes !== Array) object.data = $util.newBuffer(object.data);\n      }\n      object.lifetimeMs = 0;\n      object.senderAttendeeId = \"\";\n\n      if ($util.Long) {\n        var long = new $util.Long(0, 0, false);\n        object.ingestTimeNs = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n      } else object.ingestTimeNs = options.longs === String ? \"0\" : 0;\n\n      object.senderExternalUserId = \"\";\n    }\n\n    if (message.topic != null && message.hasOwnProperty(\"topic\")) object.topic = message.topic;\n    if (message.data != null && message.hasOwnProperty(\"data\")) object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;\n    if (message.lifetimeMs != null && message.hasOwnProperty(\"lifetimeMs\")) object.lifetimeMs = message.lifetimeMs;\n    if (message.senderAttendeeId != null && message.hasOwnProperty(\"senderAttendeeId\")) object.senderAttendeeId = message.senderAttendeeId;\n    if (message.ingestTimeNs != null && message.hasOwnProperty(\"ingestTimeNs\")) if (typeof message.ingestTimeNs === \"number\") object.ingestTimeNs = options.longs === String ? String(message.ingestTimeNs) : message.ingestTimeNs;else object.ingestTimeNs = options.longs === String ? $util.Long.prototype.toString.call(message.ingestTimeNs) : options.longs === Number ? new $util.LongBits(message.ingestTimeNs.low >>> 0, message.ingestTimeNs.high >>> 0).toNumber() : message.ingestTimeNs;\n    if (message.senderExternalUserId != null && message.hasOwnProperty(\"senderExternalUserId\")) object.senderExternalUserId = message.senderExternalUserId;\n    return object;\n  };\n  /**\n   * Converts this SdkDataMessagePayload to JSON.\n   * @function toJSON\n   * @memberof SdkDataMessagePayload\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkDataMessagePayload.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkDataMessagePayload;\n}();\n\n$root.SdkTurnCredentials = function () {\n  /**\n   * Properties of a SdkTurnCredentials.\n   * @exports ISdkTurnCredentials\n   * @interface ISdkTurnCredentials\n   * @property {string|null} [username] SdkTurnCredentials username\n   * @property {string|null} [password] SdkTurnCredentials password\n   * @property {number|null} [ttl] SdkTurnCredentials ttl\n   * @property {Array.<string>|null} [uris] SdkTurnCredentials uris\n   */\n\n  /**\n   * Constructs a new SdkTurnCredentials.\n   * @exports SdkTurnCredentials\n   * @classdesc Represents a SdkTurnCredentials.\n   * @implements ISdkTurnCredentials\n   * @constructor\n   * @param {ISdkTurnCredentials=} [properties] Properties to set\n   */\n  function SdkTurnCredentials(properties) {\n    this.uris = [];\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkTurnCredentials username.\n   * @member {string} username\n   * @memberof SdkTurnCredentials\n   * @instance\n   */\n\n\n  SdkTurnCredentials.prototype.username = \"\";\n  /**\n   * SdkTurnCredentials password.\n   * @member {string} password\n   * @memberof SdkTurnCredentials\n   * @instance\n   */\n\n  SdkTurnCredentials.prototype.password = \"\";\n  /**\n   * SdkTurnCredentials ttl.\n   * @member {number} ttl\n   * @memberof SdkTurnCredentials\n   * @instance\n   */\n\n  SdkTurnCredentials.prototype.ttl = 0;\n  /**\n   * SdkTurnCredentials uris.\n   * @member {Array.<string>} uris\n   * @memberof SdkTurnCredentials\n   * @instance\n   */\n\n  SdkTurnCredentials.prototype.uris = $util.emptyArray;\n  /**\n   * Creates a new SdkTurnCredentials instance using the specified properties.\n   * @function create\n   * @memberof SdkTurnCredentials\n   * @static\n   * @param {ISdkTurnCredentials=} [properties] Properties to set\n   * @returns {SdkTurnCredentials} SdkTurnCredentials instance\n   */\n\n  SdkTurnCredentials.create = function create(properties) {\n    return new SdkTurnCredentials(properties);\n  };\n  /**\n   * Encodes the specified SdkTurnCredentials message. Does not implicitly {@link SdkTurnCredentials.verify|verify} messages.\n   * @function encode\n   * @memberof SdkTurnCredentials\n   * @static\n   * @param {ISdkTurnCredentials} message SdkTurnCredentials message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkTurnCredentials.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.username != null && message.hasOwnProperty(\"username\")) writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).string(message.username);\n    if (message.password != null && message.hasOwnProperty(\"password\")) writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).string(message.password);\n    if (message.ttl != null && message.hasOwnProperty(\"ttl\")) writer.uint32(\n    /* id 3, wireType 0 =*/\n    24).uint32(message.ttl);\n    if (message.uris != null && message.uris.length) for (var i = 0; i < message.uris.length; ++i) writer.uint32(\n    /* id 4, wireType 2 =*/\n    34).string(message.uris[i]);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkTurnCredentials message, length delimited. Does not implicitly {@link SdkTurnCredentials.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkTurnCredentials\n   * @static\n   * @param {ISdkTurnCredentials} message SdkTurnCredentials message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkTurnCredentials.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkTurnCredentials message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkTurnCredentials\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkTurnCredentials} SdkTurnCredentials\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkTurnCredentials.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkTurnCredentials();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.username = reader.string();\n          break;\n\n        case 2:\n          message.password = reader.string();\n          break;\n\n        case 3:\n          message.ttl = reader.uint32();\n          break;\n\n        case 4:\n          if (!(message.uris && message.uris.length)) message.uris = [];\n          message.uris.push(reader.string());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkTurnCredentials message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkTurnCredentials\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkTurnCredentials} SdkTurnCredentials\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkTurnCredentials.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkTurnCredentials message.\n   * @function verify\n   * @memberof SdkTurnCredentials\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkTurnCredentials.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.username != null && message.hasOwnProperty(\"username\")) if (!$util.isString(message.username)) return \"username: string expected\";\n    if (message.password != null && message.hasOwnProperty(\"password\")) if (!$util.isString(message.password)) return \"password: string expected\";\n    if (message.ttl != null && message.hasOwnProperty(\"ttl\")) if (!$util.isInteger(message.ttl)) return \"ttl: integer expected\";\n\n    if (message.uris != null && message.hasOwnProperty(\"uris\")) {\n      if (!Array.isArray(message.uris)) return \"uris: array expected\";\n\n      for (var i = 0; i < message.uris.length; ++i) if (!$util.isString(message.uris[i])) return \"uris: string[] expected\";\n    }\n\n    return null;\n  };\n  /**\n   * Creates a SdkTurnCredentials message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkTurnCredentials\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkTurnCredentials} SdkTurnCredentials\n   */\n\n\n  SdkTurnCredentials.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkTurnCredentials) return object;\n    var message = new $root.SdkTurnCredentials();\n    if (object.username != null) message.username = String(object.username);\n    if (object.password != null) message.password = String(object.password);\n    if (object.ttl != null) message.ttl = object.ttl >>> 0;\n\n    if (object.uris) {\n      if (!Array.isArray(object.uris)) throw TypeError(\".SdkTurnCredentials.uris: array expected\");\n      message.uris = [];\n\n      for (var i = 0; i < object.uris.length; ++i) message.uris[i] = String(object.uris[i]);\n    }\n\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkTurnCredentials message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkTurnCredentials\n   * @static\n   * @param {SdkTurnCredentials} message SdkTurnCredentials\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkTurnCredentials.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n    if (options.arrays || options.defaults) object.uris = [];\n\n    if (options.defaults) {\n      object.username = \"\";\n      object.password = \"\";\n      object.ttl = 0;\n    }\n\n    if (message.username != null && message.hasOwnProperty(\"username\")) object.username = message.username;\n    if (message.password != null && message.hasOwnProperty(\"password\")) object.password = message.password;\n    if (message.ttl != null && message.hasOwnProperty(\"ttl\")) object.ttl = message.ttl;\n\n    if (message.uris && message.uris.length) {\n      object.uris = [];\n\n      for (var j = 0; j < message.uris.length; ++j) object.uris[j] = message.uris[j];\n    }\n\n    return object;\n  };\n  /**\n   * Converts this SdkTurnCredentials to JSON.\n   * @function toJSON\n   * @memberof SdkTurnCredentials\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkTurnCredentials.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkTurnCredentials;\n}();\n\n$root.SdkTranscriptItem = function () {\n  /**\n   * Properties of a SdkTranscriptItem.\n   * @exports ISdkTranscriptItem\n   * @interface ISdkTranscriptItem\n   * @property {string|null} [content] SdkTranscriptItem content\n   * @property {number|Long|null} [endTime] SdkTranscriptItem endTime\n   * @property {string|null} [speakerAttendeeId] SdkTranscriptItem speakerAttendeeId\n   * @property {string|null} [speakerExternalUserId] SdkTranscriptItem speakerExternalUserId\n   * @property {number|Long|null} [startTime] SdkTranscriptItem startTime\n   * @property {SdkTranscriptItem.Type|null} [type] SdkTranscriptItem type\n   * @property {boolean|null} [vocabularyFilterMatch] SdkTranscriptItem vocabularyFilterMatch\n   * @property {number|null} [confidence] SdkTranscriptItem confidence\n   * @property {boolean|null} [stable] SdkTranscriptItem stable\n   */\n\n  /**\n   * Constructs a new SdkTranscriptItem.\n   * @exports SdkTranscriptItem\n   * @classdesc Represents a SdkTranscriptItem.\n   * @implements ISdkTranscriptItem\n   * @constructor\n   * @param {ISdkTranscriptItem=} [properties] Properties to set\n   */\n  function SdkTranscriptItem(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkTranscriptItem content.\n   * @member {string} content\n   * @memberof SdkTranscriptItem\n   * @instance\n   */\n\n\n  SdkTranscriptItem.prototype.content = \"\";\n  /**\n   * SdkTranscriptItem endTime.\n   * @member {number|Long} endTime\n   * @memberof SdkTranscriptItem\n   * @instance\n   */\n\n  SdkTranscriptItem.prototype.endTime = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n  /**\n   * SdkTranscriptItem speakerAttendeeId.\n   * @member {string} speakerAttendeeId\n   * @memberof SdkTranscriptItem\n   * @instance\n   */\n\n  SdkTranscriptItem.prototype.speakerAttendeeId = \"\";\n  /**\n   * SdkTranscriptItem speakerExternalUserId.\n   * @member {string} speakerExternalUserId\n   * @memberof SdkTranscriptItem\n   * @instance\n   */\n\n  SdkTranscriptItem.prototype.speakerExternalUserId = \"\";\n  /**\n   * SdkTranscriptItem startTime.\n   * @member {number|Long} startTime\n   * @memberof SdkTranscriptItem\n   * @instance\n   */\n\n  SdkTranscriptItem.prototype.startTime = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n  /**\n   * SdkTranscriptItem type.\n   * @member {SdkTranscriptItem.Type} type\n   * @memberof SdkTranscriptItem\n   * @instance\n   */\n\n  SdkTranscriptItem.prototype.type = 1;\n  /**\n   * SdkTranscriptItem vocabularyFilterMatch.\n   * @member {boolean} vocabularyFilterMatch\n   * @memberof SdkTranscriptItem\n   * @instance\n   */\n\n  SdkTranscriptItem.prototype.vocabularyFilterMatch = false;\n  /**\n   * SdkTranscriptItem confidence.\n   * @member {number} confidence\n   * @memberof SdkTranscriptItem\n   * @instance\n   */\n\n  SdkTranscriptItem.prototype.confidence = 0;\n  /**\n   * SdkTranscriptItem stable.\n   * @member {boolean} stable\n   * @memberof SdkTranscriptItem\n   * @instance\n   */\n\n  SdkTranscriptItem.prototype.stable = false;\n  /**\n   * Creates a new SdkTranscriptItem instance using the specified properties.\n   * @function create\n   * @memberof SdkTranscriptItem\n   * @static\n   * @param {ISdkTranscriptItem=} [properties] Properties to set\n   * @returns {SdkTranscriptItem} SdkTranscriptItem instance\n   */\n\n  SdkTranscriptItem.create = function create(properties) {\n    return new SdkTranscriptItem(properties);\n  };\n  /**\n   * Encodes the specified SdkTranscriptItem message. Does not implicitly {@link SdkTranscriptItem.verify|verify} messages.\n   * @function encode\n   * @memberof SdkTranscriptItem\n   * @static\n   * @param {ISdkTranscriptItem} message SdkTranscriptItem message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkTranscriptItem.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.content != null && message.hasOwnProperty(\"content\")) writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).string(message.content);\n    if (message.endTime != null && message.hasOwnProperty(\"endTime\")) writer.uint32(\n    /* id 2, wireType 0 =*/\n    16).int64(message.endTime);\n    if (message.speakerAttendeeId != null && message.hasOwnProperty(\"speakerAttendeeId\")) writer.uint32(\n    /* id 3, wireType 2 =*/\n    26).string(message.speakerAttendeeId);\n    if (message.speakerExternalUserId != null && message.hasOwnProperty(\"speakerExternalUserId\")) writer.uint32(\n    /* id 4, wireType 2 =*/\n    34).string(message.speakerExternalUserId);\n    if (message.startTime != null && message.hasOwnProperty(\"startTime\")) writer.uint32(\n    /* id 5, wireType 0 =*/\n    40).int64(message.startTime);\n    if (message.type != null && message.hasOwnProperty(\"type\")) writer.uint32(\n    /* id 6, wireType 0 =*/\n    48).int32(message.type);\n    if (message.vocabularyFilterMatch != null && message.hasOwnProperty(\"vocabularyFilterMatch\")) writer.uint32(\n    /* id 7, wireType 0 =*/\n    56).bool(message.vocabularyFilterMatch);\n    if (message.confidence != null && message.hasOwnProperty(\"confidence\")) writer.uint32(\n    /* id 8, wireType 1 =*/\n    65).double(message.confidence);\n    if (message.stable != null && message.hasOwnProperty(\"stable\")) writer.uint32(\n    /* id 9, wireType 0 =*/\n    72).bool(message.stable);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkTranscriptItem message, length delimited. Does not implicitly {@link SdkTranscriptItem.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkTranscriptItem\n   * @static\n   * @param {ISdkTranscriptItem} message SdkTranscriptItem message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkTranscriptItem.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkTranscriptItem message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkTranscriptItem\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkTranscriptItem} SdkTranscriptItem\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkTranscriptItem.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkTranscriptItem();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.content = reader.string();\n          break;\n\n        case 2:\n          message.endTime = reader.int64();\n          break;\n\n        case 3:\n          message.speakerAttendeeId = reader.string();\n          break;\n\n        case 4:\n          message.speakerExternalUserId = reader.string();\n          break;\n\n        case 5:\n          message.startTime = reader.int64();\n          break;\n\n        case 6:\n          message.type = reader.int32();\n          break;\n\n        case 7:\n          message.vocabularyFilterMatch = reader.bool();\n          break;\n\n        case 8:\n          message.confidence = reader.double();\n          break;\n\n        case 9:\n          message.stable = reader.bool();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkTranscriptItem message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkTranscriptItem\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkTranscriptItem} SdkTranscriptItem\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkTranscriptItem.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkTranscriptItem message.\n   * @function verify\n   * @memberof SdkTranscriptItem\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkTranscriptItem.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.content != null && message.hasOwnProperty(\"content\")) if (!$util.isString(message.content)) return \"content: string expected\";\n    if (message.endTime != null && message.hasOwnProperty(\"endTime\")) if (!$util.isInteger(message.endTime) && !(message.endTime && $util.isInteger(message.endTime.low) && $util.isInteger(message.endTime.high))) return \"endTime: integer|Long expected\";\n    if (message.speakerAttendeeId != null && message.hasOwnProperty(\"speakerAttendeeId\")) if (!$util.isString(message.speakerAttendeeId)) return \"speakerAttendeeId: string expected\";\n    if (message.speakerExternalUserId != null && message.hasOwnProperty(\"speakerExternalUserId\")) if (!$util.isString(message.speakerExternalUserId)) return \"speakerExternalUserId: string expected\";\n    if (message.startTime != null && message.hasOwnProperty(\"startTime\")) if (!$util.isInteger(message.startTime) && !(message.startTime && $util.isInteger(message.startTime.low) && $util.isInteger(message.startTime.high))) return \"startTime: integer|Long expected\";\n    if (message.type != null && message.hasOwnProperty(\"type\")) switch (message.type) {\n      default:\n        return \"type: enum value expected\";\n\n      case 1:\n      case 2:\n        break;\n    }\n    if (message.vocabularyFilterMatch != null && message.hasOwnProperty(\"vocabularyFilterMatch\")) if (typeof message.vocabularyFilterMatch !== \"boolean\") return \"vocabularyFilterMatch: boolean expected\";\n    if (message.confidence != null && message.hasOwnProperty(\"confidence\")) if (typeof message.confidence !== \"number\") return \"confidence: number expected\";\n    if (message.stable != null && message.hasOwnProperty(\"stable\")) if (typeof message.stable !== \"boolean\") return \"stable: boolean expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkTranscriptItem message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkTranscriptItem\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkTranscriptItem} SdkTranscriptItem\n   */\n\n\n  SdkTranscriptItem.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkTranscriptItem) return object;\n    var message = new $root.SdkTranscriptItem();\n    if (object.content != null) message.content = String(object.content);\n    if (object.endTime != null) if ($util.Long) (message.endTime = $util.Long.fromValue(object.endTime)).unsigned = false;else if (typeof object.endTime === \"string\") message.endTime = parseInt(object.endTime, 10);else if (typeof object.endTime === \"number\") message.endTime = object.endTime;else if (typeof object.endTime === \"object\") message.endTime = new $util.LongBits(object.endTime.low >>> 0, object.endTime.high >>> 0).toNumber();\n    if (object.speakerAttendeeId != null) message.speakerAttendeeId = String(object.speakerAttendeeId);\n    if (object.speakerExternalUserId != null) message.speakerExternalUserId = String(object.speakerExternalUserId);\n    if (object.startTime != null) if ($util.Long) (message.startTime = $util.Long.fromValue(object.startTime)).unsigned = false;else if (typeof object.startTime === \"string\") message.startTime = parseInt(object.startTime, 10);else if (typeof object.startTime === \"number\") message.startTime = object.startTime;else if (typeof object.startTime === \"object\") message.startTime = new $util.LongBits(object.startTime.low >>> 0, object.startTime.high >>> 0).toNumber();\n\n    switch (object.type) {\n      case \"PRONUNCIATION\":\n      case 1:\n        message.type = 1;\n        break;\n\n      case \"PUNCTUATION\":\n      case 2:\n        message.type = 2;\n        break;\n    }\n\n    if (object.vocabularyFilterMatch != null) message.vocabularyFilterMatch = Boolean(object.vocabularyFilterMatch);\n    if (object.confidence != null) message.confidence = Number(object.confidence);\n    if (object.stable != null) message.stable = Boolean(object.stable);\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkTranscriptItem message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkTranscriptItem\n   * @static\n   * @param {SdkTranscriptItem} message SdkTranscriptItem\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkTranscriptItem.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.content = \"\";\n\n      if ($util.Long) {\n        var long = new $util.Long(0, 0, false);\n        object.endTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n      } else object.endTime = options.longs === String ? \"0\" : 0;\n\n      object.speakerAttendeeId = \"\";\n      object.speakerExternalUserId = \"\";\n\n      if ($util.Long) {\n        var long = new $util.Long(0, 0, false);\n        object.startTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n      } else object.startTime = options.longs === String ? \"0\" : 0;\n\n      object.type = options.enums === String ? \"PRONUNCIATION\" : 1;\n      object.vocabularyFilterMatch = false;\n      object.confidence = 0;\n      object.stable = false;\n    }\n\n    if (message.content != null && message.hasOwnProperty(\"content\")) object.content = message.content;\n    if (message.endTime != null && message.hasOwnProperty(\"endTime\")) if (typeof message.endTime === \"number\") object.endTime = options.longs === String ? String(message.endTime) : message.endTime;else object.endTime = options.longs === String ? $util.Long.prototype.toString.call(message.endTime) : options.longs === Number ? new $util.LongBits(message.endTime.low >>> 0, message.endTime.high >>> 0).toNumber() : message.endTime;\n    if (message.speakerAttendeeId != null && message.hasOwnProperty(\"speakerAttendeeId\")) object.speakerAttendeeId = message.speakerAttendeeId;\n    if (message.speakerExternalUserId != null && message.hasOwnProperty(\"speakerExternalUserId\")) object.speakerExternalUserId = message.speakerExternalUserId;\n    if (message.startTime != null && message.hasOwnProperty(\"startTime\")) if (typeof message.startTime === \"number\") object.startTime = options.longs === String ? String(message.startTime) : message.startTime;else object.startTime = options.longs === String ? $util.Long.prototype.toString.call(message.startTime) : options.longs === Number ? new $util.LongBits(message.startTime.low >>> 0, message.startTime.high >>> 0).toNumber() : message.startTime;\n    if (message.type != null && message.hasOwnProperty(\"type\")) object.type = options.enums === String ? $root.SdkTranscriptItem.Type[message.type] : message.type;\n    if (message.vocabularyFilterMatch != null && message.hasOwnProperty(\"vocabularyFilterMatch\")) object.vocabularyFilterMatch = message.vocabularyFilterMatch;\n    if (message.confidence != null && message.hasOwnProperty(\"confidence\")) object.confidence = options.json && !isFinite(message.confidence) ? String(message.confidence) : message.confidence;\n    if (message.stable != null && message.hasOwnProperty(\"stable\")) object.stable = message.stable;\n    return object;\n  };\n  /**\n   * Converts this SdkTranscriptItem to JSON.\n   * @function toJSON\n   * @memberof SdkTranscriptItem\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkTranscriptItem.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n  /**\n   * Type enum.\n   * @name SdkTranscriptItem.Type\n   * @enum {string}\n   * @property {number} PRONUNCIATION=1 PRONUNCIATION value\n   * @property {number} PUNCTUATION=2 PUNCTUATION value\n   */\n\n\n  SdkTranscriptItem.Type = function () {\n    var valuesById = {},\n        values = Object.create(valuesById);\n    values[valuesById[1] = \"PRONUNCIATION\"] = 1;\n    values[valuesById[2] = \"PUNCTUATION\"] = 2;\n    return values;\n  }();\n\n  return SdkTranscriptItem;\n}();\n\n$root.SdkTranscriptEntity = function () {\n  /**\n   * Properties of a SdkTranscriptEntity.\n   * @exports ISdkTranscriptEntity\n   * @interface ISdkTranscriptEntity\n   * @property {string|null} [category] SdkTranscriptEntity category\n   * @property {number|null} [confidence] SdkTranscriptEntity confidence\n   * @property {string|null} [content] SdkTranscriptEntity content\n   * @property {number|Long|null} [endTime] SdkTranscriptEntity endTime\n   * @property {number|Long|null} [startTime] SdkTranscriptEntity startTime\n   * @property {string|null} [type] SdkTranscriptEntity type\n   */\n\n  /**\n   * Constructs a new SdkTranscriptEntity.\n   * @exports SdkTranscriptEntity\n   * @classdesc Represents a SdkTranscriptEntity.\n   * @implements ISdkTranscriptEntity\n   * @constructor\n   * @param {ISdkTranscriptEntity=} [properties] Properties to set\n   */\n  function SdkTranscriptEntity(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkTranscriptEntity category.\n   * @member {string} category\n   * @memberof SdkTranscriptEntity\n   * @instance\n   */\n\n\n  SdkTranscriptEntity.prototype.category = \"\";\n  /**\n   * SdkTranscriptEntity confidence.\n   * @member {number} confidence\n   * @memberof SdkTranscriptEntity\n   * @instance\n   */\n\n  SdkTranscriptEntity.prototype.confidence = 0;\n  /**\n   * SdkTranscriptEntity content.\n   * @member {string} content\n   * @memberof SdkTranscriptEntity\n   * @instance\n   */\n\n  SdkTranscriptEntity.prototype.content = \"\";\n  /**\n   * SdkTranscriptEntity endTime.\n   * @member {number|Long} endTime\n   * @memberof SdkTranscriptEntity\n   * @instance\n   */\n\n  SdkTranscriptEntity.prototype.endTime = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n  /**\n   * SdkTranscriptEntity startTime.\n   * @member {number|Long} startTime\n   * @memberof SdkTranscriptEntity\n   * @instance\n   */\n\n  SdkTranscriptEntity.prototype.startTime = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n  /**\n   * SdkTranscriptEntity type.\n   * @member {string} type\n   * @memberof SdkTranscriptEntity\n   * @instance\n   */\n\n  SdkTranscriptEntity.prototype.type = \"\";\n  /**\n   * Creates a new SdkTranscriptEntity instance using the specified properties.\n   * @function create\n   * @memberof SdkTranscriptEntity\n   * @static\n   * @param {ISdkTranscriptEntity=} [properties] Properties to set\n   * @returns {SdkTranscriptEntity} SdkTranscriptEntity instance\n   */\n\n  SdkTranscriptEntity.create = function create(properties) {\n    return new SdkTranscriptEntity(properties);\n  };\n  /**\n   * Encodes the specified SdkTranscriptEntity message. Does not implicitly {@link SdkTranscriptEntity.verify|verify} messages.\n   * @function encode\n   * @memberof SdkTranscriptEntity\n   * @static\n   * @param {ISdkTranscriptEntity} message SdkTranscriptEntity message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkTranscriptEntity.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.category != null && message.hasOwnProperty(\"category\")) writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).string(message.category);\n    if (message.confidence != null && message.hasOwnProperty(\"confidence\")) writer.uint32(\n    /* id 2, wireType 1 =*/\n    17).double(message.confidence);\n    if (message.content != null && message.hasOwnProperty(\"content\")) writer.uint32(\n    /* id 3, wireType 2 =*/\n    26).string(message.content);\n    if (message.endTime != null && message.hasOwnProperty(\"endTime\")) writer.uint32(\n    /* id 4, wireType 0 =*/\n    32).int64(message.endTime);\n    if (message.startTime != null && message.hasOwnProperty(\"startTime\")) writer.uint32(\n    /* id 5, wireType 0 =*/\n    40).int64(message.startTime);\n    if (message.type != null && message.hasOwnProperty(\"type\")) writer.uint32(\n    /* id 6, wireType 2 =*/\n    50).string(message.type);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkTranscriptEntity message, length delimited. Does not implicitly {@link SdkTranscriptEntity.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkTranscriptEntity\n   * @static\n   * @param {ISdkTranscriptEntity} message SdkTranscriptEntity message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkTranscriptEntity.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkTranscriptEntity message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkTranscriptEntity\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkTranscriptEntity} SdkTranscriptEntity\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkTranscriptEntity.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkTranscriptEntity();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.category = reader.string();\n          break;\n\n        case 2:\n          message.confidence = reader.double();\n          break;\n\n        case 3:\n          message.content = reader.string();\n          break;\n\n        case 4:\n          message.endTime = reader.int64();\n          break;\n\n        case 5:\n          message.startTime = reader.int64();\n          break;\n\n        case 6:\n          message.type = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkTranscriptEntity message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkTranscriptEntity\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkTranscriptEntity} SdkTranscriptEntity\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkTranscriptEntity.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkTranscriptEntity message.\n   * @function verify\n   * @memberof SdkTranscriptEntity\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkTranscriptEntity.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.category != null && message.hasOwnProperty(\"category\")) if (!$util.isString(message.category)) return \"category: string expected\";\n    if (message.confidence != null && message.hasOwnProperty(\"confidence\")) if (typeof message.confidence !== \"number\") return \"confidence: number expected\";\n    if (message.content != null && message.hasOwnProperty(\"content\")) if (!$util.isString(message.content)) return \"content: string expected\";\n    if (message.endTime != null && message.hasOwnProperty(\"endTime\")) if (!$util.isInteger(message.endTime) && !(message.endTime && $util.isInteger(message.endTime.low) && $util.isInteger(message.endTime.high))) return \"endTime: integer|Long expected\";\n    if (message.startTime != null && message.hasOwnProperty(\"startTime\")) if (!$util.isInteger(message.startTime) && !(message.startTime && $util.isInteger(message.startTime.low) && $util.isInteger(message.startTime.high))) return \"startTime: integer|Long expected\";\n    if (message.type != null && message.hasOwnProperty(\"type\")) if (!$util.isString(message.type)) return \"type: string expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkTranscriptEntity message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkTranscriptEntity\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkTranscriptEntity} SdkTranscriptEntity\n   */\n\n\n  SdkTranscriptEntity.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkTranscriptEntity) return object;\n    var message = new $root.SdkTranscriptEntity();\n    if (object.category != null) message.category = String(object.category);\n    if (object.confidence != null) message.confidence = Number(object.confidence);\n    if (object.content != null) message.content = String(object.content);\n    if (object.endTime != null) if ($util.Long) (message.endTime = $util.Long.fromValue(object.endTime)).unsigned = false;else if (typeof object.endTime === \"string\") message.endTime = parseInt(object.endTime, 10);else if (typeof object.endTime === \"number\") message.endTime = object.endTime;else if (typeof object.endTime === \"object\") message.endTime = new $util.LongBits(object.endTime.low >>> 0, object.endTime.high >>> 0).toNumber();\n    if (object.startTime != null) if ($util.Long) (message.startTime = $util.Long.fromValue(object.startTime)).unsigned = false;else if (typeof object.startTime === \"string\") message.startTime = parseInt(object.startTime, 10);else if (typeof object.startTime === \"number\") message.startTime = object.startTime;else if (typeof object.startTime === \"object\") message.startTime = new $util.LongBits(object.startTime.low >>> 0, object.startTime.high >>> 0).toNumber();\n    if (object.type != null) message.type = String(object.type);\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkTranscriptEntity message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkTranscriptEntity\n   * @static\n   * @param {SdkTranscriptEntity} message SdkTranscriptEntity\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkTranscriptEntity.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.category = \"\";\n      object.confidence = 0;\n      object.content = \"\";\n\n      if ($util.Long) {\n        var long = new $util.Long(0, 0, false);\n        object.endTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n      } else object.endTime = options.longs === String ? \"0\" : 0;\n\n      if ($util.Long) {\n        var long = new $util.Long(0, 0, false);\n        object.startTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n      } else object.startTime = options.longs === String ? \"0\" : 0;\n\n      object.type = \"\";\n    }\n\n    if (message.category != null && message.hasOwnProperty(\"category\")) object.category = message.category;\n    if (message.confidence != null && message.hasOwnProperty(\"confidence\")) object.confidence = options.json && !isFinite(message.confidence) ? String(message.confidence) : message.confidence;\n    if (message.content != null && message.hasOwnProperty(\"content\")) object.content = message.content;\n    if (message.endTime != null && message.hasOwnProperty(\"endTime\")) if (typeof message.endTime === \"number\") object.endTime = options.longs === String ? String(message.endTime) : message.endTime;else object.endTime = options.longs === String ? $util.Long.prototype.toString.call(message.endTime) : options.longs === Number ? new $util.LongBits(message.endTime.low >>> 0, message.endTime.high >>> 0).toNumber() : message.endTime;\n    if (message.startTime != null && message.hasOwnProperty(\"startTime\")) if (typeof message.startTime === \"number\") object.startTime = options.longs === String ? String(message.startTime) : message.startTime;else object.startTime = options.longs === String ? $util.Long.prototype.toString.call(message.startTime) : options.longs === Number ? new $util.LongBits(message.startTime.low >>> 0, message.startTime.high >>> 0).toNumber() : message.startTime;\n    if (message.type != null && message.hasOwnProperty(\"type\")) object.type = message.type;\n    return object;\n  };\n  /**\n   * Converts this SdkTranscriptEntity to JSON.\n   * @function toJSON\n   * @memberof SdkTranscriptEntity\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkTranscriptEntity.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkTranscriptEntity;\n}();\n\n$root.SdkTranscriptAlternative = function () {\n  /**\n   * Properties of a SdkTranscriptAlternative.\n   * @exports ISdkTranscriptAlternative\n   * @interface ISdkTranscriptAlternative\n   * @property {Array.<ISdkTranscriptItem>|null} [items] SdkTranscriptAlternative items\n   * @property {string|null} [transcript] SdkTranscriptAlternative transcript\n   * @property {Array.<ISdkTranscriptEntity>|null} [entities] SdkTranscriptAlternative entities\n   */\n\n  /**\n   * Constructs a new SdkTranscriptAlternative.\n   * @exports SdkTranscriptAlternative\n   * @classdesc Represents a SdkTranscriptAlternative.\n   * @implements ISdkTranscriptAlternative\n   * @constructor\n   * @param {ISdkTranscriptAlternative=} [properties] Properties to set\n   */\n  function SdkTranscriptAlternative(properties) {\n    this.items = [];\n    this.entities = [];\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkTranscriptAlternative items.\n   * @member {Array.<ISdkTranscriptItem>} items\n   * @memberof SdkTranscriptAlternative\n   * @instance\n   */\n\n\n  SdkTranscriptAlternative.prototype.items = $util.emptyArray;\n  /**\n   * SdkTranscriptAlternative transcript.\n   * @member {string} transcript\n   * @memberof SdkTranscriptAlternative\n   * @instance\n   */\n\n  SdkTranscriptAlternative.prototype.transcript = \"\";\n  /**\n   * SdkTranscriptAlternative entities.\n   * @member {Array.<ISdkTranscriptEntity>} entities\n   * @memberof SdkTranscriptAlternative\n   * @instance\n   */\n\n  SdkTranscriptAlternative.prototype.entities = $util.emptyArray;\n  /**\n   * Creates a new SdkTranscriptAlternative instance using the specified properties.\n   * @function create\n   * @memberof SdkTranscriptAlternative\n   * @static\n   * @param {ISdkTranscriptAlternative=} [properties] Properties to set\n   * @returns {SdkTranscriptAlternative} SdkTranscriptAlternative instance\n   */\n\n  SdkTranscriptAlternative.create = function create(properties) {\n    return new SdkTranscriptAlternative(properties);\n  };\n  /**\n   * Encodes the specified SdkTranscriptAlternative message. Does not implicitly {@link SdkTranscriptAlternative.verify|verify} messages.\n   * @function encode\n   * @memberof SdkTranscriptAlternative\n   * @static\n   * @param {ISdkTranscriptAlternative} message SdkTranscriptAlternative message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkTranscriptAlternative.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.items != null && message.items.length) for (var i = 0; i < message.items.length; ++i) $root.SdkTranscriptItem.encode(message.items[i], writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).fork()).ldelim();\n    if (message.transcript != null && message.hasOwnProperty(\"transcript\")) writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).string(message.transcript);\n    if (message.entities != null && message.entities.length) for (var i = 0; i < message.entities.length; ++i) $root.SdkTranscriptEntity.encode(message.entities[i], writer.uint32(\n    /* id 3, wireType 2 =*/\n    26).fork()).ldelim();\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkTranscriptAlternative message, length delimited. Does not implicitly {@link SdkTranscriptAlternative.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkTranscriptAlternative\n   * @static\n   * @param {ISdkTranscriptAlternative} message SdkTranscriptAlternative message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkTranscriptAlternative.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkTranscriptAlternative message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkTranscriptAlternative\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkTranscriptAlternative} SdkTranscriptAlternative\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkTranscriptAlternative.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkTranscriptAlternative();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          if (!(message.items && message.items.length)) message.items = [];\n          message.items.push($root.SdkTranscriptItem.decode(reader, reader.uint32()));\n          break;\n\n        case 2:\n          message.transcript = reader.string();\n          break;\n\n        case 3:\n          if (!(message.entities && message.entities.length)) message.entities = [];\n          message.entities.push($root.SdkTranscriptEntity.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkTranscriptAlternative message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkTranscriptAlternative\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkTranscriptAlternative} SdkTranscriptAlternative\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkTranscriptAlternative.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkTranscriptAlternative message.\n   * @function verify\n   * @memberof SdkTranscriptAlternative\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkTranscriptAlternative.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n    if (message.items != null && message.hasOwnProperty(\"items\")) {\n      if (!Array.isArray(message.items)) return \"items: array expected\";\n\n      for (var i = 0; i < message.items.length; ++i) {\n        var error = $root.SdkTranscriptItem.verify(message.items[i]);\n        if (error) return \"items.\" + error;\n      }\n    }\n\n    if (message.transcript != null && message.hasOwnProperty(\"transcript\")) if (!$util.isString(message.transcript)) return \"transcript: string expected\";\n\n    if (message.entities != null && message.hasOwnProperty(\"entities\")) {\n      if (!Array.isArray(message.entities)) return \"entities: array expected\";\n\n      for (var i = 0; i < message.entities.length; ++i) {\n        var error = $root.SdkTranscriptEntity.verify(message.entities[i]);\n        if (error) return \"entities.\" + error;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Creates a SdkTranscriptAlternative message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkTranscriptAlternative\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkTranscriptAlternative} SdkTranscriptAlternative\n   */\n\n\n  SdkTranscriptAlternative.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkTranscriptAlternative) return object;\n    var message = new $root.SdkTranscriptAlternative();\n\n    if (object.items) {\n      if (!Array.isArray(object.items)) throw TypeError(\".SdkTranscriptAlternative.items: array expected\");\n      message.items = [];\n\n      for (var i = 0; i < object.items.length; ++i) {\n        if (typeof object.items[i] !== \"object\") throw TypeError(\".SdkTranscriptAlternative.items: object expected\");\n        message.items[i] = $root.SdkTranscriptItem.fromObject(object.items[i]);\n      }\n    }\n\n    if (object.transcript != null) message.transcript = String(object.transcript);\n\n    if (object.entities) {\n      if (!Array.isArray(object.entities)) throw TypeError(\".SdkTranscriptAlternative.entities: array expected\");\n      message.entities = [];\n\n      for (var i = 0; i < object.entities.length; ++i) {\n        if (typeof object.entities[i] !== \"object\") throw TypeError(\".SdkTranscriptAlternative.entities: object expected\");\n        message.entities[i] = $root.SdkTranscriptEntity.fromObject(object.entities[i]);\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkTranscriptAlternative message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkTranscriptAlternative\n   * @static\n   * @param {SdkTranscriptAlternative} message SdkTranscriptAlternative\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkTranscriptAlternative.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.arrays || options.defaults) {\n      object.items = [];\n      object.entities = [];\n    }\n\n    if (options.defaults) object.transcript = \"\";\n\n    if (message.items && message.items.length) {\n      object.items = [];\n\n      for (var j = 0; j < message.items.length; ++j) object.items[j] = $root.SdkTranscriptItem.toObject(message.items[j], options);\n    }\n\n    if (message.transcript != null && message.hasOwnProperty(\"transcript\")) object.transcript = message.transcript;\n\n    if (message.entities && message.entities.length) {\n      object.entities = [];\n\n      for (var j = 0; j < message.entities.length; ++j) object.entities[j] = $root.SdkTranscriptEntity.toObject(message.entities[j], options);\n    }\n\n    return object;\n  };\n  /**\n   * Converts this SdkTranscriptAlternative to JSON.\n   * @function toJSON\n   * @memberof SdkTranscriptAlternative\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkTranscriptAlternative.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkTranscriptAlternative;\n}();\n\n$root.SdkTranscriptLanguageWithScore = function () {\n  /**\n   * Properties of a SdkTranscriptLanguageWithScore.\n   * @exports ISdkTranscriptLanguageWithScore\n   * @interface ISdkTranscriptLanguageWithScore\n   * @property {string|null} [languageCode] SdkTranscriptLanguageWithScore languageCode\n   * @property {number|null} [score] SdkTranscriptLanguageWithScore score\n   */\n\n  /**\n   * Constructs a new SdkTranscriptLanguageWithScore.\n   * @exports SdkTranscriptLanguageWithScore\n   * @classdesc Represents a SdkTranscriptLanguageWithScore.\n   * @implements ISdkTranscriptLanguageWithScore\n   * @constructor\n   * @param {ISdkTranscriptLanguageWithScore=} [properties] Properties to set\n   */\n  function SdkTranscriptLanguageWithScore(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkTranscriptLanguageWithScore languageCode.\n   * @member {string} languageCode\n   * @memberof SdkTranscriptLanguageWithScore\n   * @instance\n   */\n\n\n  SdkTranscriptLanguageWithScore.prototype.languageCode = \"\";\n  /**\n   * SdkTranscriptLanguageWithScore score.\n   * @member {number} score\n   * @memberof SdkTranscriptLanguageWithScore\n   * @instance\n   */\n\n  SdkTranscriptLanguageWithScore.prototype.score = 0;\n  /**\n   * Creates a new SdkTranscriptLanguageWithScore instance using the specified properties.\n   * @function create\n   * @memberof SdkTranscriptLanguageWithScore\n   * @static\n   * @param {ISdkTranscriptLanguageWithScore=} [properties] Properties to set\n   * @returns {SdkTranscriptLanguageWithScore} SdkTranscriptLanguageWithScore instance\n   */\n\n  SdkTranscriptLanguageWithScore.create = function create(properties) {\n    return new SdkTranscriptLanguageWithScore(properties);\n  };\n  /**\n   * Encodes the specified SdkTranscriptLanguageWithScore message. Does not implicitly {@link SdkTranscriptLanguageWithScore.verify|verify} messages.\n   * @function encode\n   * @memberof SdkTranscriptLanguageWithScore\n   * @static\n   * @param {ISdkTranscriptLanguageWithScore} message SdkTranscriptLanguageWithScore message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkTranscriptLanguageWithScore.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.languageCode != null && message.hasOwnProperty(\"languageCode\")) writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).string(message.languageCode);\n    if (message.score != null && message.hasOwnProperty(\"score\")) writer.uint32(\n    /* id 2, wireType 1 =*/\n    17).double(message.score);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkTranscriptLanguageWithScore message, length delimited. Does not implicitly {@link SdkTranscriptLanguageWithScore.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkTranscriptLanguageWithScore\n   * @static\n   * @param {ISdkTranscriptLanguageWithScore} message SdkTranscriptLanguageWithScore message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkTranscriptLanguageWithScore.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkTranscriptLanguageWithScore message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkTranscriptLanguageWithScore\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkTranscriptLanguageWithScore} SdkTranscriptLanguageWithScore\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkTranscriptLanguageWithScore.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkTranscriptLanguageWithScore();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.languageCode = reader.string();\n          break;\n\n        case 2:\n          message.score = reader.double();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkTranscriptLanguageWithScore message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkTranscriptLanguageWithScore\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkTranscriptLanguageWithScore} SdkTranscriptLanguageWithScore\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkTranscriptLanguageWithScore.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkTranscriptLanguageWithScore message.\n   * @function verify\n   * @memberof SdkTranscriptLanguageWithScore\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkTranscriptLanguageWithScore.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.languageCode != null && message.hasOwnProperty(\"languageCode\")) if (!$util.isString(message.languageCode)) return \"languageCode: string expected\";\n    if (message.score != null && message.hasOwnProperty(\"score\")) if (typeof message.score !== \"number\") return \"score: number expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkTranscriptLanguageWithScore message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkTranscriptLanguageWithScore\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkTranscriptLanguageWithScore} SdkTranscriptLanguageWithScore\n   */\n\n\n  SdkTranscriptLanguageWithScore.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkTranscriptLanguageWithScore) return object;\n    var message = new $root.SdkTranscriptLanguageWithScore();\n    if (object.languageCode != null) message.languageCode = String(object.languageCode);\n    if (object.score != null) message.score = Number(object.score);\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkTranscriptLanguageWithScore message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkTranscriptLanguageWithScore\n   * @static\n   * @param {SdkTranscriptLanguageWithScore} message SdkTranscriptLanguageWithScore\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkTranscriptLanguageWithScore.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.languageCode = \"\";\n      object.score = 0;\n    }\n\n    if (message.languageCode != null && message.hasOwnProperty(\"languageCode\")) object.languageCode = message.languageCode;\n    if (message.score != null && message.hasOwnProperty(\"score\")) object.score = options.json && !isFinite(message.score) ? String(message.score) : message.score;\n    return object;\n  };\n  /**\n   * Converts this SdkTranscriptLanguageWithScore to JSON.\n   * @function toJSON\n   * @memberof SdkTranscriptLanguageWithScore\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkTranscriptLanguageWithScore.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkTranscriptLanguageWithScore;\n}();\n\n$root.SdkTranscriptResult = function () {\n  /**\n   * Properties of a SdkTranscriptResult.\n   * @exports ISdkTranscriptResult\n   * @interface ISdkTranscriptResult\n   * @property {Array.<ISdkTranscriptAlternative>|null} [alternatives] SdkTranscriptResult alternatives\n   * @property {string|null} [channelId] SdkTranscriptResult channelId\n   * @property {number|Long|null} [endTime] SdkTranscriptResult endTime\n   * @property {boolean|null} [isPartial] SdkTranscriptResult isPartial\n   * @property {string|null} [resultId] SdkTranscriptResult resultId\n   * @property {number|Long|null} [startTime] SdkTranscriptResult startTime\n   * @property {string|null} [languageCode] SdkTranscriptResult languageCode\n   * @property {Array.<ISdkTranscriptLanguageWithScore>|null} [languageIdentification] SdkTranscriptResult languageIdentification\n   */\n\n  /**\n   * Constructs a new SdkTranscriptResult.\n   * @exports SdkTranscriptResult\n   * @classdesc Represents a SdkTranscriptResult.\n   * @implements ISdkTranscriptResult\n   * @constructor\n   * @param {ISdkTranscriptResult=} [properties] Properties to set\n   */\n  function SdkTranscriptResult(properties) {\n    this.alternatives = [];\n    this.languageIdentification = [];\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkTranscriptResult alternatives.\n   * @member {Array.<ISdkTranscriptAlternative>} alternatives\n   * @memberof SdkTranscriptResult\n   * @instance\n   */\n\n\n  SdkTranscriptResult.prototype.alternatives = $util.emptyArray;\n  /**\n   * SdkTranscriptResult channelId.\n   * @member {string} channelId\n   * @memberof SdkTranscriptResult\n   * @instance\n   */\n\n  SdkTranscriptResult.prototype.channelId = \"\";\n  /**\n   * SdkTranscriptResult endTime.\n   * @member {number|Long} endTime\n   * @memberof SdkTranscriptResult\n   * @instance\n   */\n\n  SdkTranscriptResult.prototype.endTime = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n  /**\n   * SdkTranscriptResult isPartial.\n   * @member {boolean} isPartial\n   * @memberof SdkTranscriptResult\n   * @instance\n   */\n\n  SdkTranscriptResult.prototype.isPartial = false;\n  /**\n   * SdkTranscriptResult resultId.\n   * @member {string} resultId\n   * @memberof SdkTranscriptResult\n   * @instance\n   */\n\n  SdkTranscriptResult.prototype.resultId = \"\";\n  /**\n   * SdkTranscriptResult startTime.\n   * @member {number|Long} startTime\n   * @memberof SdkTranscriptResult\n   * @instance\n   */\n\n  SdkTranscriptResult.prototype.startTime = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n  /**\n   * SdkTranscriptResult languageCode.\n   * @member {string} languageCode\n   * @memberof SdkTranscriptResult\n   * @instance\n   */\n\n  SdkTranscriptResult.prototype.languageCode = \"\";\n  /**\n   * SdkTranscriptResult languageIdentification.\n   * @member {Array.<ISdkTranscriptLanguageWithScore>} languageIdentification\n   * @memberof SdkTranscriptResult\n   * @instance\n   */\n\n  SdkTranscriptResult.prototype.languageIdentification = $util.emptyArray;\n  /**\n   * Creates a new SdkTranscriptResult instance using the specified properties.\n   * @function create\n   * @memberof SdkTranscriptResult\n   * @static\n   * @param {ISdkTranscriptResult=} [properties] Properties to set\n   * @returns {SdkTranscriptResult} SdkTranscriptResult instance\n   */\n\n  SdkTranscriptResult.create = function create(properties) {\n    return new SdkTranscriptResult(properties);\n  };\n  /**\n   * Encodes the specified SdkTranscriptResult message. Does not implicitly {@link SdkTranscriptResult.verify|verify} messages.\n   * @function encode\n   * @memberof SdkTranscriptResult\n   * @static\n   * @param {ISdkTranscriptResult} message SdkTranscriptResult message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkTranscriptResult.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.alternatives != null && message.alternatives.length) for (var i = 0; i < message.alternatives.length; ++i) $root.SdkTranscriptAlternative.encode(message.alternatives[i], writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).fork()).ldelim();\n    if (message.channelId != null && message.hasOwnProperty(\"channelId\")) writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).string(message.channelId);\n    if (message.endTime != null && message.hasOwnProperty(\"endTime\")) writer.uint32(\n    /* id 3, wireType 0 =*/\n    24).int64(message.endTime);\n    if (message.isPartial != null && message.hasOwnProperty(\"isPartial\")) writer.uint32(\n    /* id 4, wireType 0 =*/\n    32).bool(message.isPartial);\n    if (message.resultId != null && message.hasOwnProperty(\"resultId\")) writer.uint32(\n    /* id 5, wireType 2 =*/\n    42).string(message.resultId);\n    if (message.startTime != null && message.hasOwnProperty(\"startTime\")) writer.uint32(\n    /* id 6, wireType 0 =*/\n    48).int64(message.startTime);\n    if (message.languageCode != null && message.hasOwnProperty(\"languageCode\")) writer.uint32(\n    /* id 7, wireType 2 =*/\n    58).string(message.languageCode);\n    if (message.languageIdentification != null && message.languageIdentification.length) for (var i = 0; i < message.languageIdentification.length; ++i) $root.SdkTranscriptLanguageWithScore.encode(message.languageIdentification[i], writer.uint32(\n    /* id 8, wireType 2 =*/\n    66).fork()).ldelim();\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkTranscriptResult message, length delimited. Does not implicitly {@link SdkTranscriptResult.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkTranscriptResult\n   * @static\n   * @param {ISdkTranscriptResult} message SdkTranscriptResult message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkTranscriptResult.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkTranscriptResult message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkTranscriptResult\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkTranscriptResult} SdkTranscriptResult\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkTranscriptResult.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkTranscriptResult();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          if (!(message.alternatives && message.alternatives.length)) message.alternatives = [];\n          message.alternatives.push($root.SdkTranscriptAlternative.decode(reader, reader.uint32()));\n          break;\n\n        case 2:\n          message.channelId = reader.string();\n          break;\n\n        case 3:\n          message.endTime = reader.int64();\n          break;\n\n        case 4:\n          message.isPartial = reader.bool();\n          break;\n\n        case 5:\n          message.resultId = reader.string();\n          break;\n\n        case 6:\n          message.startTime = reader.int64();\n          break;\n\n        case 7:\n          message.languageCode = reader.string();\n          break;\n\n        case 8:\n          if (!(message.languageIdentification && message.languageIdentification.length)) message.languageIdentification = [];\n          message.languageIdentification.push($root.SdkTranscriptLanguageWithScore.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkTranscriptResult message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkTranscriptResult\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkTranscriptResult} SdkTranscriptResult\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkTranscriptResult.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkTranscriptResult message.\n   * @function verify\n   * @memberof SdkTranscriptResult\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkTranscriptResult.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n    if (message.alternatives != null && message.hasOwnProperty(\"alternatives\")) {\n      if (!Array.isArray(message.alternatives)) return \"alternatives: array expected\";\n\n      for (var i = 0; i < message.alternatives.length; ++i) {\n        var error = $root.SdkTranscriptAlternative.verify(message.alternatives[i]);\n        if (error) return \"alternatives.\" + error;\n      }\n    }\n\n    if (message.channelId != null && message.hasOwnProperty(\"channelId\")) if (!$util.isString(message.channelId)) return \"channelId: string expected\";\n    if (message.endTime != null && message.hasOwnProperty(\"endTime\")) if (!$util.isInteger(message.endTime) && !(message.endTime && $util.isInteger(message.endTime.low) && $util.isInteger(message.endTime.high))) return \"endTime: integer|Long expected\";\n    if (message.isPartial != null && message.hasOwnProperty(\"isPartial\")) if (typeof message.isPartial !== \"boolean\") return \"isPartial: boolean expected\";\n    if (message.resultId != null && message.hasOwnProperty(\"resultId\")) if (!$util.isString(message.resultId)) return \"resultId: string expected\";\n    if (message.startTime != null && message.hasOwnProperty(\"startTime\")) if (!$util.isInteger(message.startTime) && !(message.startTime && $util.isInteger(message.startTime.low) && $util.isInteger(message.startTime.high))) return \"startTime: integer|Long expected\";\n    if (message.languageCode != null && message.hasOwnProperty(\"languageCode\")) if (!$util.isString(message.languageCode)) return \"languageCode: string expected\";\n\n    if (message.languageIdentification != null && message.hasOwnProperty(\"languageIdentification\")) {\n      if (!Array.isArray(message.languageIdentification)) return \"languageIdentification: array expected\";\n\n      for (var i = 0; i < message.languageIdentification.length; ++i) {\n        var error = $root.SdkTranscriptLanguageWithScore.verify(message.languageIdentification[i]);\n        if (error) return \"languageIdentification.\" + error;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Creates a SdkTranscriptResult message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkTranscriptResult\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkTranscriptResult} SdkTranscriptResult\n   */\n\n\n  SdkTranscriptResult.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkTranscriptResult) return object;\n    var message = new $root.SdkTranscriptResult();\n\n    if (object.alternatives) {\n      if (!Array.isArray(object.alternatives)) throw TypeError(\".SdkTranscriptResult.alternatives: array expected\");\n      message.alternatives = [];\n\n      for (var i = 0; i < object.alternatives.length; ++i) {\n        if (typeof object.alternatives[i] !== \"object\") throw TypeError(\".SdkTranscriptResult.alternatives: object expected\");\n        message.alternatives[i] = $root.SdkTranscriptAlternative.fromObject(object.alternatives[i]);\n      }\n    }\n\n    if (object.channelId != null) message.channelId = String(object.channelId);\n    if (object.endTime != null) if ($util.Long) (message.endTime = $util.Long.fromValue(object.endTime)).unsigned = false;else if (typeof object.endTime === \"string\") message.endTime = parseInt(object.endTime, 10);else if (typeof object.endTime === \"number\") message.endTime = object.endTime;else if (typeof object.endTime === \"object\") message.endTime = new $util.LongBits(object.endTime.low >>> 0, object.endTime.high >>> 0).toNumber();\n    if (object.isPartial != null) message.isPartial = Boolean(object.isPartial);\n    if (object.resultId != null) message.resultId = String(object.resultId);\n    if (object.startTime != null) if ($util.Long) (message.startTime = $util.Long.fromValue(object.startTime)).unsigned = false;else if (typeof object.startTime === \"string\") message.startTime = parseInt(object.startTime, 10);else if (typeof object.startTime === \"number\") message.startTime = object.startTime;else if (typeof object.startTime === \"object\") message.startTime = new $util.LongBits(object.startTime.low >>> 0, object.startTime.high >>> 0).toNumber();\n    if (object.languageCode != null) message.languageCode = String(object.languageCode);\n\n    if (object.languageIdentification) {\n      if (!Array.isArray(object.languageIdentification)) throw TypeError(\".SdkTranscriptResult.languageIdentification: array expected\");\n      message.languageIdentification = [];\n\n      for (var i = 0; i < object.languageIdentification.length; ++i) {\n        if (typeof object.languageIdentification[i] !== \"object\") throw TypeError(\".SdkTranscriptResult.languageIdentification: object expected\");\n        message.languageIdentification[i] = $root.SdkTranscriptLanguageWithScore.fromObject(object.languageIdentification[i]);\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkTranscriptResult message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkTranscriptResult\n   * @static\n   * @param {SdkTranscriptResult} message SdkTranscriptResult\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkTranscriptResult.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.arrays || options.defaults) {\n      object.alternatives = [];\n      object.languageIdentification = [];\n    }\n\n    if (options.defaults) {\n      object.channelId = \"\";\n\n      if ($util.Long) {\n        var long = new $util.Long(0, 0, false);\n        object.endTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n      } else object.endTime = options.longs === String ? \"0\" : 0;\n\n      object.isPartial = false;\n      object.resultId = \"\";\n\n      if ($util.Long) {\n        var long = new $util.Long(0, 0, false);\n        object.startTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n      } else object.startTime = options.longs === String ? \"0\" : 0;\n\n      object.languageCode = \"\";\n    }\n\n    if (message.alternatives && message.alternatives.length) {\n      object.alternatives = [];\n\n      for (var j = 0; j < message.alternatives.length; ++j) object.alternatives[j] = $root.SdkTranscriptAlternative.toObject(message.alternatives[j], options);\n    }\n\n    if (message.channelId != null && message.hasOwnProperty(\"channelId\")) object.channelId = message.channelId;\n    if (message.endTime != null && message.hasOwnProperty(\"endTime\")) if (typeof message.endTime === \"number\") object.endTime = options.longs === String ? String(message.endTime) : message.endTime;else object.endTime = options.longs === String ? $util.Long.prototype.toString.call(message.endTime) : options.longs === Number ? new $util.LongBits(message.endTime.low >>> 0, message.endTime.high >>> 0).toNumber() : message.endTime;\n    if (message.isPartial != null && message.hasOwnProperty(\"isPartial\")) object.isPartial = message.isPartial;\n    if (message.resultId != null && message.hasOwnProperty(\"resultId\")) object.resultId = message.resultId;\n    if (message.startTime != null && message.hasOwnProperty(\"startTime\")) if (typeof message.startTime === \"number\") object.startTime = options.longs === String ? String(message.startTime) : message.startTime;else object.startTime = options.longs === String ? $util.Long.prototype.toString.call(message.startTime) : options.longs === Number ? new $util.LongBits(message.startTime.low >>> 0, message.startTime.high >>> 0).toNumber() : message.startTime;\n    if (message.languageCode != null && message.hasOwnProperty(\"languageCode\")) object.languageCode = message.languageCode;\n\n    if (message.languageIdentification && message.languageIdentification.length) {\n      object.languageIdentification = [];\n\n      for (var j = 0; j < message.languageIdentification.length; ++j) object.languageIdentification[j] = $root.SdkTranscriptLanguageWithScore.toObject(message.languageIdentification[j], options);\n    }\n\n    return object;\n  };\n  /**\n   * Converts this SdkTranscriptResult to JSON.\n   * @function toJSON\n   * @memberof SdkTranscriptResult\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkTranscriptResult.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkTranscriptResult;\n}();\n\n$root.SdkTranscript = function () {\n  /**\n   * Properties of a SdkTranscript.\n   * @exports ISdkTranscript\n   * @interface ISdkTranscript\n   * @property {Array.<ISdkTranscriptResult>|null} [results] SdkTranscript results\n   */\n\n  /**\n   * Constructs a new SdkTranscript.\n   * @exports SdkTranscript\n   * @classdesc Represents a SdkTranscript.\n   * @implements ISdkTranscript\n   * @constructor\n   * @param {ISdkTranscript=} [properties] Properties to set\n   */\n  function SdkTranscript(properties) {\n    this.results = [];\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkTranscript results.\n   * @member {Array.<ISdkTranscriptResult>} results\n   * @memberof SdkTranscript\n   * @instance\n   */\n\n\n  SdkTranscript.prototype.results = $util.emptyArray;\n  /**\n   * Creates a new SdkTranscript instance using the specified properties.\n   * @function create\n   * @memberof SdkTranscript\n   * @static\n   * @param {ISdkTranscript=} [properties] Properties to set\n   * @returns {SdkTranscript} SdkTranscript instance\n   */\n\n  SdkTranscript.create = function create(properties) {\n    return new SdkTranscript(properties);\n  };\n  /**\n   * Encodes the specified SdkTranscript message. Does not implicitly {@link SdkTranscript.verify|verify} messages.\n   * @function encode\n   * @memberof SdkTranscript\n   * @static\n   * @param {ISdkTranscript} message SdkTranscript message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkTranscript.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.results != null && message.results.length) for (var i = 0; i < message.results.length; ++i) $root.SdkTranscriptResult.encode(message.results[i], writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).fork()).ldelim();\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkTranscript message, length delimited. Does not implicitly {@link SdkTranscript.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkTranscript\n   * @static\n   * @param {ISdkTranscript} message SdkTranscript message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkTranscript.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkTranscript message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkTranscript\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkTranscript} SdkTranscript\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkTranscript.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkTranscript();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          if (!(message.results && message.results.length)) message.results = [];\n          message.results.push($root.SdkTranscriptResult.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkTranscript message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkTranscript\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkTranscript} SdkTranscript\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkTranscript.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkTranscript message.\n   * @function verify\n   * @memberof SdkTranscript\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkTranscript.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n    if (message.results != null && message.hasOwnProperty(\"results\")) {\n      if (!Array.isArray(message.results)) return \"results: array expected\";\n\n      for (var i = 0; i < message.results.length; ++i) {\n        var error = $root.SdkTranscriptResult.verify(message.results[i]);\n        if (error) return \"results.\" + error;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Creates a SdkTranscript message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkTranscript\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkTranscript} SdkTranscript\n   */\n\n\n  SdkTranscript.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkTranscript) return object;\n    var message = new $root.SdkTranscript();\n\n    if (object.results) {\n      if (!Array.isArray(object.results)) throw TypeError(\".SdkTranscript.results: array expected\");\n      message.results = [];\n\n      for (var i = 0; i < object.results.length; ++i) {\n        if (typeof object.results[i] !== \"object\") throw TypeError(\".SdkTranscript.results: object expected\");\n        message.results[i] = $root.SdkTranscriptResult.fromObject(object.results[i]);\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkTranscript message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkTranscript\n   * @static\n   * @param {SdkTranscript} message SdkTranscript\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkTranscript.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n    if (options.arrays || options.defaults) object.results = [];\n\n    if (message.results && message.results.length) {\n      object.results = [];\n\n      for (var j = 0; j < message.results.length; ++j) object.results[j] = $root.SdkTranscriptResult.toObject(message.results[j], options);\n    }\n\n    return object;\n  };\n  /**\n   * Converts this SdkTranscript to JSON.\n   * @function toJSON\n   * @memberof SdkTranscript\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkTranscript.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkTranscript;\n}();\n\n$root.SdkTranscriptionStatus = function () {\n  /**\n   * Properties of a SdkTranscriptionStatus.\n   * @exports ISdkTranscriptionStatus\n   * @interface ISdkTranscriptionStatus\n   * @property {SdkTranscriptionStatus.Type|null} [type] SdkTranscriptionStatus type\n   * @property {number|Long|null} [eventTime] SdkTranscriptionStatus eventTime\n   * @property {string|null} [transcriptionRegion] SdkTranscriptionStatus transcriptionRegion\n   * @property {string|null} [transcriptionConfiguration] SdkTranscriptionStatus transcriptionConfiguration\n   * @property {string|null} [message] SdkTranscriptionStatus message\n   */\n\n  /**\n   * Constructs a new SdkTranscriptionStatus.\n   * @exports SdkTranscriptionStatus\n   * @classdesc Represents a SdkTranscriptionStatus.\n   * @implements ISdkTranscriptionStatus\n   * @constructor\n   * @param {ISdkTranscriptionStatus=} [properties] Properties to set\n   */\n  function SdkTranscriptionStatus(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkTranscriptionStatus type.\n   * @member {SdkTranscriptionStatus.Type} type\n   * @memberof SdkTranscriptionStatus\n   * @instance\n   */\n\n\n  SdkTranscriptionStatus.prototype.type = 1;\n  /**\n   * SdkTranscriptionStatus eventTime.\n   * @member {number|Long} eventTime\n   * @memberof SdkTranscriptionStatus\n   * @instance\n   */\n\n  SdkTranscriptionStatus.prototype.eventTime = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n  /**\n   * SdkTranscriptionStatus transcriptionRegion.\n   * @member {string} transcriptionRegion\n   * @memberof SdkTranscriptionStatus\n   * @instance\n   */\n\n  SdkTranscriptionStatus.prototype.transcriptionRegion = \"\";\n  /**\n   * SdkTranscriptionStatus transcriptionConfiguration.\n   * @member {string} transcriptionConfiguration\n   * @memberof SdkTranscriptionStatus\n   * @instance\n   */\n\n  SdkTranscriptionStatus.prototype.transcriptionConfiguration = \"\";\n  /**\n   * SdkTranscriptionStatus message.\n   * @member {string} message\n   * @memberof SdkTranscriptionStatus\n   * @instance\n   */\n\n  SdkTranscriptionStatus.prototype.message = \"\";\n  /**\n   * Creates a new SdkTranscriptionStatus instance using the specified properties.\n   * @function create\n   * @memberof SdkTranscriptionStatus\n   * @static\n   * @param {ISdkTranscriptionStatus=} [properties] Properties to set\n   * @returns {SdkTranscriptionStatus} SdkTranscriptionStatus instance\n   */\n\n  SdkTranscriptionStatus.create = function create(properties) {\n    return new SdkTranscriptionStatus(properties);\n  };\n  /**\n   * Encodes the specified SdkTranscriptionStatus message. Does not implicitly {@link SdkTranscriptionStatus.verify|verify} messages.\n   * @function encode\n   * @memberof SdkTranscriptionStatus\n   * @static\n   * @param {ISdkTranscriptionStatus} message SdkTranscriptionStatus message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkTranscriptionStatus.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.type != null && message.hasOwnProperty(\"type\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).int32(message.type);\n    if (message.eventTime != null && message.hasOwnProperty(\"eventTime\")) writer.uint32(\n    /* id 2, wireType 0 =*/\n    16).int64(message.eventTime);\n    if (message.transcriptionRegion != null && message.hasOwnProperty(\"transcriptionRegion\")) writer.uint32(\n    /* id 3, wireType 2 =*/\n    26).string(message.transcriptionRegion);\n    if (message.transcriptionConfiguration != null && message.hasOwnProperty(\"transcriptionConfiguration\")) writer.uint32(\n    /* id 4, wireType 2 =*/\n    34).string(message.transcriptionConfiguration);\n    if (message.message != null && message.hasOwnProperty(\"message\")) writer.uint32(\n    /* id 5, wireType 2 =*/\n    42).string(message.message);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkTranscriptionStatus message, length delimited. Does not implicitly {@link SdkTranscriptionStatus.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkTranscriptionStatus\n   * @static\n   * @param {ISdkTranscriptionStatus} message SdkTranscriptionStatus message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkTranscriptionStatus.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkTranscriptionStatus message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkTranscriptionStatus\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkTranscriptionStatus} SdkTranscriptionStatus\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkTranscriptionStatus.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkTranscriptionStatus();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.int32();\n          break;\n\n        case 2:\n          message.eventTime = reader.int64();\n          break;\n\n        case 3:\n          message.transcriptionRegion = reader.string();\n          break;\n\n        case 4:\n          message.transcriptionConfiguration = reader.string();\n          break;\n\n        case 5:\n          message.message = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkTranscriptionStatus message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkTranscriptionStatus\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkTranscriptionStatus} SdkTranscriptionStatus\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkTranscriptionStatus.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkTranscriptionStatus message.\n   * @function verify\n   * @memberof SdkTranscriptionStatus\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkTranscriptionStatus.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.type != null && message.hasOwnProperty(\"type\")) switch (message.type) {\n      default:\n        return \"type: enum value expected\";\n\n      case 1:\n      case 2:\n      case 3:\n      case 4:\n      case 5:\n        break;\n    }\n    if (message.eventTime != null && message.hasOwnProperty(\"eventTime\")) if (!$util.isInteger(message.eventTime) && !(message.eventTime && $util.isInteger(message.eventTime.low) && $util.isInteger(message.eventTime.high))) return \"eventTime: integer|Long expected\";\n    if (message.transcriptionRegion != null && message.hasOwnProperty(\"transcriptionRegion\")) if (!$util.isString(message.transcriptionRegion)) return \"transcriptionRegion: string expected\";\n    if (message.transcriptionConfiguration != null && message.hasOwnProperty(\"transcriptionConfiguration\")) if (!$util.isString(message.transcriptionConfiguration)) return \"transcriptionConfiguration: string expected\";\n    if (message.message != null && message.hasOwnProperty(\"message\")) if (!$util.isString(message.message)) return \"message: string expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkTranscriptionStatus message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkTranscriptionStatus\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkTranscriptionStatus} SdkTranscriptionStatus\n   */\n\n\n  SdkTranscriptionStatus.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkTranscriptionStatus) return object;\n    var message = new $root.SdkTranscriptionStatus();\n\n    switch (object.type) {\n      case \"STARTED\":\n      case 1:\n        message.type = 1;\n        break;\n\n      case \"INTERRUPTED\":\n      case 2:\n        message.type = 2;\n        break;\n\n      case \"RESUMED\":\n      case 3:\n        message.type = 3;\n        break;\n\n      case \"STOPPED\":\n      case 4:\n        message.type = 4;\n        break;\n\n      case \"FAILED\":\n      case 5:\n        message.type = 5;\n        break;\n    }\n\n    if (object.eventTime != null) if ($util.Long) (message.eventTime = $util.Long.fromValue(object.eventTime)).unsigned = false;else if (typeof object.eventTime === \"string\") message.eventTime = parseInt(object.eventTime, 10);else if (typeof object.eventTime === \"number\") message.eventTime = object.eventTime;else if (typeof object.eventTime === \"object\") message.eventTime = new $util.LongBits(object.eventTime.low >>> 0, object.eventTime.high >>> 0).toNumber();\n    if (object.transcriptionRegion != null) message.transcriptionRegion = String(object.transcriptionRegion);\n    if (object.transcriptionConfiguration != null) message.transcriptionConfiguration = String(object.transcriptionConfiguration);\n    if (object.message != null) message.message = String(object.message);\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkTranscriptionStatus message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkTranscriptionStatus\n   * @static\n   * @param {SdkTranscriptionStatus} message SdkTranscriptionStatus\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkTranscriptionStatus.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.type = options.enums === String ? \"STARTED\" : 1;\n\n      if ($util.Long) {\n        var long = new $util.Long(0, 0, false);\n        object.eventTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n      } else object.eventTime = options.longs === String ? \"0\" : 0;\n\n      object.transcriptionRegion = \"\";\n      object.transcriptionConfiguration = \"\";\n      object.message = \"\";\n    }\n\n    if (message.type != null && message.hasOwnProperty(\"type\")) object.type = options.enums === String ? $root.SdkTranscriptionStatus.Type[message.type] : message.type;\n    if (message.eventTime != null && message.hasOwnProperty(\"eventTime\")) if (typeof message.eventTime === \"number\") object.eventTime = options.longs === String ? String(message.eventTime) : message.eventTime;else object.eventTime = options.longs === String ? $util.Long.prototype.toString.call(message.eventTime) : options.longs === Number ? new $util.LongBits(message.eventTime.low >>> 0, message.eventTime.high >>> 0).toNumber() : message.eventTime;\n    if (message.transcriptionRegion != null && message.hasOwnProperty(\"transcriptionRegion\")) object.transcriptionRegion = message.transcriptionRegion;\n    if (message.transcriptionConfiguration != null && message.hasOwnProperty(\"transcriptionConfiguration\")) object.transcriptionConfiguration = message.transcriptionConfiguration;\n    if (message.message != null && message.hasOwnProperty(\"message\")) object.message = message.message;\n    return object;\n  };\n  /**\n   * Converts this SdkTranscriptionStatus to JSON.\n   * @function toJSON\n   * @memberof SdkTranscriptionStatus\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkTranscriptionStatus.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n  /**\n   * Type enum.\n   * @name SdkTranscriptionStatus.Type\n   * @enum {string}\n   * @property {number} STARTED=1 STARTED value\n   * @property {number} INTERRUPTED=2 INTERRUPTED value\n   * @property {number} RESUMED=3 RESUMED value\n   * @property {number} STOPPED=4 STOPPED value\n   * @property {number} FAILED=5 FAILED value\n   */\n\n\n  SdkTranscriptionStatus.Type = function () {\n    var valuesById = {},\n        values = Object.create(valuesById);\n    values[valuesById[1] = \"STARTED\"] = 1;\n    values[valuesById[2] = \"INTERRUPTED\"] = 2;\n    values[valuesById[3] = \"RESUMED\"] = 3;\n    values[valuesById[4] = \"STOPPED\"] = 4;\n    values[valuesById[5] = \"FAILED\"] = 5;\n    return values;\n  }();\n\n  return SdkTranscriptionStatus;\n}();\n\n$root.SdkTranscriptEvent = function () {\n  /**\n   * Properties of a SdkTranscriptEvent.\n   * @exports ISdkTranscriptEvent\n   * @interface ISdkTranscriptEvent\n   * @property {ISdkTranscriptionStatus|null} [status] SdkTranscriptEvent status\n   * @property {ISdkTranscript|null} [transcript] SdkTranscriptEvent transcript\n   */\n\n  /**\n   * Constructs a new SdkTranscriptEvent.\n   * @exports SdkTranscriptEvent\n   * @classdesc Represents a SdkTranscriptEvent.\n   * @implements ISdkTranscriptEvent\n   * @constructor\n   * @param {ISdkTranscriptEvent=} [properties] Properties to set\n   */\n  function SdkTranscriptEvent(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkTranscriptEvent status.\n   * @member {ISdkTranscriptionStatus|null|undefined} status\n   * @memberof SdkTranscriptEvent\n   * @instance\n   */\n\n\n  SdkTranscriptEvent.prototype.status = null;\n  /**\n   * SdkTranscriptEvent transcript.\n   * @member {ISdkTranscript|null|undefined} transcript\n   * @memberof SdkTranscriptEvent\n   * @instance\n   */\n\n  SdkTranscriptEvent.prototype.transcript = null; // OneOf field names bound to virtual getters and setters\n\n  var $oneOfFields;\n  /**\n   * SdkTranscriptEvent Event.\n   * @member {\"status\"|\"transcript\"|undefined} Event\n   * @memberof SdkTranscriptEvent\n   * @instance\n   */\n\n  Object.defineProperty(SdkTranscriptEvent.prototype, \"Event\", {\n    get: $util.oneOfGetter($oneOfFields = [\"status\", \"transcript\"]),\n    set: $util.oneOfSetter($oneOfFields)\n  });\n  /**\n   * Creates a new SdkTranscriptEvent instance using the specified properties.\n   * @function create\n   * @memberof SdkTranscriptEvent\n   * @static\n   * @param {ISdkTranscriptEvent=} [properties] Properties to set\n   * @returns {SdkTranscriptEvent} SdkTranscriptEvent instance\n   */\n\n  SdkTranscriptEvent.create = function create(properties) {\n    return new SdkTranscriptEvent(properties);\n  };\n  /**\n   * Encodes the specified SdkTranscriptEvent message. Does not implicitly {@link SdkTranscriptEvent.verify|verify} messages.\n   * @function encode\n   * @memberof SdkTranscriptEvent\n   * @static\n   * @param {ISdkTranscriptEvent} message SdkTranscriptEvent message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkTranscriptEvent.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.status != null && message.hasOwnProperty(\"status\")) $root.SdkTranscriptionStatus.encode(message.status, writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).fork()).ldelim();\n    if (message.transcript != null && message.hasOwnProperty(\"transcript\")) $root.SdkTranscript.encode(message.transcript, writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).fork()).ldelim();\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkTranscriptEvent message, length delimited. Does not implicitly {@link SdkTranscriptEvent.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkTranscriptEvent\n   * @static\n   * @param {ISdkTranscriptEvent} message SdkTranscriptEvent message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkTranscriptEvent.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkTranscriptEvent message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkTranscriptEvent\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkTranscriptEvent} SdkTranscriptEvent\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkTranscriptEvent.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkTranscriptEvent();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.status = $root.SdkTranscriptionStatus.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.transcript = $root.SdkTranscript.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkTranscriptEvent message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkTranscriptEvent\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkTranscriptEvent} SdkTranscriptEvent\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkTranscriptEvent.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkTranscriptEvent message.\n   * @function verify\n   * @memberof SdkTranscriptEvent\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkTranscriptEvent.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    var properties = {};\n\n    if (message.status != null && message.hasOwnProperty(\"status\")) {\n      properties.Event = 1;\n      {\n        var error = $root.SdkTranscriptionStatus.verify(message.status);\n        if (error) return \"status.\" + error;\n      }\n    }\n\n    if (message.transcript != null && message.hasOwnProperty(\"transcript\")) {\n      if (properties.Event === 1) return \"Event: multiple values\";\n      properties.Event = 1;\n      {\n        var error = $root.SdkTranscript.verify(message.transcript);\n        if (error) return \"transcript.\" + error;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Creates a SdkTranscriptEvent message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkTranscriptEvent\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkTranscriptEvent} SdkTranscriptEvent\n   */\n\n\n  SdkTranscriptEvent.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkTranscriptEvent) return object;\n    var message = new $root.SdkTranscriptEvent();\n\n    if (object.status != null) {\n      if (typeof object.status !== \"object\") throw TypeError(\".SdkTranscriptEvent.status: object expected\");\n      message.status = $root.SdkTranscriptionStatus.fromObject(object.status);\n    }\n\n    if (object.transcript != null) {\n      if (typeof object.transcript !== \"object\") throw TypeError(\".SdkTranscriptEvent.transcript: object expected\");\n      message.transcript = $root.SdkTranscript.fromObject(object.transcript);\n    }\n\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkTranscriptEvent message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkTranscriptEvent\n   * @static\n   * @param {SdkTranscriptEvent} message SdkTranscriptEvent\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkTranscriptEvent.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (message.status != null && message.hasOwnProperty(\"status\")) {\n      object.status = $root.SdkTranscriptionStatus.toObject(message.status, options);\n      if (options.oneofs) object.Event = \"status\";\n    }\n\n    if (message.transcript != null && message.hasOwnProperty(\"transcript\")) {\n      object.transcript = $root.SdkTranscript.toObject(message.transcript, options);\n      if (options.oneofs) object.Event = \"transcript\";\n    }\n\n    return object;\n  };\n  /**\n   * Converts this SdkTranscriptEvent to JSON.\n   * @function toJSON\n   * @memberof SdkTranscriptEvent\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkTranscriptEvent.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkTranscriptEvent;\n}();\n\n$root.SdkTranscriptFrame = function () {\n  /**\n   * Properties of a SdkTranscriptFrame.\n   * @exports ISdkTranscriptFrame\n   * @interface ISdkTranscriptFrame\n   * @property {Array.<ISdkTranscriptEvent>|null} [events] SdkTranscriptFrame events\n   */\n\n  /**\n   * Constructs a new SdkTranscriptFrame.\n   * @exports SdkTranscriptFrame\n   * @classdesc Represents a SdkTranscriptFrame.\n   * @implements ISdkTranscriptFrame\n   * @constructor\n   * @param {ISdkTranscriptFrame=} [properties] Properties to set\n   */\n  function SdkTranscriptFrame(properties) {\n    this.events = [];\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkTranscriptFrame events.\n   * @member {Array.<ISdkTranscriptEvent>} events\n   * @memberof SdkTranscriptFrame\n   * @instance\n   */\n\n\n  SdkTranscriptFrame.prototype.events = $util.emptyArray;\n  /**\n   * Creates a new SdkTranscriptFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkTranscriptFrame\n   * @static\n   * @param {ISdkTranscriptFrame=} [properties] Properties to set\n   * @returns {SdkTranscriptFrame} SdkTranscriptFrame instance\n   */\n\n  SdkTranscriptFrame.create = function create(properties) {\n    return new SdkTranscriptFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkTranscriptFrame message. Does not implicitly {@link SdkTranscriptFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkTranscriptFrame\n   * @static\n   * @param {ISdkTranscriptFrame} message SdkTranscriptFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkTranscriptFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.events != null && message.events.length) for (var i = 0; i < message.events.length; ++i) $root.SdkTranscriptEvent.encode(message.events[i], writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).fork()).ldelim();\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkTranscriptFrame message, length delimited. Does not implicitly {@link SdkTranscriptFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkTranscriptFrame\n   * @static\n   * @param {ISdkTranscriptFrame} message SdkTranscriptFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkTranscriptFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkTranscriptFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkTranscriptFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkTranscriptFrame} SdkTranscriptFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkTranscriptFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkTranscriptFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          if (!(message.events && message.events.length)) message.events = [];\n          message.events.push($root.SdkTranscriptEvent.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkTranscriptFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkTranscriptFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkTranscriptFrame} SdkTranscriptFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkTranscriptFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkTranscriptFrame message.\n   * @function verify\n   * @memberof SdkTranscriptFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkTranscriptFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n    if (message.events != null && message.hasOwnProperty(\"events\")) {\n      if (!Array.isArray(message.events)) return \"events: array expected\";\n\n      for (var i = 0; i < message.events.length; ++i) {\n        var error = $root.SdkTranscriptEvent.verify(message.events[i]);\n        if (error) return \"events.\" + error;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Creates a SdkTranscriptFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkTranscriptFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkTranscriptFrame} SdkTranscriptFrame\n   */\n\n\n  SdkTranscriptFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkTranscriptFrame) return object;\n    var message = new $root.SdkTranscriptFrame();\n\n    if (object.events) {\n      if (!Array.isArray(object.events)) throw TypeError(\".SdkTranscriptFrame.events: array expected\");\n      message.events = [];\n\n      for (var i = 0; i < object.events.length; ++i) {\n        if (typeof object.events[i] !== \"object\") throw TypeError(\".SdkTranscriptFrame.events: object expected\");\n        message.events[i] = $root.SdkTranscriptEvent.fromObject(object.events[i]);\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkTranscriptFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkTranscriptFrame\n   * @static\n   * @param {SdkTranscriptFrame} message SdkTranscriptFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkTranscriptFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n    if (options.arrays || options.defaults) object.events = [];\n\n    if (message.events && message.events.length) {\n      object.events = [];\n\n      for (var j = 0; j < message.events.length; ++j) object.events[j] = $root.SdkTranscriptEvent.toObject(message.events[j], options);\n    }\n\n    return object;\n  };\n  /**\n   * Converts this SdkTranscriptFrame to JSON.\n   * @function toJSON\n   * @memberof SdkTranscriptFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkTranscriptFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkTranscriptFrame;\n}();\n\n$root.SdkRemoteVideoUpdateFrame = function () {\n  /**\n   * Properties of a SdkRemoteVideoUpdateFrame.\n   * @exports ISdkRemoteVideoUpdateFrame\n   * @interface ISdkRemoteVideoUpdateFrame\n   * @property {Array.<ISdkVideoSubscriptionConfiguration>|null} [addedOrUpdatedVideoSubscriptions] SdkRemoteVideoUpdateFrame addedOrUpdatedVideoSubscriptions\n   * @property {Array.<string>|null} [removedVideoSubscriptionMids] SdkRemoteVideoUpdateFrame removedVideoSubscriptionMids\n   */\n\n  /**\n   * Constructs a new SdkRemoteVideoUpdateFrame.\n   * @exports SdkRemoteVideoUpdateFrame\n   * @classdesc Represents a SdkRemoteVideoUpdateFrame.\n   * @implements ISdkRemoteVideoUpdateFrame\n   * @constructor\n   * @param {ISdkRemoteVideoUpdateFrame=} [properties] Properties to set\n   */\n  function SdkRemoteVideoUpdateFrame(properties) {\n    this.addedOrUpdatedVideoSubscriptions = [];\n    this.removedVideoSubscriptionMids = [];\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkRemoteVideoUpdateFrame addedOrUpdatedVideoSubscriptions.\n   * @member {Array.<ISdkVideoSubscriptionConfiguration>} addedOrUpdatedVideoSubscriptions\n   * @memberof SdkRemoteVideoUpdateFrame\n   * @instance\n   */\n\n\n  SdkRemoteVideoUpdateFrame.prototype.addedOrUpdatedVideoSubscriptions = $util.emptyArray;\n  /**\n   * SdkRemoteVideoUpdateFrame removedVideoSubscriptionMids.\n   * @member {Array.<string>} removedVideoSubscriptionMids\n   * @memberof SdkRemoteVideoUpdateFrame\n   * @instance\n   */\n\n  SdkRemoteVideoUpdateFrame.prototype.removedVideoSubscriptionMids = $util.emptyArray;\n  /**\n   * Creates a new SdkRemoteVideoUpdateFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkRemoteVideoUpdateFrame\n   * @static\n   * @param {ISdkRemoteVideoUpdateFrame=} [properties] Properties to set\n   * @returns {SdkRemoteVideoUpdateFrame} SdkRemoteVideoUpdateFrame instance\n   */\n\n  SdkRemoteVideoUpdateFrame.create = function create(properties) {\n    return new SdkRemoteVideoUpdateFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkRemoteVideoUpdateFrame message. Does not implicitly {@link SdkRemoteVideoUpdateFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkRemoteVideoUpdateFrame\n   * @static\n   * @param {ISdkRemoteVideoUpdateFrame} message SdkRemoteVideoUpdateFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkRemoteVideoUpdateFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.addedOrUpdatedVideoSubscriptions != null && message.addedOrUpdatedVideoSubscriptions.length) for (var i = 0; i < message.addedOrUpdatedVideoSubscriptions.length; ++i) $root.SdkVideoSubscriptionConfiguration.encode(message.addedOrUpdatedVideoSubscriptions[i], writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).fork()).ldelim();\n    if (message.removedVideoSubscriptionMids != null && message.removedVideoSubscriptionMids.length) for (var i = 0; i < message.removedVideoSubscriptionMids.length; ++i) writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).string(message.removedVideoSubscriptionMids[i]);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkRemoteVideoUpdateFrame message, length delimited. Does not implicitly {@link SdkRemoteVideoUpdateFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkRemoteVideoUpdateFrame\n   * @static\n   * @param {ISdkRemoteVideoUpdateFrame} message SdkRemoteVideoUpdateFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkRemoteVideoUpdateFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkRemoteVideoUpdateFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkRemoteVideoUpdateFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkRemoteVideoUpdateFrame} SdkRemoteVideoUpdateFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkRemoteVideoUpdateFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkRemoteVideoUpdateFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          if (!(message.addedOrUpdatedVideoSubscriptions && message.addedOrUpdatedVideoSubscriptions.length)) message.addedOrUpdatedVideoSubscriptions = [];\n          message.addedOrUpdatedVideoSubscriptions.push($root.SdkVideoSubscriptionConfiguration.decode(reader, reader.uint32()));\n          break;\n\n        case 2:\n          if (!(message.removedVideoSubscriptionMids && message.removedVideoSubscriptionMids.length)) message.removedVideoSubscriptionMids = [];\n          message.removedVideoSubscriptionMids.push(reader.string());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkRemoteVideoUpdateFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkRemoteVideoUpdateFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkRemoteVideoUpdateFrame} SdkRemoteVideoUpdateFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkRemoteVideoUpdateFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkRemoteVideoUpdateFrame message.\n   * @function verify\n   * @memberof SdkRemoteVideoUpdateFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkRemoteVideoUpdateFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n    if (message.addedOrUpdatedVideoSubscriptions != null && message.hasOwnProperty(\"addedOrUpdatedVideoSubscriptions\")) {\n      if (!Array.isArray(message.addedOrUpdatedVideoSubscriptions)) return \"addedOrUpdatedVideoSubscriptions: array expected\";\n\n      for (var i = 0; i < message.addedOrUpdatedVideoSubscriptions.length; ++i) {\n        var error = $root.SdkVideoSubscriptionConfiguration.verify(message.addedOrUpdatedVideoSubscriptions[i]);\n        if (error) return \"addedOrUpdatedVideoSubscriptions.\" + error;\n      }\n    }\n\n    if (message.removedVideoSubscriptionMids != null && message.hasOwnProperty(\"removedVideoSubscriptionMids\")) {\n      if (!Array.isArray(message.removedVideoSubscriptionMids)) return \"removedVideoSubscriptionMids: array expected\";\n\n      for (var i = 0; i < message.removedVideoSubscriptionMids.length; ++i) if (!$util.isString(message.removedVideoSubscriptionMids[i])) return \"removedVideoSubscriptionMids: string[] expected\";\n    }\n\n    return null;\n  };\n  /**\n   * Creates a SdkRemoteVideoUpdateFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkRemoteVideoUpdateFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkRemoteVideoUpdateFrame} SdkRemoteVideoUpdateFrame\n   */\n\n\n  SdkRemoteVideoUpdateFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkRemoteVideoUpdateFrame) return object;\n    var message = new $root.SdkRemoteVideoUpdateFrame();\n\n    if (object.addedOrUpdatedVideoSubscriptions) {\n      if (!Array.isArray(object.addedOrUpdatedVideoSubscriptions)) throw TypeError(\".SdkRemoteVideoUpdateFrame.addedOrUpdatedVideoSubscriptions: array expected\");\n      message.addedOrUpdatedVideoSubscriptions = [];\n\n      for (var i = 0; i < object.addedOrUpdatedVideoSubscriptions.length; ++i) {\n        if (typeof object.addedOrUpdatedVideoSubscriptions[i] !== \"object\") throw TypeError(\".SdkRemoteVideoUpdateFrame.addedOrUpdatedVideoSubscriptions: object expected\");\n        message.addedOrUpdatedVideoSubscriptions[i] = $root.SdkVideoSubscriptionConfiguration.fromObject(object.addedOrUpdatedVideoSubscriptions[i]);\n      }\n    }\n\n    if (object.removedVideoSubscriptionMids) {\n      if (!Array.isArray(object.removedVideoSubscriptionMids)) throw TypeError(\".SdkRemoteVideoUpdateFrame.removedVideoSubscriptionMids: array expected\");\n      message.removedVideoSubscriptionMids = [];\n\n      for (var i = 0; i < object.removedVideoSubscriptionMids.length; ++i) message.removedVideoSubscriptionMids[i] = String(object.removedVideoSubscriptionMids[i]);\n    }\n\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkRemoteVideoUpdateFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkRemoteVideoUpdateFrame\n   * @static\n   * @param {SdkRemoteVideoUpdateFrame} message SdkRemoteVideoUpdateFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkRemoteVideoUpdateFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.arrays || options.defaults) {\n      object.addedOrUpdatedVideoSubscriptions = [];\n      object.removedVideoSubscriptionMids = [];\n    }\n\n    if (message.addedOrUpdatedVideoSubscriptions && message.addedOrUpdatedVideoSubscriptions.length) {\n      object.addedOrUpdatedVideoSubscriptions = [];\n\n      for (var j = 0; j < message.addedOrUpdatedVideoSubscriptions.length; ++j) object.addedOrUpdatedVideoSubscriptions[j] = $root.SdkVideoSubscriptionConfiguration.toObject(message.addedOrUpdatedVideoSubscriptions[j], options);\n    }\n\n    if (message.removedVideoSubscriptionMids && message.removedVideoSubscriptionMids.length) {\n      object.removedVideoSubscriptionMids = [];\n\n      for (var j = 0; j < message.removedVideoSubscriptionMids.length; ++j) object.removedVideoSubscriptionMids[j] = message.removedVideoSubscriptionMids[j];\n    }\n\n    return object;\n  };\n  /**\n   * Converts this SdkRemoteVideoUpdateFrame to JSON.\n   * @function toJSON\n   * @memberof SdkRemoteVideoUpdateFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkRemoteVideoUpdateFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkRemoteVideoUpdateFrame;\n}();\n\n$root.SdkVideoSubscriptionConfiguration = function () {\n  /**\n   * Properties of a SdkVideoSubscriptionConfiguration.\n   * @exports ISdkVideoSubscriptionConfiguration\n   * @interface ISdkVideoSubscriptionConfiguration\n   * @property {string} mid SdkVideoSubscriptionConfiguration mid\n   * @property {string|null} [attendeeId] SdkVideoSubscriptionConfiguration attendeeId\n   * @property {number|null} [streamId] SdkVideoSubscriptionConfiguration streamId\n   */\n\n  /**\n   * Constructs a new SdkVideoSubscriptionConfiguration.\n   * @exports SdkVideoSubscriptionConfiguration\n   * @classdesc Represents a SdkVideoSubscriptionConfiguration.\n   * @implements ISdkVideoSubscriptionConfiguration\n   * @constructor\n   * @param {ISdkVideoSubscriptionConfiguration=} [properties] Properties to set\n   */\n  function SdkVideoSubscriptionConfiguration(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkVideoSubscriptionConfiguration mid.\n   * @member {string} mid\n   * @memberof SdkVideoSubscriptionConfiguration\n   * @instance\n   */\n\n\n  SdkVideoSubscriptionConfiguration.prototype.mid = \"\";\n  /**\n   * SdkVideoSubscriptionConfiguration attendeeId.\n   * @member {string} attendeeId\n   * @memberof SdkVideoSubscriptionConfiguration\n   * @instance\n   */\n\n  SdkVideoSubscriptionConfiguration.prototype.attendeeId = \"\";\n  /**\n   * SdkVideoSubscriptionConfiguration streamId.\n   * @member {number} streamId\n   * @memberof SdkVideoSubscriptionConfiguration\n   * @instance\n   */\n\n  SdkVideoSubscriptionConfiguration.prototype.streamId = 0;\n  /**\n   * Creates a new SdkVideoSubscriptionConfiguration instance using the specified properties.\n   * @function create\n   * @memberof SdkVideoSubscriptionConfiguration\n   * @static\n   * @param {ISdkVideoSubscriptionConfiguration=} [properties] Properties to set\n   * @returns {SdkVideoSubscriptionConfiguration} SdkVideoSubscriptionConfiguration instance\n   */\n\n  SdkVideoSubscriptionConfiguration.create = function create(properties) {\n    return new SdkVideoSubscriptionConfiguration(properties);\n  };\n  /**\n   * Encodes the specified SdkVideoSubscriptionConfiguration message. Does not implicitly {@link SdkVideoSubscriptionConfiguration.verify|verify} messages.\n   * @function encode\n   * @memberof SdkVideoSubscriptionConfiguration\n   * @static\n   * @param {ISdkVideoSubscriptionConfiguration} message SdkVideoSubscriptionConfiguration message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkVideoSubscriptionConfiguration.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).string(message.mid);\n    if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\")) writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).string(message.attendeeId);\n    if (message.streamId != null && message.hasOwnProperty(\"streamId\")) writer.uint32(\n    /* id 3, wireType 0 =*/\n    24).uint32(message.streamId);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkVideoSubscriptionConfiguration message, length delimited. Does not implicitly {@link SdkVideoSubscriptionConfiguration.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkVideoSubscriptionConfiguration\n   * @static\n   * @param {ISdkVideoSubscriptionConfiguration} message SdkVideoSubscriptionConfiguration message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkVideoSubscriptionConfiguration.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkVideoSubscriptionConfiguration message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkVideoSubscriptionConfiguration\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkVideoSubscriptionConfiguration} SdkVideoSubscriptionConfiguration\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkVideoSubscriptionConfiguration.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkVideoSubscriptionConfiguration();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.mid = reader.string();\n          break;\n\n        case 2:\n          message.attendeeId = reader.string();\n          break;\n\n        case 3:\n          message.streamId = reader.uint32();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    if (!message.hasOwnProperty(\"mid\")) throw $util.ProtocolError(\"missing required 'mid'\", {\n      instance: message\n    });\n    return message;\n  };\n  /**\n   * Decodes a SdkVideoSubscriptionConfiguration message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkVideoSubscriptionConfiguration\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkVideoSubscriptionConfiguration} SdkVideoSubscriptionConfiguration\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkVideoSubscriptionConfiguration.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkVideoSubscriptionConfiguration message.\n   * @function verify\n   * @memberof SdkVideoSubscriptionConfiguration\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkVideoSubscriptionConfiguration.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (!$util.isString(message.mid)) return \"mid: string expected\";\n    if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\")) if (!$util.isString(message.attendeeId)) return \"attendeeId: string expected\";\n    if (message.streamId != null && message.hasOwnProperty(\"streamId\")) if (!$util.isInteger(message.streamId)) return \"streamId: integer expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkVideoSubscriptionConfiguration message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkVideoSubscriptionConfiguration\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkVideoSubscriptionConfiguration} SdkVideoSubscriptionConfiguration\n   */\n\n\n  SdkVideoSubscriptionConfiguration.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkVideoSubscriptionConfiguration) return object;\n    var message = new $root.SdkVideoSubscriptionConfiguration();\n    if (object.mid != null) message.mid = String(object.mid);\n    if (object.attendeeId != null) message.attendeeId = String(object.attendeeId);\n    if (object.streamId != null) message.streamId = object.streamId >>> 0;\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkVideoSubscriptionConfiguration message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkVideoSubscriptionConfiguration\n   * @static\n   * @param {SdkVideoSubscriptionConfiguration} message SdkVideoSubscriptionConfiguration\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkVideoSubscriptionConfiguration.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.mid = \"\";\n      object.attendeeId = \"\";\n      object.streamId = 0;\n    }\n\n    if (message.mid != null && message.hasOwnProperty(\"mid\")) object.mid = message.mid;\n    if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\")) object.attendeeId = message.attendeeId;\n    if (message.streamId != null && message.hasOwnProperty(\"streamId\")) object.streamId = message.streamId;\n    return object;\n  };\n  /**\n   * Converts this SdkVideoSubscriptionConfiguration to JSON.\n   * @function toJSON\n   * @memberof SdkVideoSubscriptionConfiguration\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkVideoSubscriptionConfiguration.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkVideoSubscriptionConfiguration;\n}();\n\n$root.SdkPrimaryMeetingJoinFrame = function () {\n  /**\n   * Properties of a SdkPrimaryMeetingJoinFrame.\n   * @exports ISdkPrimaryMeetingJoinFrame\n   * @interface ISdkPrimaryMeetingJoinFrame\n   * @property {ISdkMeetingSessionCredentials|null} [credentials] SdkPrimaryMeetingJoinFrame credentials\n   */\n\n  /**\n   * Constructs a new SdkPrimaryMeetingJoinFrame.\n   * @exports SdkPrimaryMeetingJoinFrame\n   * @classdesc Represents a SdkPrimaryMeetingJoinFrame.\n   * @implements ISdkPrimaryMeetingJoinFrame\n   * @constructor\n   * @param {ISdkPrimaryMeetingJoinFrame=} [properties] Properties to set\n   */\n  function SdkPrimaryMeetingJoinFrame(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkPrimaryMeetingJoinFrame credentials.\n   * @member {ISdkMeetingSessionCredentials|null|undefined} credentials\n   * @memberof SdkPrimaryMeetingJoinFrame\n   * @instance\n   */\n\n\n  SdkPrimaryMeetingJoinFrame.prototype.credentials = null;\n  /**\n   * Creates a new SdkPrimaryMeetingJoinFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkPrimaryMeetingJoinFrame\n   * @static\n   * @param {ISdkPrimaryMeetingJoinFrame=} [properties] Properties to set\n   * @returns {SdkPrimaryMeetingJoinFrame} SdkPrimaryMeetingJoinFrame instance\n   */\n\n  SdkPrimaryMeetingJoinFrame.create = function create(properties) {\n    return new SdkPrimaryMeetingJoinFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkPrimaryMeetingJoinFrame message. Does not implicitly {@link SdkPrimaryMeetingJoinFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkPrimaryMeetingJoinFrame\n   * @static\n   * @param {ISdkPrimaryMeetingJoinFrame} message SdkPrimaryMeetingJoinFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkPrimaryMeetingJoinFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.credentials != null && message.hasOwnProperty(\"credentials\")) $root.SdkMeetingSessionCredentials.encode(message.credentials, writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).fork()).ldelim();\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkPrimaryMeetingJoinFrame message, length delimited. Does not implicitly {@link SdkPrimaryMeetingJoinFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkPrimaryMeetingJoinFrame\n   * @static\n   * @param {ISdkPrimaryMeetingJoinFrame} message SdkPrimaryMeetingJoinFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkPrimaryMeetingJoinFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkPrimaryMeetingJoinFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkPrimaryMeetingJoinFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkPrimaryMeetingJoinFrame} SdkPrimaryMeetingJoinFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkPrimaryMeetingJoinFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkPrimaryMeetingJoinFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.credentials = $root.SdkMeetingSessionCredentials.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkPrimaryMeetingJoinFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkPrimaryMeetingJoinFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkPrimaryMeetingJoinFrame} SdkPrimaryMeetingJoinFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkPrimaryMeetingJoinFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkPrimaryMeetingJoinFrame message.\n   * @function verify\n   * @memberof SdkPrimaryMeetingJoinFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkPrimaryMeetingJoinFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n    if (message.credentials != null && message.hasOwnProperty(\"credentials\")) {\n      var error = $root.SdkMeetingSessionCredentials.verify(message.credentials);\n      if (error) return \"credentials.\" + error;\n    }\n\n    return null;\n  };\n  /**\n   * Creates a SdkPrimaryMeetingJoinFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkPrimaryMeetingJoinFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkPrimaryMeetingJoinFrame} SdkPrimaryMeetingJoinFrame\n   */\n\n\n  SdkPrimaryMeetingJoinFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkPrimaryMeetingJoinFrame) return object;\n    var message = new $root.SdkPrimaryMeetingJoinFrame();\n\n    if (object.credentials != null) {\n      if (typeof object.credentials !== \"object\") throw TypeError(\".SdkPrimaryMeetingJoinFrame.credentials: object expected\");\n      message.credentials = $root.SdkMeetingSessionCredentials.fromObject(object.credentials);\n    }\n\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkPrimaryMeetingJoinFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkPrimaryMeetingJoinFrame\n   * @static\n   * @param {SdkPrimaryMeetingJoinFrame} message SdkPrimaryMeetingJoinFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkPrimaryMeetingJoinFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n    if (options.defaults) object.credentials = null;\n    if (message.credentials != null && message.hasOwnProperty(\"credentials\")) object.credentials = $root.SdkMeetingSessionCredentials.toObject(message.credentials, options);\n    return object;\n  };\n  /**\n   * Converts this SdkPrimaryMeetingJoinFrame to JSON.\n   * @function toJSON\n   * @memberof SdkPrimaryMeetingJoinFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkPrimaryMeetingJoinFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkPrimaryMeetingJoinFrame;\n}();\n\n$root.SdkPrimaryMeetingJoinAckFrame = function () {\n  /**\n   * Properties of a SdkPrimaryMeetingJoinAckFrame.\n   * @exports ISdkPrimaryMeetingJoinAckFrame\n   * @interface ISdkPrimaryMeetingJoinAckFrame\n   */\n\n  /**\n   * Constructs a new SdkPrimaryMeetingJoinAckFrame.\n   * @exports SdkPrimaryMeetingJoinAckFrame\n   * @classdesc Represents a SdkPrimaryMeetingJoinAckFrame.\n   * @implements ISdkPrimaryMeetingJoinAckFrame\n   * @constructor\n   * @param {ISdkPrimaryMeetingJoinAckFrame=} [properties] Properties to set\n   */\n  function SdkPrimaryMeetingJoinAckFrame(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * Creates a new SdkPrimaryMeetingJoinAckFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkPrimaryMeetingJoinAckFrame\n   * @static\n   * @param {ISdkPrimaryMeetingJoinAckFrame=} [properties] Properties to set\n   * @returns {SdkPrimaryMeetingJoinAckFrame} SdkPrimaryMeetingJoinAckFrame instance\n   */\n\n\n  SdkPrimaryMeetingJoinAckFrame.create = function create(properties) {\n    return new SdkPrimaryMeetingJoinAckFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkPrimaryMeetingJoinAckFrame message. Does not implicitly {@link SdkPrimaryMeetingJoinAckFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkPrimaryMeetingJoinAckFrame\n   * @static\n   * @param {ISdkPrimaryMeetingJoinAckFrame} message SdkPrimaryMeetingJoinAckFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkPrimaryMeetingJoinAckFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkPrimaryMeetingJoinAckFrame message, length delimited. Does not implicitly {@link SdkPrimaryMeetingJoinAckFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkPrimaryMeetingJoinAckFrame\n   * @static\n   * @param {ISdkPrimaryMeetingJoinAckFrame} message SdkPrimaryMeetingJoinAckFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkPrimaryMeetingJoinAckFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkPrimaryMeetingJoinAckFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkPrimaryMeetingJoinAckFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkPrimaryMeetingJoinAckFrame} SdkPrimaryMeetingJoinAckFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkPrimaryMeetingJoinAckFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkPrimaryMeetingJoinAckFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkPrimaryMeetingJoinAckFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkPrimaryMeetingJoinAckFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkPrimaryMeetingJoinAckFrame} SdkPrimaryMeetingJoinAckFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkPrimaryMeetingJoinAckFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkPrimaryMeetingJoinAckFrame message.\n   * @function verify\n   * @memberof SdkPrimaryMeetingJoinAckFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkPrimaryMeetingJoinAckFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkPrimaryMeetingJoinAckFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkPrimaryMeetingJoinAckFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkPrimaryMeetingJoinAckFrame} SdkPrimaryMeetingJoinAckFrame\n   */\n\n\n  SdkPrimaryMeetingJoinAckFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkPrimaryMeetingJoinAckFrame) return object;\n    return new $root.SdkPrimaryMeetingJoinAckFrame();\n  };\n  /**\n   * Creates a plain object from a SdkPrimaryMeetingJoinAckFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkPrimaryMeetingJoinAckFrame\n   * @static\n   * @param {SdkPrimaryMeetingJoinAckFrame} message SdkPrimaryMeetingJoinAckFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkPrimaryMeetingJoinAckFrame.toObject = function toObject() {\n    return {};\n  };\n  /**\n   * Converts this SdkPrimaryMeetingJoinAckFrame to JSON.\n   * @function toJSON\n   * @memberof SdkPrimaryMeetingJoinAckFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkPrimaryMeetingJoinAckFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkPrimaryMeetingJoinAckFrame;\n}();\n\n$root.SdkPrimaryMeetingLeaveFrame = function () {\n  /**\n   * Properties of a SdkPrimaryMeetingLeaveFrame.\n   * @exports ISdkPrimaryMeetingLeaveFrame\n   * @interface ISdkPrimaryMeetingLeaveFrame\n   */\n\n  /**\n   * Constructs a new SdkPrimaryMeetingLeaveFrame.\n   * @exports SdkPrimaryMeetingLeaveFrame\n   * @classdesc Represents a SdkPrimaryMeetingLeaveFrame.\n   * @implements ISdkPrimaryMeetingLeaveFrame\n   * @constructor\n   * @param {ISdkPrimaryMeetingLeaveFrame=} [properties] Properties to set\n   */\n  function SdkPrimaryMeetingLeaveFrame(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * Creates a new SdkPrimaryMeetingLeaveFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkPrimaryMeetingLeaveFrame\n   * @static\n   * @param {ISdkPrimaryMeetingLeaveFrame=} [properties] Properties to set\n   * @returns {SdkPrimaryMeetingLeaveFrame} SdkPrimaryMeetingLeaveFrame instance\n   */\n\n\n  SdkPrimaryMeetingLeaveFrame.create = function create(properties) {\n    return new SdkPrimaryMeetingLeaveFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkPrimaryMeetingLeaveFrame message. Does not implicitly {@link SdkPrimaryMeetingLeaveFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkPrimaryMeetingLeaveFrame\n   * @static\n   * @param {ISdkPrimaryMeetingLeaveFrame} message SdkPrimaryMeetingLeaveFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkPrimaryMeetingLeaveFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkPrimaryMeetingLeaveFrame message, length delimited. Does not implicitly {@link SdkPrimaryMeetingLeaveFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkPrimaryMeetingLeaveFrame\n   * @static\n   * @param {ISdkPrimaryMeetingLeaveFrame} message SdkPrimaryMeetingLeaveFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkPrimaryMeetingLeaveFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkPrimaryMeetingLeaveFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkPrimaryMeetingLeaveFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkPrimaryMeetingLeaveFrame} SdkPrimaryMeetingLeaveFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkPrimaryMeetingLeaveFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkPrimaryMeetingLeaveFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkPrimaryMeetingLeaveFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkPrimaryMeetingLeaveFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkPrimaryMeetingLeaveFrame} SdkPrimaryMeetingLeaveFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkPrimaryMeetingLeaveFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkPrimaryMeetingLeaveFrame message.\n   * @function verify\n   * @memberof SdkPrimaryMeetingLeaveFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkPrimaryMeetingLeaveFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkPrimaryMeetingLeaveFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkPrimaryMeetingLeaveFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkPrimaryMeetingLeaveFrame} SdkPrimaryMeetingLeaveFrame\n   */\n\n\n  SdkPrimaryMeetingLeaveFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkPrimaryMeetingLeaveFrame) return object;\n    return new $root.SdkPrimaryMeetingLeaveFrame();\n  };\n  /**\n   * Creates a plain object from a SdkPrimaryMeetingLeaveFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkPrimaryMeetingLeaveFrame\n   * @static\n   * @param {SdkPrimaryMeetingLeaveFrame} message SdkPrimaryMeetingLeaveFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkPrimaryMeetingLeaveFrame.toObject = function toObject() {\n    return {};\n  };\n  /**\n   * Converts this SdkPrimaryMeetingLeaveFrame to JSON.\n   * @function toJSON\n   * @memberof SdkPrimaryMeetingLeaveFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkPrimaryMeetingLeaveFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkPrimaryMeetingLeaveFrame;\n}();\n\n$root.SdkMeetingSessionCredentials = function () {\n  /**\n   * Properties of a SdkMeetingSessionCredentials.\n   * @exports ISdkMeetingSessionCredentials\n   * @interface ISdkMeetingSessionCredentials\n   * @property {string|null} [attendeeId] SdkMeetingSessionCredentials attendeeId\n   * @property {string|null} [externalUserId] SdkMeetingSessionCredentials externalUserId\n   * @property {string|null} [joinToken] SdkMeetingSessionCredentials joinToken\n   */\n\n  /**\n   * Constructs a new SdkMeetingSessionCredentials.\n   * @exports SdkMeetingSessionCredentials\n   * @classdesc Represents a SdkMeetingSessionCredentials.\n   * @implements ISdkMeetingSessionCredentials\n   * @constructor\n   * @param {ISdkMeetingSessionCredentials=} [properties] Properties to set\n   */\n  function SdkMeetingSessionCredentials(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkMeetingSessionCredentials attendeeId.\n   * @member {string} attendeeId\n   * @memberof SdkMeetingSessionCredentials\n   * @instance\n   */\n\n\n  SdkMeetingSessionCredentials.prototype.attendeeId = \"\";\n  /**\n   * SdkMeetingSessionCredentials externalUserId.\n   * @member {string} externalUserId\n   * @memberof SdkMeetingSessionCredentials\n   * @instance\n   */\n\n  SdkMeetingSessionCredentials.prototype.externalUserId = \"\";\n  /**\n   * SdkMeetingSessionCredentials joinToken.\n   * @member {string} joinToken\n   * @memberof SdkMeetingSessionCredentials\n   * @instance\n   */\n\n  SdkMeetingSessionCredentials.prototype.joinToken = \"\";\n  /**\n   * Creates a new SdkMeetingSessionCredentials instance using the specified properties.\n   * @function create\n   * @memberof SdkMeetingSessionCredentials\n   * @static\n   * @param {ISdkMeetingSessionCredentials=} [properties] Properties to set\n   * @returns {SdkMeetingSessionCredentials} SdkMeetingSessionCredentials instance\n   */\n\n  SdkMeetingSessionCredentials.create = function create(properties) {\n    return new SdkMeetingSessionCredentials(properties);\n  };\n  /**\n   * Encodes the specified SdkMeetingSessionCredentials message. Does not implicitly {@link SdkMeetingSessionCredentials.verify|verify} messages.\n   * @function encode\n   * @memberof SdkMeetingSessionCredentials\n   * @static\n   * @param {ISdkMeetingSessionCredentials} message SdkMeetingSessionCredentials message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkMeetingSessionCredentials.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\")) writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).string(message.attendeeId);\n    if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\")) writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).string(message.externalUserId);\n    if (message.joinToken != null && message.hasOwnProperty(\"joinToken\")) writer.uint32(\n    /* id 3, wireType 2 =*/\n    26).string(message.joinToken);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkMeetingSessionCredentials message, length delimited. Does not implicitly {@link SdkMeetingSessionCredentials.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkMeetingSessionCredentials\n   * @static\n   * @param {ISdkMeetingSessionCredentials} message SdkMeetingSessionCredentials message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkMeetingSessionCredentials.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkMeetingSessionCredentials message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkMeetingSessionCredentials\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkMeetingSessionCredentials} SdkMeetingSessionCredentials\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkMeetingSessionCredentials.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkMeetingSessionCredentials();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.attendeeId = reader.string();\n          break;\n\n        case 2:\n          message.externalUserId = reader.string();\n          break;\n\n        case 3:\n          message.joinToken = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkMeetingSessionCredentials message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkMeetingSessionCredentials\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkMeetingSessionCredentials} SdkMeetingSessionCredentials\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkMeetingSessionCredentials.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkMeetingSessionCredentials message.\n   * @function verify\n   * @memberof SdkMeetingSessionCredentials\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkMeetingSessionCredentials.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\")) if (!$util.isString(message.attendeeId)) return \"attendeeId: string expected\";\n    if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\")) if (!$util.isString(message.externalUserId)) return \"externalUserId: string expected\";\n    if (message.joinToken != null && message.hasOwnProperty(\"joinToken\")) if (!$util.isString(message.joinToken)) return \"joinToken: string expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkMeetingSessionCredentials message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkMeetingSessionCredentials\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkMeetingSessionCredentials} SdkMeetingSessionCredentials\n   */\n\n\n  SdkMeetingSessionCredentials.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkMeetingSessionCredentials) return object;\n    var message = new $root.SdkMeetingSessionCredentials();\n    if (object.attendeeId != null) message.attendeeId = String(object.attendeeId);\n    if (object.externalUserId != null) message.externalUserId = String(object.externalUserId);\n    if (object.joinToken != null) message.joinToken = String(object.joinToken);\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkMeetingSessionCredentials message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkMeetingSessionCredentials\n   * @static\n   * @param {SdkMeetingSessionCredentials} message SdkMeetingSessionCredentials\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkMeetingSessionCredentials.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.attendeeId = \"\";\n      object.externalUserId = \"\";\n      object.joinToken = \"\";\n    }\n\n    if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\")) object.attendeeId = message.attendeeId;\n    if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\")) object.externalUserId = message.externalUserId;\n    if (message.joinToken != null && message.hasOwnProperty(\"joinToken\")) object.joinToken = message.joinToken;\n    return object;\n  };\n  /**\n   * Converts this SdkMeetingSessionCredentials to JSON.\n   * @function toJSON\n   * @memberof SdkMeetingSessionCredentials\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkMeetingSessionCredentials.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkMeetingSessionCredentials;\n}();\n\nmodule.exports = $root;\n$util.Long = undefined;\n$protobuf.configure();","map":{"version":3,"names":["$protobuf","require","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","SdkSignalFrame","properties","keys","Object","i","length","prototype","timestampMs","Long","fromBits","type","error","join","joinack","sub","suback","index","pause","leave","leaveAck","bitrates","audioControl","audioMetadata","audioStreamIdInfo","pingPong","audioStatus","clientMetric","dataMessage","remoteVideoUpdate","primaryMeetingJoin","primaryMeetingJoinAck","primaryMeetingLeave","create","encode","message","writer","uint32","uint64","int32","hasOwnProperty","SdkErrorFrame","fork","ldelim","SdkJoinFrame","SdkJoinAckFrame","SdkSubscribeFrame","SdkSubscribeAckFrame","SdkIndexFrame","SdkPauseResumeFrame","SdkLeaveFrame","SdkLeaveAckFrame","SdkBitrateFrame","SdkAudioControlFrame","SdkAudioMetadataFrame","SdkAudioStreamIdInfoFrame","SdkPingPongFrame","SdkAudioStatusFrame","SdkClientMetricFrame","SdkDataMessageFrame","SdkRemoteVideoUpdateFrame","SdkPrimaryMeetingJoinFrame","SdkPrimaryMeetingJoinAckFrame","SdkPrimaryMeetingLeaveFrame","encodeDelimited","decode","reader","end","undefined","len","pos","tag","skipType","ProtocolError","instance","decodeDelimited","verify","isInteger","low","high","fromObject","object","fromValue","unsigned","parseInt","LongBits","toNumber","TypeError","toObject","options","defaults","long","longs","String","toString","Number","enums","call","Type","toJSON","constructor","toJSONOptions","valuesById","values","status","description","string","isString","SdkJoinFlags","SdkClientDetails","appName","appVersion","deviceModel","deviceMake","platformName","platformVersion","clientSource","chimeSdkVersion","protocolVersion","maxNumOfVideos","flags","clientDetails","audioSessionId","wantsCompressedSdp","bool","Boolean","turnCredentials","videoSubscriptionLimit","SdkTurnCredentials","SdkStreamServiceType","SdkStreamMediaType","sendStreams","receiveStreamIds","duplex","emptyArray","sdpOffer","audioHost","audioCheckin","audioMuted","compressedSdpOffer","newBuffer","SdkStreamDescriptor","bytes","push","end2","Array","isArray","base64","arrays","j","slice","allocations","tracks","sdpAnswer","compressedSdpAnswer","SdkStreamAllocation","SdkTrackMapping","sources","pausedAtSourceIds","atCapacity","numParticipants","streamIds","SdkBitrate","streamId","framerate","maxBitrateKbps","trackLabel","groupId","avgBitrateBps","attendeeId","mediaType","externalUserId","ssrc","sourceStreamId","muted","attendeeStates","SdkAudioAttendeeState","audioStreamId","volume","signalStrength","streams","SdkAudioStreamIdInfo","dropped","SdkPingPongType","pingId","SdkMetric","value","double","json","isFinite","SdkStreamMetricFrame","metrics","globalMetrics","streamMetricFrames","messages","SdkDataMessagePayload","topic","data","lifetimeMs","senderAttendeeId","ingestTimeNs","senderExternalUserId","int64","uris","username","password","ttl","SdkTranscriptItem","content","endTime","speakerAttendeeId","speakerExternalUserId","startTime","vocabularyFilterMatch","confidence","stable","SdkTranscriptEntity","category","SdkTranscriptAlternative","items","entities","transcript","SdkTranscriptLanguageWithScore","languageCode","score","SdkTranscriptResult","alternatives","languageIdentification","channelId","isPartial","resultId","SdkTranscript","results","SdkTranscriptionStatus","eventTime","transcriptionRegion","transcriptionConfiguration","SdkTranscriptEvent","$oneOfFields","defineProperty","get","oneOfGetter","set","oneOfSetter","Event","oneofs","SdkTranscriptFrame","events","addedOrUpdatedVideoSubscriptions","removedVideoSubscriptionMids","SdkVideoSubscriptionConfiguration","mid","credentials","SdkMeetingSessionCredentials","joinToken","module","exports","configure"],"sources":["/Users/kshiba01/projects/DXサービス/AWS/amplify/amazon-ivs-chime-web-demo/web-ui/node_modules/amazon-chime-sdk-js/build/signalingprotocol/SignalingProtocol.js"],"sourcesContent":["/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.SdkSignalFrame = (function() {\n\n    /**\n     * Properties of a SdkSignalFrame.\n     * @exports ISdkSignalFrame\n     * @interface ISdkSignalFrame\n     * @property {number|Long} timestampMs SdkSignalFrame timestampMs\n     * @property {SdkSignalFrame.Type} type SdkSignalFrame type\n     * @property {ISdkErrorFrame|null} [error] SdkSignalFrame error\n     * @property {ISdkJoinFrame|null} [join] SdkSignalFrame join\n     * @property {ISdkJoinAckFrame|null} [joinack] SdkSignalFrame joinack\n     * @property {ISdkSubscribeFrame|null} [sub] SdkSignalFrame sub\n     * @property {ISdkSubscribeAckFrame|null} [suback] SdkSignalFrame suback\n     * @property {ISdkIndexFrame|null} [index] SdkSignalFrame index\n     * @property {ISdkPauseResumeFrame|null} [pause] SdkSignalFrame pause\n     * @property {ISdkLeaveFrame|null} [leave] SdkSignalFrame leave\n     * @property {ISdkLeaveAckFrame|null} [leaveAck] SdkSignalFrame leaveAck\n     * @property {ISdkBitrateFrame|null} [bitrates] SdkSignalFrame bitrates\n     * @property {ISdkAudioControlFrame|null} [audioControl] SdkSignalFrame audioControl\n     * @property {ISdkAudioMetadataFrame|null} [audioMetadata] SdkSignalFrame audioMetadata\n     * @property {ISdkAudioStreamIdInfoFrame|null} [audioStreamIdInfo] SdkSignalFrame audioStreamIdInfo\n     * @property {ISdkPingPongFrame|null} [pingPong] SdkSignalFrame pingPong\n     * @property {ISdkAudioStatusFrame|null} [audioStatus] SdkSignalFrame audioStatus\n     * @property {ISdkClientMetricFrame|null} [clientMetric] SdkSignalFrame clientMetric\n     * @property {ISdkDataMessageFrame|null} [dataMessage] SdkSignalFrame dataMessage\n     * @property {ISdkRemoteVideoUpdateFrame|null} [remoteVideoUpdate] SdkSignalFrame remoteVideoUpdate\n     * @property {ISdkPrimaryMeetingJoinFrame|null} [primaryMeetingJoin] SdkSignalFrame primaryMeetingJoin\n     * @property {ISdkPrimaryMeetingJoinAckFrame|null} [primaryMeetingJoinAck] SdkSignalFrame primaryMeetingJoinAck\n     * @property {ISdkPrimaryMeetingLeaveFrame|null} [primaryMeetingLeave] SdkSignalFrame primaryMeetingLeave\n     */\n\n    /**\n     * Constructs a new SdkSignalFrame.\n     * @exports SdkSignalFrame\n     * @classdesc Represents a SdkSignalFrame.\n     * @implements ISdkSignalFrame\n     * @constructor\n     * @param {ISdkSignalFrame=} [properties] Properties to set\n     */\n    function SdkSignalFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkSignalFrame timestampMs.\n     * @member {number|Long} timestampMs\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.timestampMs = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * SdkSignalFrame type.\n     * @member {SdkSignalFrame.Type} type\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.type = 1;\n\n    /**\n     * SdkSignalFrame error.\n     * @member {ISdkErrorFrame|null|undefined} error\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.error = null;\n\n    /**\n     * SdkSignalFrame join.\n     * @member {ISdkJoinFrame|null|undefined} join\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.join = null;\n\n    /**\n     * SdkSignalFrame joinack.\n     * @member {ISdkJoinAckFrame|null|undefined} joinack\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.joinack = null;\n\n    /**\n     * SdkSignalFrame sub.\n     * @member {ISdkSubscribeFrame|null|undefined} sub\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.sub = null;\n\n    /**\n     * SdkSignalFrame suback.\n     * @member {ISdkSubscribeAckFrame|null|undefined} suback\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.suback = null;\n\n    /**\n     * SdkSignalFrame index.\n     * @member {ISdkIndexFrame|null|undefined} index\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.index = null;\n\n    /**\n     * SdkSignalFrame pause.\n     * @member {ISdkPauseResumeFrame|null|undefined} pause\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.pause = null;\n\n    /**\n     * SdkSignalFrame leave.\n     * @member {ISdkLeaveFrame|null|undefined} leave\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.leave = null;\n\n    /**\n     * SdkSignalFrame leaveAck.\n     * @member {ISdkLeaveAckFrame|null|undefined} leaveAck\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.leaveAck = null;\n\n    /**\n     * SdkSignalFrame bitrates.\n     * @member {ISdkBitrateFrame|null|undefined} bitrates\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.bitrates = null;\n\n    /**\n     * SdkSignalFrame audioControl.\n     * @member {ISdkAudioControlFrame|null|undefined} audioControl\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.audioControl = null;\n\n    /**\n     * SdkSignalFrame audioMetadata.\n     * @member {ISdkAudioMetadataFrame|null|undefined} audioMetadata\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.audioMetadata = null;\n\n    /**\n     * SdkSignalFrame audioStreamIdInfo.\n     * @member {ISdkAudioStreamIdInfoFrame|null|undefined} audioStreamIdInfo\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.audioStreamIdInfo = null;\n\n    /**\n     * SdkSignalFrame pingPong.\n     * @member {ISdkPingPongFrame|null|undefined} pingPong\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.pingPong = null;\n\n    /**\n     * SdkSignalFrame audioStatus.\n     * @member {ISdkAudioStatusFrame|null|undefined} audioStatus\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.audioStatus = null;\n\n    /**\n     * SdkSignalFrame clientMetric.\n     * @member {ISdkClientMetricFrame|null|undefined} clientMetric\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.clientMetric = null;\n\n    /**\n     * SdkSignalFrame dataMessage.\n     * @member {ISdkDataMessageFrame|null|undefined} dataMessage\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.dataMessage = null;\n\n    /**\n     * SdkSignalFrame remoteVideoUpdate.\n     * @member {ISdkRemoteVideoUpdateFrame|null|undefined} remoteVideoUpdate\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.remoteVideoUpdate = null;\n\n    /**\n     * SdkSignalFrame primaryMeetingJoin.\n     * @member {ISdkPrimaryMeetingJoinFrame|null|undefined} primaryMeetingJoin\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.primaryMeetingJoin = null;\n\n    /**\n     * SdkSignalFrame primaryMeetingJoinAck.\n     * @member {ISdkPrimaryMeetingJoinAckFrame|null|undefined} primaryMeetingJoinAck\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.primaryMeetingJoinAck = null;\n\n    /**\n     * SdkSignalFrame primaryMeetingLeave.\n     * @member {ISdkPrimaryMeetingLeaveFrame|null|undefined} primaryMeetingLeave\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.primaryMeetingLeave = null;\n\n    /**\n     * Creates a new SdkSignalFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {ISdkSignalFrame=} [properties] Properties to set\n     * @returns {SdkSignalFrame} SdkSignalFrame instance\n     */\n    SdkSignalFrame.create = function create(properties) {\n        return new SdkSignalFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkSignalFrame message. Does not implicitly {@link SdkSignalFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {ISdkSignalFrame} message SdkSignalFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkSignalFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.timestampMs);\n        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);\n        if (message.error != null && message.hasOwnProperty(\"error\"))\n            $root.SdkErrorFrame.encode(message.error, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        if (message.join != null && message.hasOwnProperty(\"join\"))\n            $root.SdkJoinFrame.encode(message.join, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n        if (message.joinack != null && message.hasOwnProperty(\"joinack\"))\n            $root.SdkJoinAckFrame.encode(message.joinack, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n        if (message.sub != null && message.hasOwnProperty(\"sub\"))\n            $root.SdkSubscribeFrame.encode(message.sub, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n        if (message.suback != null && message.hasOwnProperty(\"suback\"))\n            $root.SdkSubscribeAckFrame.encode(message.suback, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n        if (message.index != null && message.hasOwnProperty(\"index\"))\n            $root.SdkIndexFrame.encode(message.index, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n        if (message.pause != null && message.hasOwnProperty(\"pause\"))\n            $root.SdkPauseResumeFrame.encode(message.pause, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n        if (message.leave != null && message.hasOwnProperty(\"leave\"))\n            $root.SdkLeaveFrame.encode(message.leave, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n        if (message.leaveAck != null && message.hasOwnProperty(\"leaveAck\"))\n            $root.SdkLeaveAckFrame.encode(message.leaveAck, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n        if (message.bitrates != null && message.hasOwnProperty(\"bitrates\"))\n            $root.SdkBitrateFrame.encode(message.bitrates, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n        if (message.audioControl != null && message.hasOwnProperty(\"audioControl\"))\n            $root.SdkAudioControlFrame.encode(message.audioControl, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();\n        if (message.audioMetadata != null && message.hasOwnProperty(\"audioMetadata\"))\n            $root.SdkAudioMetadataFrame.encode(message.audioMetadata, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();\n        if (message.audioStreamIdInfo != null && message.hasOwnProperty(\"audioStreamIdInfo\"))\n            $root.SdkAudioStreamIdInfoFrame.encode(message.audioStreamIdInfo, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();\n        if (message.pingPong != null && message.hasOwnProperty(\"pingPong\"))\n            $root.SdkPingPongFrame.encode(message.pingPong, writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();\n        if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\"))\n            $root.SdkAudioStatusFrame.encode(message.audioStatus, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();\n        if (message.clientMetric != null && message.hasOwnProperty(\"clientMetric\"))\n            $root.SdkClientMetricFrame.encode(message.clientMetric, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();\n        if (message.dataMessage != null && message.hasOwnProperty(\"dataMessage\"))\n            $root.SdkDataMessageFrame.encode(message.dataMessage, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();\n        if (message.remoteVideoUpdate != null && message.hasOwnProperty(\"remoteVideoUpdate\"))\n            $root.SdkRemoteVideoUpdateFrame.encode(message.remoteVideoUpdate, writer.uint32(/* id 25, wireType 2 =*/202).fork()).ldelim();\n        if (message.primaryMeetingJoin != null && message.hasOwnProperty(\"primaryMeetingJoin\"))\n            $root.SdkPrimaryMeetingJoinFrame.encode(message.primaryMeetingJoin, writer.uint32(/* id 26, wireType 2 =*/210).fork()).ldelim();\n        if (message.primaryMeetingJoinAck != null && message.hasOwnProperty(\"primaryMeetingJoinAck\"))\n            $root.SdkPrimaryMeetingJoinAckFrame.encode(message.primaryMeetingJoinAck, writer.uint32(/* id 27, wireType 2 =*/218).fork()).ldelim();\n        if (message.primaryMeetingLeave != null && message.hasOwnProperty(\"primaryMeetingLeave\"))\n            $root.SdkPrimaryMeetingLeaveFrame.encode(message.primaryMeetingLeave, writer.uint32(/* id 28, wireType 2 =*/226).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkSignalFrame message, length delimited. Does not implicitly {@link SdkSignalFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {ISdkSignalFrame} message SdkSignalFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkSignalFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkSignalFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkSignalFrame} SdkSignalFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkSignalFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkSignalFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.timestampMs = reader.uint64();\n                break;\n            case 2:\n                message.type = reader.int32();\n                break;\n            case 3:\n                message.error = $root.SdkErrorFrame.decode(reader, reader.uint32());\n                break;\n            case 4:\n                message.join = $root.SdkJoinFrame.decode(reader, reader.uint32());\n                break;\n            case 5:\n                message.joinack = $root.SdkJoinAckFrame.decode(reader, reader.uint32());\n                break;\n            case 6:\n                message.sub = $root.SdkSubscribeFrame.decode(reader, reader.uint32());\n                break;\n            case 7:\n                message.suback = $root.SdkSubscribeAckFrame.decode(reader, reader.uint32());\n                break;\n            case 8:\n                message.index = $root.SdkIndexFrame.decode(reader, reader.uint32());\n                break;\n            case 10:\n                message.pause = $root.SdkPauseResumeFrame.decode(reader, reader.uint32());\n                break;\n            case 11:\n                message.leave = $root.SdkLeaveFrame.decode(reader, reader.uint32());\n                break;\n            case 12:\n                message.leaveAck = $root.SdkLeaveAckFrame.decode(reader, reader.uint32());\n                break;\n            case 14:\n                message.bitrates = $root.SdkBitrateFrame.decode(reader, reader.uint32());\n                break;\n            case 17:\n                message.audioControl = $root.SdkAudioControlFrame.decode(reader, reader.uint32());\n                break;\n            case 18:\n                message.audioMetadata = $root.SdkAudioMetadataFrame.decode(reader, reader.uint32());\n                break;\n            case 19:\n                message.audioStreamIdInfo = $root.SdkAudioStreamIdInfoFrame.decode(reader, reader.uint32());\n                break;\n            case 20:\n                message.pingPong = $root.SdkPingPongFrame.decode(reader, reader.uint32());\n                break;\n            case 21:\n                message.audioStatus = $root.SdkAudioStatusFrame.decode(reader, reader.uint32());\n                break;\n            case 22:\n                message.clientMetric = $root.SdkClientMetricFrame.decode(reader, reader.uint32());\n                break;\n            case 23:\n                message.dataMessage = $root.SdkDataMessageFrame.decode(reader, reader.uint32());\n                break;\n            case 25:\n                message.remoteVideoUpdate = $root.SdkRemoteVideoUpdateFrame.decode(reader, reader.uint32());\n                break;\n            case 26:\n                message.primaryMeetingJoin = $root.SdkPrimaryMeetingJoinFrame.decode(reader, reader.uint32());\n                break;\n            case 27:\n                message.primaryMeetingJoinAck = $root.SdkPrimaryMeetingJoinAckFrame.decode(reader, reader.uint32());\n                break;\n            case 28:\n                message.primaryMeetingLeave = $root.SdkPrimaryMeetingLeaveFrame.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        if (!message.hasOwnProperty(\"timestampMs\"))\n            throw $util.ProtocolError(\"missing required 'timestampMs'\", { instance: message });\n        if (!message.hasOwnProperty(\"type\"))\n            throw $util.ProtocolError(\"missing required 'type'\", { instance: message });\n        return message;\n    };\n\n    /**\n     * Decodes a SdkSignalFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkSignalFrame} SdkSignalFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkSignalFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkSignalFrame message.\n     * @function verify\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkSignalFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (!$util.isInteger(message.timestampMs) && !(message.timestampMs && $util.isInteger(message.timestampMs.low) && $util.isInteger(message.timestampMs.high)))\n            return \"timestampMs: integer|Long expected\";\n        switch (message.type) {\n        default:\n            return \"type: enum value expected\";\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 13:\n        case 16:\n        case 17:\n        case 18:\n        case 19:\n        case 20:\n        case 21:\n        case 22:\n        case 24:\n        case 25:\n        case 26:\n        case 27:\n            break;\n        }\n        if (message.error != null && message.hasOwnProperty(\"error\")) {\n            var error = $root.SdkErrorFrame.verify(message.error);\n            if (error)\n                return \"error.\" + error;\n        }\n        if (message.join != null && message.hasOwnProperty(\"join\")) {\n            var error = $root.SdkJoinFrame.verify(message.join);\n            if (error)\n                return \"join.\" + error;\n        }\n        if (message.joinack != null && message.hasOwnProperty(\"joinack\")) {\n            var error = $root.SdkJoinAckFrame.verify(message.joinack);\n            if (error)\n                return \"joinack.\" + error;\n        }\n        if (message.sub != null && message.hasOwnProperty(\"sub\")) {\n            var error = $root.SdkSubscribeFrame.verify(message.sub);\n            if (error)\n                return \"sub.\" + error;\n        }\n        if (message.suback != null && message.hasOwnProperty(\"suback\")) {\n            var error = $root.SdkSubscribeAckFrame.verify(message.suback);\n            if (error)\n                return \"suback.\" + error;\n        }\n        if (message.index != null && message.hasOwnProperty(\"index\")) {\n            var error = $root.SdkIndexFrame.verify(message.index);\n            if (error)\n                return \"index.\" + error;\n        }\n        if (message.pause != null && message.hasOwnProperty(\"pause\")) {\n            var error = $root.SdkPauseResumeFrame.verify(message.pause);\n            if (error)\n                return \"pause.\" + error;\n        }\n        if (message.leave != null && message.hasOwnProperty(\"leave\")) {\n            var error = $root.SdkLeaveFrame.verify(message.leave);\n            if (error)\n                return \"leave.\" + error;\n        }\n        if (message.leaveAck != null && message.hasOwnProperty(\"leaveAck\")) {\n            var error = $root.SdkLeaveAckFrame.verify(message.leaveAck);\n            if (error)\n                return \"leaveAck.\" + error;\n        }\n        if (message.bitrates != null && message.hasOwnProperty(\"bitrates\")) {\n            var error = $root.SdkBitrateFrame.verify(message.bitrates);\n            if (error)\n                return \"bitrates.\" + error;\n        }\n        if (message.audioControl != null && message.hasOwnProperty(\"audioControl\")) {\n            var error = $root.SdkAudioControlFrame.verify(message.audioControl);\n            if (error)\n                return \"audioControl.\" + error;\n        }\n        if (message.audioMetadata != null && message.hasOwnProperty(\"audioMetadata\")) {\n            var error = $root.SdkAudioMetadataFrame.verify(message.audioMetadata);\n            if (error)\n                return \"audioMetadata.\" + error;\n        }\n        if (message.audioStreamIdInfo != null && message.hasOwnProperty(\"audioStreamIdInfo\")) {\n            var error = $root.SdkAudioStreamIdInfoFrame.verify(message.audioStreamIdInfo);\n            if (error)\n                return \"audioStreamIdInfo.\" + error;\n        }\n        if (message.pingPong != null && message.hasOwnProperty(\"pingPong\")) {\n            var error = $root.SdkPingPongFrame.verify(message.pingPong);\n            if (error)\n                return \"pingPong.\" + error;\n        }\n        if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\")) {\n            var error = $root.SdkAudioStatusFrame.verify(message.audioStatus);\n            if (error)\n                return \"audioStatus.\" + error;\n        }\n        if (message.clientMetric != null && message.hasOwnProperty(\"clientMetric\")) {\n            var error = $root.SdkClientMetricFrame.verify(message.clientMetric);\n            if (error)\n                return \"clientMetric.\" + error;\n        }\n        if (message.dataMessage != null && message.hasOwnProperty(\"dataMessage\")) {\n            var error = $root.SdkDataMessageFrame.verify(message.dataMessage);\n            if (error)\n                return \"dataMessage.\" + error;\n        }\n        if (message.remoteVideoUpdate != null && message.hasOwnProperty(\"remoteVideoUpdate\")) {\n            var error = $root.SdkRemoteVideoUpdateFrame.verify(message.remoteVideoUpdate);\n            if (error)\n                return \"remoteVideoUpdate.\" + error;\n        }\n        if (message.primaryMeetingJoin != null && message.hasOwnProperty(\"primaryMeetingJoin\")) {\n            var error = $root.SdkPrimaryMeetingJoinFrame.verify(message.primaryMeetingJoin);\n            if (error)\n                return \"primaryMeetingJoin.\" + error;\n        }\n        if (message.primaryMeetingJoinAck != null && message.hasOwnProperty(\"primaryMeetingJoinAck\")) {\n            var error = $root.SdkPrimaryMeetingJoinAckFrame.verify(message.primaryMeetingJoinAck);\n            if (error)\n                return \"primaryMeetingJoinAck.\" + error;\n        }\n        if (message.primaryMeetingLeave != null && message.hasOwnProperty(\"primaryMeetingLeave\")) {\n            var error = $root.SdkPrimaryMeetingLeaveFrame.verify(message.primaryMeetingLeave);\n            if (error)\n                return \"primaryMeetingLeave.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkSignalFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkSignalFrame} SdkSignalFrame\n     */\n    SdkSignalFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkSignalFrame)\n            return object;\n        var message = new $root.SdkSignalFrame();\n        if (object.timestampMs != null)\n            if ($util.Long)\n                (message.timestampMs = $util.Long.fromValue(object.timestampMs)).unsigned = true;\n            else if (typeof object.timestampMs === \"string\")\n                message.timestampMs = parseInt(object.timestampMs, 10);\n            else if (typeof object.timestampMs === \"number\")\n                message.timestampMs = object.timestampMs;\n            else if (typeof object.timestampMs === \"object\")\n                message.timestampMs = new $util.LongBits(object.timestampMs.low >>> 0, object.timestampMs.high >>> 0).toNumber(true);\n        switch (object.type) {\n        case \"JOIN\":\n        case 1:\n            message.type = 1;\n            break;\n        case \"JOIN_ACK\":\n        case 2:\n            message.type = 2;\n            break;\n        case \"SUBSCRIBE\":\n        case 3:\n            message.type = 3;\n            break;\n        case \"SUBSCRIBE_ACK\":\n        case 4:\n            message.type = 4;\n            break;\n        case \"INDEX\":\n        case 5:\n            message.type = 5;\n            break;\n        case \"PAUSE\":\n        case 7:\n            message.type = 7;\n            break;\n        case \"RESUME\":\n        case 8:\n            message.type = 8;\n            break;\n        case \"LEAVE\":\n        case 9:\n            message.type = 9;\n            break;\n        case \"LEAVE_ACK\":\n        case 10:\n            message.type = 10;\n            break;\n        case \"BITRATES\":\n        case 13:\n            message.type = 13;\n            break;\n        case \"AUDIO_CONTROL\":\n        case 16:\n            message.type = 16;\n            break;\n        case \"AUDIO_METADATA\":\n        case 17:\n            message.type = 17;\n            break;\n        case \"AUDIO_STREAM_ID_INFO\":\n        case 18:\n            message.type = 18;\n            break;\n        case \"PING_PONG\":\n        case 19:\n            message.type = 19;\n            break;\n        case \"AUDIO_STATUS\":\n        case 20:\n            message.type = 20;\n            break;\n        case \"CLIENT_METRIC\":\n        case 21:\n            message.type = 21;\n            break;\n        case \"DATA_MESSAGE\":\n        case 22:\n            message.type = 22;\n            break;\n        case \"REMOTE_VIDEO_UPDATE\":\n        case 24:\n            message.type = 24;\n            break;\n        case \"PRIMARY_MEETING_JOIN\":\n        case 25:\n            message.type = 25;\n            break;\n        case \"PRIMARY_MEETING_JOIN_ACK\":\n        case 26:\n            message.type = 26;\n            break;\n        case \"PRIMARY_MEETING_LEAVE\":\n        case 27:\n            message.type = 27;\n            break;\n        }\n        if (object.error != null) {\n            if (typeof object.error !== \"object\")\n                throw TypeError(\".SdkSignalFrame.error: object expected\");\n            message.error = $root.SdkErrorFrame.fromObject(object.error);\n        }\n        if (object.join != null) {\n            if (typeof object.join !== \"object\")\n                throw TypeError(\".SdkSignalFrame.join: object expected\");\n            message.join = $root.SdkJoinFrame.fromObject(object.join);\n        }\n        if (object.joinack != null) {\n            if (typeof object.joinack !== \"object\")\n                throw TypeError(\".SdkSignalFrame.joinack: object expected\");\n            message.joinack = $root.SdkJoinAckFrame.fromObject(object.joinack);\n        }\n        if (object.sub != null) {\n            if (typeof object.sub !== \"object\")\n                throw TypeError(\".SdkSignalFrame.sub: object expected\");\n            message.sub = $root.SdkSubscribeFrame.fromObject(object.sub);\n        }\n        if (object.suback != null) {\n            if (typeof object.suback !== \"object\")\n                throw TypeError(\".SdkSignalFrame.suback: object expected\");\n            message.suback = $root.SdkSubscribeAckFrame.fromObject(object.suback);\n        }\n        if (object.index != null) {\n            if (typeof object.index !== \"object\")\n                throw TypeError(\".SdkSignalFrame.index: object expected\");\n            message.index = $root.SdkIndexFrame.fromObject(object.index);\n        }\n        if (object.pause != null) {\n            if (typeof object.pause !== \"object\")\n                throw TypeError(\".SdkSignalFrame.pause: object expected\");\n            message.pause = $root.SdkPauseResumeFrame.fromObject(object.pause);\n        }\n        if (object.leave != null) {\n            if (typeof object.leave !== \"object\")\n                throw TypeError(\".SdkSignalFrame.leave: object expected\");\n            message.leave = $root.SdkLeaveFrame.fromObject(object.leave);\n        }\n        if (object.leaveAck != null) {\n            if (typeof object.leaveAck !== \"object\")\n                throw TypeError(\".SdkSignalFrame.leaveAck: object expected\");\n            message.leaveAck = $root.SdkLeaveAckFrame.fromObject(object.leaveAck);\n        }\n        if (object.bitrates != null) {\n            if (typeof object.bitrates !== \"object\")\n                throw TypeError(\".SdkSignalFrame.bitrates: object expected\");\n            message.bitrates = $root.SdkBitrateFrame.fromObject(object.bitrates);\n        }\n        if (object.audioControl != null) {\n            if (typeof object.audioControl !== \"object\")\n                throw TypeError(\".SdkSignalFrame.audioControl: object expected\");\n            message.audioControl = $root.SdkAudioControlFrame.fromObject(object.audioControl);\n        }\n        if (object.audioMetadata != null) {\n            if (typeof object.audioMetadata !== \"object\")\n                throw TypeError(\".SdkSignalFrame.audioMetadata: object expected\");\n            message.audioMetadata = $root.SdkAudioMetadataFrame.fromObject(object.audioMetadata);\n        }\n        if (object.audioStreamIdInfo != null) {\n            if (typeof object.audioStreamIdInfo !== \"object\")\n                throw TypeError(\".SdkSignalFrame.audioStreamIdInfo: object expected\");\n            message.audioStreamIdInfo = $root.SdkAudioStreamIdInfoFrame.fromObject(object.audioStreamIdInfo);\n        }\n        if (object.pingPong != null) {\n            if (typeof object.pingPong !== \"object\")\n                throw TypeError(\".SdkSignalFrame.pingPong: object expected\");\n            message.pingPong = $root.SdkPingPongFrame.fromObject(object.pingPong);\n        }\n        if (object.audioStatus != null) {\n            if (typeof object.audioStatus !== \"object\")\n                throw TypeError(\".SdkSignalFrame.audioStatus: object expected\");\n            message.audioStatus = $root.SdkAudioStatusFrame.fromObject(object.audioStatus);\n        }\n        if (object.clientMetric != null) {\n            if (typeof object.clientMetric !== \"object\")\n                throw TypeError(\".SdkSignalFrame.clientMetric: object expected\");\n            message.clientMetric = $root.SdkClientMetricFrame.fromObject(object.clientMetric);\n        }\n        if (object.dataMessage != null) {\n            if (typeof object.dataMessage !== \"object\")\n                throw TypeError(\".SdkSignalFrame.dataMessage: object expected\");\n            message.dataMessage = $root.SdkDataMessageFrame.fromObject(object.dataMessage);\n        }\n        if (object.remoteVideoUpdate != null) {\n            if (typeof object.remoteVideoUpdate !== \"object\")\n                throw TypeError(\".SdkSignalFrame.remoteVideoUpdate: object expected\");\n            message.remoteVideoUpdate = $root.SdkRemoteVideoUpdateFrame.fromObject(object.remoteVideoUpdate);\n        }\n        if (object.primaryMeetingJoin != null) {\n            if (typeof object.primaryMeetingJoin !== \"object\")\n                throw TypeError(\".SdkSignalFrame.primaryMeetingJoin: object expected\");\n            message.primaryMeetingJoin = $root.SdkPrimaryMeetingJoinFrame.fromObject(object.primaryMeetingJoin);\n        }\n        if (object.primaryMeetingJoinAck != null) {\n            if (typeof object.primaryMeetingJoinAck !== \"object\")\n                throw TypeError(\".SdkSignalFrame.primaryMeetingJoinAck: object expected\");\n            message.primaryMeetingJoinAck = $root.SdkPrimaryMeetingJoinAckFrame.fromObject(object.primaryMeetingJoinAck);\n        }\n        if (object.primaryMeetingLeave != null) {\n            if (typeof object.primaryMeetingLeave !== \"object\")\n                throw TypeError(\".SdkSignalFrame.primaryMeetingLeave: object expected\");\n            message.primaryMeetingLeave = $root.SdkPrimaryMeetingLeaveFrame.fromObject(object.primaryMeetingLeave);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkSignalFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {SdkSignalFrame} message SdkSignalFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkSignalFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.timestampMs = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.timestampMs = options.longs === String ? \"0\" : 0;\n            object.type = options.enums === String ? \"JOIN\" : 1;\n            object.error = null;\n            object.join = null;\n            object.joinack = null;\n            object.sub = null;\n            object.suback = null;\n            object.index = null;\n            object.pause = null;\n            object.leave = null;\n            object.leaveAck = null;\n            object.bitrates = null;\n            object.audioControl = null;\n            object.audioMetadata = null;\n            object.audioStreamIdInfo = null;\n            object.pingPong = null;\n            object.audioStatus = null;\n            object.clientMetric = null;\n            object.dataMessage = null;\n            object.remoteVideoUpdate = null;\n            object.primaryMeetingJoin = null;\n            object.primaryMeetingJoinAck = null;\n            object.primaryMeetingLeave = null;\n        }\n        if (message.timestampMs != null && message.hasOwnProperty(\"timestampMs\"))\n            if (typeof message.timestampMs === \"number\")\n                object.timestampMs = options.longs === String ? String(message.timestampMs) : message.timestampMs;\n            else\n                object.timestampMs = options.longs === String ? $util.Long.prototype.toString.call(message.timestampMs) : options.longs === Number ? new $util.LongBits(message.timestampMs.low >>> 0, message.timestampMs.high >>> 0).toNumber(true) : message.timestampMs;\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            object.type = options.enums === String ? $root.SdkSignalFrame.Type[message.type] : message.type;\n        if (message.error != null && message.hasOwnProperty(\"error\"))\n            object.error = $root.SdkErrorFrame.toObject(message.error, options);\n        if (message.join != null && message.hasOwnProperty(\"join\"))\n            object.join = $root.SdkJoinFrame.toObject(message.join, options);\n        if (message.joinack != null && message.hasOwnProperty(\"joinack\"))\n            object.joinack = $root.SdkJoinAckFrame.toObject(message.joinack, options);\n        if (message.sub != null && message.hasOwnProperty(\"sub\"))\n            object.sub = $root.SdkSubscribeFrame.toObject(message.sub, options);\n        if (message.suback != null && message.hasOwnProperty(\"suback\"))\n            object.suback = $root.SdkSubscribeAckFrame.toObject(message.suback, options);\n        if (message.index != null && message.hasOwnProperty(\"index\"))\n            object.index = $root.SdkIndexFrame.toObject(message.index, options);\n        if (message.pause != null && message.hasOwnProperty(\"pause\"))\n            object.pause = $root.SdkPauseResumeFrame.toObject(message.pause, options);\n        if (message.leave != null && message.hasOwnProperty(\"leave\"))\n            object.leave = $root.SdkLeaveFrame.toObject(message.leave, options);\n        if (message.leaveAck != null && message.hasOwnProperty(\"leaveAck\"))\n            object.leaveAck = $root.SdkLeaveAckFrame.toObject(message.leaveAck, options);\n        if (message.bitrates != null && message.hasOwnProperty(\"bitrates\"))\n            object.bitrates = $root.SdkBitrateFrame.toObject(message.bitrates, options);\n        if (message.audioControl != null && message.hasOwnProperty(\"audioControl\"))\n            object.audioControl = $root.SdkAudioControlFrame.toObject(message.audioControl, options);\n        if (message.audioMetadata != null && message.hasOwnProperty(\"audioMetadata\"))\n            object.audioMetadata = $root.SdkAudioMetadataFrame.toObject(message.audioMetadata, options);\n        if (message.audioStreamIdInfo != null && message.hasOwnProperty(\"audioStreamIdInfo\"))\n            object.audioStreamIdInfo = $root.SdkAudioStreamIdInfoFrame.toObject(message.audioStreamIdInfo, options);\n        if (message.pingPong != null && message.hasOwnProperty(\"pingPong\"))\n            object.pingPong = $root.SdkPingPongFrame.toObject(message.pingPong, options);\n        if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\"))\n            object.audioStatus = $root.SdkAudioStatusFrame.toObject(message.audioStatus, options);\n        if (message.clientMetric != null && message.hasOwnProperty(\"clientMetric\"))\n            object.clientMetric = $root.SdkClientMetricFrame.toObject(message.clientMetric, options);\n        if (message.dataMessage != null && message.hasOwnProperty(\"dataMessage\"))\n            object.dataMessage = $root.SdkDataMessageFrame.toObject(message.dataMessage, options);\n        if (message.remoteVideoUpdate != null && message.hasOwnProperty(\"remoteVideoUpdate\"))\n            object.remoteVideoUpdate = $root.SdkRemoteVideoUpdateFrame.toObject(message.remoteVideoUpdate, options);\n        if (message.primaryMeetingJoin != null && message.hasOwnProperty(\"primaryMeetingJoin\"))\n            object.primaryMeetingJoin = $root.SdkPrimaryMeetingJoinFrame.toObject(message.primaryMeetingJoin, options);\n        if (message.primaryMeetingJoinAck != null && message.hasOwnProperty(\"primaryMeetingJoinAck\"))\n            object.primaryMeetingJoinAck = $root.SdkPrimaryMeetingJoinAckFrame.toObject(message.primaryMeetingJoinAck, options);\n        if (message.primaryMeetingLeave != null && message.hasOwnProperty(\"primaryMeetingLeave\"))\n            object.primaryMeetingLeave = $root.SdkPrimaryMeetingLeaveFrame.toObject(message.primaryMeetingLeave, options);\n        return object;\n    };\n\n    /**\n     * Converts this SdkSignalFrame to JSON.\n     * @function toJSON\n     * @memberof SdkSignalFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkSignalFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * Type enum.\n     * @name SdkSignalFrame.Type\n     * @enum {string}\n     * @property {number} JOIN=1 JOIN value\n     * @property {number} JOIN_ACK=2 JOIN_ACK value\n     * @property {number} SUBSCRIBE=3 SUBSCRIBE value\n     * @property {number} SUBSCRIBE_ACK=4 SUBSCRIBE_ACK value\n     * @property {number} INDEX=5 INDEX value\n     * @property {number} PAUSE=7 PAUSE value\n     * @property {number} RESUME=8 RESUME value\n     * @property {number} LEAVE=9 LEAVE value\n     * @property {number} LEAVE_ACK=10 LEAVE_ACK value\n     * @property {number} BITRATES=13 BITRATES value\n     * @property {number} AUDIO_CONTROL=16 AUDIO_CONTROL value\n     * @property {number} AUDIO_METADATA=17 AUDIO_METADATA value\n     * @property {number} AUDIO_STREAM_ID_INFO=18 AUDIO_STREAM_ID_INFO value\n     * @property {number} PING_PONG=19 PING_PONG value\n     * @property {number} AUDIO_STATUS=20 AUDIO_STATUS value\n     * @property {number} CLIENT_METRIC=21 CLIENT_METRIC value\n     * @property {number} DATA_MESSAGE=22 DATA_MESSAGE value\n     * @property {number} REMOTE_VIDEO_UPDATE=24 REMOTE_VIDEO_UPDATE value\n     * @property {number} PRIMARY_MEETING_JOIN=25 PRIMARY_MEETING_JOIN value\n     * @property {number} PRIMARY_MEETING_JOIN_ACK=26 PRIMARY_MEETING_JOIN_ACK value\n     * @property {number} PRIMARY_MEETING_LEAVE=27 PRIMARY_MEETING_LEAVE value\n     */\n    SdkSignalFrame.Type = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[1] = \"JOIN\"] = 1;\n        values[valuesById[2] = \"JOIN_ACK\"] = 2;\n        values[valuesById[3] = \"SUBSCRIBE\"] = 3;\n        values[valuesById[4] = \"SUBSCRIBE_ACK\"] = 4;\n        values[valuesById[5] = \"INDEX\"] = 5;\n        values[valuesById[7] = \"PAUSE\"] = 7;\n        values[valuesById[8] = \"RESUME\"] = 8;\n        values[valuesById[9] = \"LEAVE\"] = 9;\n        values[valuesById[10] = \"LEAVE_ACK\"] = 10;\n        values[valuesById[13] = \"BITRATES\"] = 13;\n        values[valuesById[16] = \"AUDIO_CONTROL\"] = 16;\n        values[valuesById[17] = \"AUDIO_METADATA\"] = 17;\n        values[valuesById[18] = \"AUDIO_STREAM_ID_INFO\"] = 18;\n        values[valuesById[19] = \"PING_PONG\"] = 19;\n        values[valuesById[20] = \"AUDIO_STATUS\"] = 20;\n        values[valuesById[21] = \"CLIENT_METRIC\"] = 21;\n        values[valuesById[22] = \"DATA_MESSAGE\"] = 22;\n        values[valuesById[24] = \"REMOTE_VIDEO_UPDATE\"] = 24;\n        values[valuesById[25] = \"PRIMARY_MEETING_JOIN\"] = 25;\n        values[valuesById[26] = \"PRIMARY_MEETING_JOIN_ACK\"] = 26;\n        values[valuesById[27] = \"PRIMARY_MEETING_LEAVE\"] = 27;\n        return values;\n    })();\n\n    return SdkSignalFrame;\n})();\n\n$root.SdkErrorFrame = (function() {\n\n    /**\n     * Properties of a SdkErrorFrame.\n     * @exports ISdkErrorFrame\n     * @interface ISdkErrorFrame\n     * @property {number|null} [status] SdkErrorFrame status\n     * @property {string|null} [description] SdkErrorFrame description\n     */\n\n    /**\n     * Constructs a new SdkErrorFrame.\n     * @exports SdkErrorFrame\n     * @classdesc Represents a SdkErrorFrame.\n     * @implements ISdkErrorFrame\n     * @constructor\n     * @param {ISdkErrorFrame=} [properties] Properties to set\n     */\n    function SdkErrorFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkErrorFrame status.\n     * @member {number} status\n     * @memberof SdkErrorFrame\n     * @instance\n     */\n    SdkErrorFrame.prototype.status = 0;\n\n    /**\n     * SdkErrorFrame description.\n     * @member {string} description\n     * @memberof SdkErrorFrame\n     * @instance\n     */\n    SdkErrorFrame.prototype.description = \"\";\n\n    /**\n     * Creates a new SdkErrorFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {ISdkErrorFrame=} [properties] Properties to set\n     * @returns {SdkErrorFrame} SdkErrorFrame instance\n     */\n    SdkErrorFrame.create = function create(properties) {\n        return new SdkErrorFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkErrorFrame message. Does not implicitly {@link SdkErrorFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {ISdkErrorFrame} message SdkErrorFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkErrorFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.status != null && message.hasOwnProperty(\"status\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.status);\n        if (message.description != null && message.hasOwnProperty(\"description\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkErrorFrame message, length delimited. Does not implicitly {@link SdkErrorFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {ISdkErrorFrame} message SdkErrorFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkErrorFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkErrorFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkErrorFrame} SdkErrorFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkErrorFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkErrorFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.status = reader.uint32();\n                break;\n            case 2:\n                message.description = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkErrorFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkErrorFrame} SdkErrorFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkErrorFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkErrorFrame message.\n     * @function verify\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkErrorFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.status != null && message.hasOwnProperty(\"status\"))\n            if (!$util.isInteger(message.status))\n                return \"status: integer expected\";\n        if (message.description != null && message.hasOwnProperty(\"description\"))\n            if (!$util.isString(message.description))\n                return \"description: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkErrorFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkErrorFrame} SdkErrorFrame\n     */\n    SdkErrorFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkErrorFrame)\n            return object;\n        var message = new $root.SdkErrorFrame();\n        if (object.status != null)\n            message.status = object.status >>> 0;\n        if (object.description != null)\n            message.description = String(object.description);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkErrorFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {SdkErrorFrame} message SdkErrorFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkErrorFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.status = 0;\n            object.description = \"\";\n        }\n        if (message.status != null && message.hasOwnProperty(\"status\"))\n            object.status = message.status;\n        if (message.description != null && message.hasOwnProperty(\"description\"))\n            object.description = message.description;\n        return object;\n    };\n\n    /**\n     * Converts this SdkErrorFrame to JSON.\n     * @function toJSON\n     * @memberof SdkErrorFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkErrorFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkErrorFrame;\n})();\n\n/**\n * SdkJoinFlags enum.\n * @exports SdkJoinFlags\n * @enum {string}\n * @property {number} SEND_BITRATES=1 SEND_BITRATES value\n * @property {number} HAS_STREAM_UPDATE=2 HAS_STREAM_UPDATE value\n * @property {number} USE_SEND_SIDE_BWE=8 USE_SEND_SIDE_BWE value\n * @property {number} COMPLETE_VIDEO_SOURCES_LIST=16 COMPLETE_VIDEO_SOURCES_LIST value\n * @property {number} EXCLUDE_SELF_CONTENT_IN_INDEX=32 EXCLUDE_SELF_CONTENT_IN_INDEX value\n */\n$root.SdkJoinFlags = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[1] = \"SEND_BITRATES\"] = 1;\n    values[valuesById[2] = \"HAS_STREAM_UPDATE\"] = 2;\n    values[valuesById[8] = \"USE_SEND_SIDE_BWE\"] = 8;\n    values[valuesById[16] = \"COMPLETE_VIDEO_SOURCES_LIST\"] = 16;\n    values[valuesById[32] = \"EXCLUDE_SELF_CONTENT_IN_INDEX\"] = 32;\n    return values;\n})();\n\n$root.SdkClientDetails = (function() {\n\n    /**\n     * Properties of a SdkClientDetails.\n     * @exports ISdkClientDetails\n     * @interface ISdkClientDetails\n     * @property {string|null} [appName] SdkClientDetails appName\n     * @property {string|null} [appVersion] SdkClientDetails appVersion\n     * @property {string|null} [deviceModel] SdkClientDetails deviceModel\n     * @property {string|null} [deviceMake] SdkClientDetails deviceMake\n     * @property {string|null} [platformName] SdkClientDetails platformName\n     * @property {string|null} [platformVersion] SdkClientDetails platformVersion\n     * @property {string|null} [clientSource] SdkClientDetails clientSource\n     * @property {string|null} [chimeSdkVersion] SdkClientDetails chimeSdkVersion\n     */\n\n    /**\n     * Constructs a new SdkClientDetails.\n     * @exports SdkClientDetails\n     * @classdesc Represents a SdkClientDetails.\n     * @implements ISdkClientDetails\n     * @constructor\n     * @param {ISdkClientDetails=} [properties] Properties to set\n     */\n    function SdkClientDetails(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkClientDetails appName.\n     * @member {string} appName\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.appName = \"\";\n\n    /**\n     * SdkClientDetails appVersion.\n     * @member {string} appVersion\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.appVersion = \"\";\n\n    /**\n     * SdkClientDetails deviceModel.\n     * @member {string} deviceModel\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.deviceModel = \"\";\n\n    /**\n     * SdkClientDetails deviceMake.\n     * @member {string} deviceMake\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.deviceMake = \"\";\n\n    /**\n     * SdkClientDetails platformName.\n     * @member {string} platformName\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.platformName = \"\";\n\n    /**\n     * SdkClientDetails platformVersion.\n     * @member {string} platformVersion\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.platformVersion = \"\";\n\n    /**\n     * SdkClientDetails clientSource.\n     * @member {string} clientSource\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.clientSource = \"\";\n\n    /**\n     * SdkClientDetails chimeSdkVersion.\n     * @member {string} chimeSdkVersion\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.chimeSdkVersion = \"\";\n\n    /**\n     * Creates a new SdkClientDetails instance using the specified properties.\n     * @function create\n     * @memberof SdkClientDetails\n     * @static\n     * @param {ISdkClientDetails=} [properties] Properties to set\n     * @returns {SdkClientDetails} SdkClientDetails instance\n     */\n    SdkClientDetails.create = function create(properties) {\n        return new SdkClientDetails(properties);\n    };\n\n    /**\n     * Encodes the specified SdkClientDetails message. Does not implicitly {@link SdkClientDetails.verify|verify} messages.\n     * @function encode\n     * @memberof SdkClientDetails\n     * @static\n     * @param {ISdkClientDetails} message SdkClientDetails message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkClientDetails.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.appName != null && message.hasOwnProperty(\"appName\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.appName);\n        if (message.appVersion != null && message.hasOwnProperty(\"appVersion\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.appVersion);\n        if (message.deviceModel != null && message.hasOwnProperty(\"deviceModel\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.deviceModel);\n        if (message.deviceMake != null && message.hasOwnProperty(\"deviceMake\"))\n            writer.uint32(/* id 4, wireType 2 =*/34).string(message.deviceMake);\n        if (message.platformName != null && message.hasOwnProperty(\"platformName\"))\n            writer.uint32(/* id 5, wireType 2 =*/42).string(message.platformName);\n        if (message.platformVersion != null && message.hasOwnProperty(\"platformVersion\"))\n            writer.uint32(/* id 6, wireType 2 =*/50).string(message.platformVersion);\n        if (message.clientSource != null && message.hasOwnProperty(\"clientSource\"))\n            writer.uint32(/* id 7, wireType 2 =*/58).string(message.clientSource);\n        if (message.chimeSdkVersion != null && message.hasOwnProperty(\"chimeSdkVersion\"))\n            writer.uint32(/* id 8, wireType 2 =*/66).string(message.chimeSdkVersion);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkClientDetails message, length delimited. Does not implicitly {@link SdkClientDetails.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkClientDetails\n     * @static\n     * @param {ISdkClientDetails} message SdkClientDetails message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkClientDetails.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkClientDetails message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkClientDetails\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkClientDetails} SdkClientDetails\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkClientDetails.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkClientDetails();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.appName = reader.string();\n                break;\n            case 2:\n                message.appVersion = reader.string();\n                break;\n            case 3:\n                message.deviceModel = reader.string();\n                break;\n            case 4:\n                message.deviceMake = reader.string();\n                break;\n            case 5:\n                message.platformName = reader.string();\n                break;\n            case 6:\n                message.platformVersion = reader.string();\n                break;\n            case 7:\n                message.clientSource = reader.string();\n                break;\n            case 8:\n                message.chimeSdkVersion = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkClientDetails message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkClientDetails\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkClientDetails} SdkClientDetails\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkClientDetails.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkClientDetails message.\n     * @function verify\n     * @memberof SdkClientDetails\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkClientDetails.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.appName != null && message.hasOwnProperty(\"appName\"))\n            if (!$util.isString(message.appName))\n                return \"appName: string expected\";\n        if (message.appVersion != null && message.hasOwnProperty(\"appVersion\"))\n            if (!$util.isString(message.appVersion))\n                return \"appVersion: string expected\";\n        if (message.deviceModel != null && message.hasOwnProperty(\"deviceModel\"))\n            if (!$util.isString(message.deviceModel))\n                return \"deviceModel: string expected\";\n        if (message.deviceMake != null && message.hasOwnProperty(\"deviceMake\"))\n            if (!$util.isString(message.deviceMake))\n                return \"deviceMake: string expected\";\n        if (message.platformName != null && message.hasOwnProperty(\"platformName\"))\n            if (!$util.isString(message.platformName))\n                return \"platformName: string expected\";\n        if (message.platformVersion != null && message.hasOwnProperty(\"platformVersion\"))\n            if (!$util.isString(message.platformVersion))\n                return \"platformVersion: string expected\";\n        if (message.clientSource != null && message.hasOwnProperty(\"clientSource\"))\n            if (!$util.isString(message.clientSource))\n                return \"clientSource: string expected\";\n        if (message.chimeSdkVersion != null && message.hasOwnProperty(\"chimeSdkVersion\"))\n            if (!$util.isString(message.chimeSdkVersion))\n                return \"chimeSdkVersion: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkClientDetails message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkClientDetails\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkClientDetails} SdkClientDetails\n     */\n    SdkClientDetails.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkClientDetails)\n            return object;\n        var message = new $root.SdkClientDetails();\n        if (object.appName != null)\n            message.appName = String(object.appName);\n        if (object.appVersion != null)\n            message.appVersion = String(object.appVersion);\n        if (object.deviceModel != null)\n            message.deviceModel = String(object.deviceModel);\n        if (object.deviceMake != null)\n            message.deviceMake = String(object.deviceMake);\n        if (object.platformName != null)\n            message.platformName = String(object.platformName);\n        if (object.platformVersion != null)\n            message.platformVersion = String(object.platformVersion);\n        if (object.clientSource != null)\n            message.clientSource = String(object.clientSource);\n        if (object.chimeSdkVersion != null)\n            message.chimeSdkVersion = String(object.chimeSdkVersion);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkClientDetails message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkClientDetails\n     * @static\n     * @param {SdkClientDetails} message SdkClientDetails\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkClientDetails.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.appName = \"\";\n            object.appVersion = \"\";\n            object.deviceModel = \"\";\n            object.deviceMake = \"\";\n            object.platformName = \"\";\n            object.platformVersion = \"\";\n            object.clientSource = \"\";\n            object.chimeSdkVersion = \"\";\n        }\n        if (message.appName != null && message.hasOwnProperty(\"appName\"))\n            object.appName = message.appName;\n        if (message.appVersion != null && message.hasOwnProperty(\"appVersion\"))\n            object.appVersion = message.appVersion;\n        if (message.deviceModel != null && message.hasOwnProperty(\"deviceModel\"))\n            object.deviceModel = message.deviceModel;\n        if (message.deviceMake != null && message.hasOwnProperty(\"deviceMake\"))\n            object.deviceMake = message.deviceMake;\n        if (message.platformName != null && message.hasOwnProperty(\"platformName\"))\n            object.platformName = message.platformName;\n        if (message.platformVersion != null && message.hasOwnProperty(\"platformVersion\"))\n            object.platformVersion = message.platformVersion;\n        if (message.clientSource != null && message.hasOwnProperty(\"clientSource\"))\n            object.clientSource = message.clientSource;\n        if (message.chimeSdkVersion != null && message.hasOwnProperty(\"chimeSdkVersion\"))\n            object.chimeSdkVersion = message.chimeSdkVersion;\n        return object;\n    };\n\n    /**\n     * Converts this SdkClientDetails to JSON.\n     * @function toJSON\n     * @memberof SdkClientDetails\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkClientDetails.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkClientDetails;\n})();\n\n$root.SdkJoinFrame = (function() {\n\n    /**\n     * Properties of a SdkJoinFrame.\n     * @exports ISdkJoinFrame\n     * @interface ISdkJoinFrame\n     * @property {number|null} [protocolVersion] SdkJoinFrame protocolVersion\n     * @property {number|null} [maxNumOfVideos] SdkJoinFrame maxNumOfVideos\n     * @property {number|null} [flags] SdkJoinFrame flags\n     * @property {ISdkClientDetails|null} [clientDetails] SdkJoinFrame clientDetails\n     * @property {number|Long|null} [audioSessionId] SdkJoinFrame audioSessionId\n     * @property {boolean|null} [wantsCompressedSdp] SdkJoinFrame wantsCompressedSdp\n     */\n\n    /**\n     * Constructs a new SdkJoinFrame.\n     * @exports SdkJoinFrame\n     * @classdesc Represents a SdkJoinFrame.\n     * @implements ISdkJoinFrame\n     * @constructor\n     * @param {ISdkJoinFrame=} [properties] Properties to set\n     */\n    function SdkJoinFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkJoinFrame protocolVersion.\n     * @member {number} protocolVersion\n     * @memberof SdkJoinFrame\n     * @instance\n     */\n    SdkJoinFrame.prototype.protocolVersion = 2;\n\n    /**\n     * SdkJoinFrame maxNumOfVideos.\n     * @member {number} maxNumOfVideos\n     * @memberof SdkJoinFrame\n     * @instance\n     */\n    SdkJoinFrame.prototype.maxNumOfVideos = 0;\n\n    /**\n     * SdkJoinFrame flags.\n     * @member {number} flags\n     * @memberof SdkJoinFrame\n     * @instance\n     */\n    SdkJoinFrame.prototype.flags = 0;\n\n    /**\n     * SdkJoinFrame clientDetails.\n     * @member {ISdkClientDetails|null|undefined} clientDetails\n     * @memberof SdkJoinFrame\n     * @instance\n     */\n    SdkJoinFrame.prototype.clientDetails = null;\n\n    /**\n     * SdkJoinFrame audioSessionId.\n     * @member {number|Long} audioSessionId\n     * @memberof SdkJoinFrame\n     * @instance\n     */\n    SdkJoinFrame.prototype.audioSessionId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * SdkJoinFrame wantsCompressedSdp.\n     * @member {boolean} wantsCompressedSdp\n     * @memberof SdkJoinFrame\n     * @instance\n     */\n    SdkJoinFrame.prototype.wantsCompressedSdp = false;\n\n    /**\n     * Creates a new SdkJoinFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {ISdkJoinFrame=} [properties] Properties to set\n     * @returns {SdkJoinFrame} SdkJoinFrame instance\n     */\n    SdkJoinFrame.create = function create(properties) {\n        return new SdkJoinFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkJoinFrame message. Does not implicitly {@link SdkJoinFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {ISdkJoinFrame} message SdkJoinFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkJoinFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.protocolVersion != null && message.hasOwnProperty(\"protocolVersion\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.protocolVersion);\n        if (message.maxNumOfVideos != null && message.hasOwnProperty(\"maxNumOfVideos\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.maxNumOfVideos);\n        if (message.flags != null && message.hasOwnProperty(\"flags\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.flags);\n        if (message.clientDetails != null && message.hasOwnProperty(\"clientDetails\"))\n            $root.SdkClientDetails.encode(message.clientDetails, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n        if (message.audioSessionId != null && message.hasOwnProperty(\"audioSessionId\"))\n            writer.uint32(/* id 6, wireType 0 =*/48).uint64(message.audioSessionId);\n        if (message.wantsCompressedSdp != null && message.hasOwnProperty(\"wantsCompressedSdp\"))\n            writer.uint32(/* id 7, wireType 0 =*/56).bool(message.wantsCompressedSdp);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkJoinFrame message, length delimited. Does not implicitly {@link SdkJoinFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {ISdkJoinFrame} message SdkJoinFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkJoinFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkJoinFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkJoinFrame} SdkJoinFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkJoinFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkJoinFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.protocolVersion = reader.uint32();\n                break;\n            case 2:\n                message.maxNumOfVideos = reader.uint32();\n                break;\n            case 3:\n                message.flags = reader.uint32();\n                break;\n            case 4:\n                message.clientDetails = $root.SdkClientDetails.decode(reader, reader.uint32());\n                break;\n            case 6:\n                message.audioSessionId = reader.uint64();\n                break;\n            case 7:\n                message.wantsCompressedSdp = reader.bool();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkJoinFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkJoinFrame} SdkJoinFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkJoinFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkJoinFrame message.\n     * @function verify\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkJoinFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.protocolVersion != null && message.hasOwnProperty(\"protocolVersion\"))\n            if (!$util.isInteger(message.protocolVersion))\n                return \"protocolVersion: integer expected\";\n        if (message.maxNumOfVideos != null && message.hasOwnProperty(\"maxNumOfVideos\"))\n            if (!$util.isInteger(message.maxNumOfVideos))\n                return \"maxNumOfVideos: integer expected\";\n        if (message.flags != null && message.hasOwnProperty(\"flags\"))\n            if (!$util.isInteger(message.flags))\n                return \"flags: integer expected\";\n        if (message.clientDetails != null && message.hasOwnProperty(\"clientDetails\")) {\n            var error = $root.SdkClientDetails.verify(message.clientDetails);\n            if (error)\n                return \"clientDetails.\" + error;\n        }\n        if (message.audioSessionId != null && message.hasOwnProperty(\"audioSessionId\"))\n            if (!$util.isInteger(message.audioSessionId) && !(message.audioSessionId && $util.isInteger(message.audioSessionId.low) && $util.isInteger(message.audioSessionId.high)))\n                return \"audioSessionId: integer|Long expected\";\n        if (message.wantsCompressedSdp != null && message.hasOwnProperty(\"wantsCompressedSdp\"))\n            if (typeof message.wantsCompressedSdp !== \"boolean\")\n                return \"wantsCompressedSdp: boolean expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkJoinFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkJoinFrame} SdkJoinFrame\n     */\n    SdkJoinFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkJoinFrame)\n            return object;\n        var message = new $root.SdkJoinFrame();\n        if (object.protocolVersion != null)\n            message.protocolVersion = object.protocolVersion >>> 0;\n        if (object.maxNumOfVideos != null)\n            message.maxNumOfVideos = object.maxNumOfVideos >>> 0;\n        if (object.flags != null)\n            message.flags = object.flags >>> 0;\n        if (object.clientDetails != null) {\n            if (typeof object.clientDetails !== \"object\")\n                throw TypeError(\".SdkJoinFrame.clientDetails: object expected\");\n            message.clientDetails = $root.SdkClientDetails.fromObject(object.clientDetails);\n        }\n        if (object.audioSessionId != null)\n            if ($util.Long)\n                (message.audioSessionId = $util.Long.fromValue(object.audioSessionId)).unsigned = true;\n            else if (typeof object.audioSessionId === \"string\")\n                message.audioSessionId = parseInt(object.audioSessionId, 10);\n            else if (typeof object.audioSessionId === \"number\")\n                message.audioSessionId = object.audioSessionId;\n            else if (typeof object.audioSessionId === \"object\")\n                message.audioSessionId = new $util.LongBits(object.audioSessionId.low >>> 0, object.audioSessionId.high >>> 0).toNumber(true);\n        if (object.wantsCompressedSdp != null)\n            message.wantsCompressedSdp = Boolean(object.wantsCompressedSdp);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkJoinFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {SdkJoinFrame} message SdkJoinFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkJoinFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.protocolVersion = 2;\n            object.maxNumOfVideos = 0;\n            object.flags = 0;\n            object.clientDetails = null;\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.audioSessionId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.audioSessionId = options.longs === String ? \"0\" : 0;\n            object.wantsCompressedSdp = false;\n        }\n        if (message.protocolVersion != null && message.hasOwnProperty(\"protocolVersion\"))\n            object.protocolVersion = message.protocolVersion;\n        if (message.maxNumOfVideos != null && message.hasOwnProperty(\"maxNumOfVideos\"))\n            object.maxNumOfVideos = message.maxNumOfVideos;\n        if (message.flags != null && message.hasOwnProperty(\"flags\"))\n            object.flags = message.flags;\n        if (message.clientDetails != null && message.hasOwnProperty(\"clientDetails\"))\n            object.clientDetails = $root.SdkClientDetails.toObject(message.clientDetails, options);\n        if (message.audioSessionId != null && message.hasOwnProperty(\"audioSessionId\"))\n            if (typeof message.audioSessionId === \"number\")\n                object.audioSessionId = options.longs === String ? String(message.audioSessionId) : message.audioSessionId;\n            else\n                object.audioSessionId = options.longs === String ? $util.Long.prototype.toString.call(message.audioSessionId) : options.longs === Number ? new $util.LongBits(message.audioSessionId.low >>> 0, message.audioSessionId.high >>> 0).toNumber(true) : message.audioSessionId;\n        if (message.wantsCompressedSdp != null && message.hasOwnProperty(\"wantsCompressedSdp\"))\n            object.wantsCompressedSdp = message.wantsCompressedSdp;\n        return object;\n    };\n\n    /**\n     * Converts this SdkJoinFrame to JSON.\n     * @function toJSON\n     * @memberof SdkJoinFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkJoinFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkJoinFrame;\n})();\n\n$root.SdkJoinAckFrame = (function() {\n\n    /**\n     * Properties of a SdkJoinAckFrame.\n     * @exports ISdkJoinAckFrame\n     * @interface ISdkJoinAckFrame\n     * @property {ISdkTurnCredentials|null} [turnCredentials] SdkJoinAckFrame turnCredentials\n     * @property {number|null} [videoSubscriptionLimit] SdkJoinAckFrame videoSubscriptionLimit\n     * @property {boolean|null} [wantsCompressedSdp] SdkJoinAckFrame wantsCompressedSdp\n     */\n\n    /**\n     * Constructs a new SdkJoinAckFrame.\n     * @exports SdkJoinAckFrame\n     * @classdesc Represents a SdkJoinAckFrame.\n     * @implements ISdkJoinAckFrame\n     * @constructor\n     * @param {ISdkJoinAckFrame=} [properties] Properties to set\n     */\n    function SdkJoinAckFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkJoinAckFrame turnCredentials.\n     * @member {ISdkTurnCredentials|null|undefined} turnCredentials\n     * @memberof SdkJoinAckFrame\n     * @instance\n     */\n    SdkJoinAckFrame.prototype.turnCredentials = null;\n\n    /**\n     * SdkJoinAckFrame videoSubscriptionLimit.\n     * @member {number} videoSubscriptionLimit\n     * @memberof SdkJoinAckFrame\n     * @instance\n     */\n    SdkJoinAckFrame.prototype.videoSubscriptionLimit = 25;\n\n    /**\n     * SdkJoinAckFrame wantsCompressedSdp.\n     * @member {boolean} wantsCompressedSdp\n     * @memberof SdkJoinAckFrame\n     * @instance\n     */\n    SdkJoinAckFrame.prototype.wantsCompressedSdp = false;\n\n    /**\n     * Creates a new SdkJoinAckFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {ISdkJoinAckFrame=} [properties] Properties to set\n     * @returns {SdkJoinAckFrame} SdkJoinAckFrame instance\n     */\n    SdkJoinAckFrame.create = function create(properties) {\n        return new SdkJoinAckFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkJoinAckFrame message. Does not implicitly {@link SdkJoinAckFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {ISdkJoinAckFrame} message SdkJoinAckFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkJoinAckFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.turnCredentials != null && message.hasOwnProperty(\"turnCredentials\"))\n            $root.SdkTurnCredentials.encode(message.turnCredentials, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        if (message.videoSubscriptionLimit != null && message.hasOwnProperty(\"videoSubscriptionLimit\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.videoSubscriptionLimit);\n        if (message.wantsCompressedSdp != null && message.hasOwnProperty(\"wantsCompressedSdp\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).bool(message.wantsCompressedSdp);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkJoinAckFrame message, length delimited. Does not implicitly {@link SdkJoinAckFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {ISdkJoinAckFrame} message SdkJoinAckFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkJoinAckFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkJoinAckFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkJoinAckFrame} SdkJoinAckFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkJoinAckFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkJoinAckFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.turnCredentials = $root.SdkTurnCredentials.decode(reader, reader.uint32());\n                break;\n            case 2:\n                message.videoSubscriptionLimit = reader.uint32();\n                break;\n            case 3:\n                message.wantsCompressedSdp = reader.bool();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkJoinAckFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkJoinAckFrame} SdkJoinAckFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkJoinAckFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkJoinAckFrame message.\n     * @function verify\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkJoinAckFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.turnCredentials != null && message.hasOwnProperty(\"turnCredentials\")) {\n            var error = $root.SdkTurnCredentials.verify(message.turnCredentials);\n            if (error)\n                return \"turnCredentials.\" + error;\n        }\n        if (message.videoSubscriptionLimit != null && message.hasOwnProperty(\"videoSubscriptionLimit\"))\n            if (!$util.isInteger(message.videoSubscriptionLimit))\n                return \"videoSubscriptionLimit: integer expected\";\n        if (message.wantsCompressedSdp != null && message.hasOwnProperty(\"wantsCompressedSdp\"))\n            if (typeof message.wantsCompressedSdp !== \"boolean\")\n                return \"wantsCompressedSdp: boolean expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkJoinAckFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkJoinAckFrame} SdkJoinAckFrame\n     */\n    SdkJoinAckFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkJoinAckFrame)\n            return object;\n        var message = new $root.SdkJoinAckFrame();\n        if (object.turnCredentials != null) {\n            if (typeof object.turnCredentials !== \"object\")\n                throw TypeError(\".SdkJoinAckFrame.turnCredentials: object expected\");\n            message.turnCredentials = $root.SdkTurnCredentials.fromObject(object.turnCredentials);\n        }\n        if (object.videoSubscriptionLimit != null)\n            message.videoSubscriptionLimit = object.videoSubscriptionLimit >>> 0;\n        if (object.wantsCompressedSdp != null)\n            message.wantsCompressedSdp = Boolean(object.wantsCompressedSdp);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkJoinAckFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {SdkJoinAckFrame} message SdkJoinAckFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkJoinAckFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.turnCredentials = null;\n            object.videoSubscriptionLimit = 25;\n            object.wantsCompressedSdp = false;\n        }\n        if (message.turnCredentials != null && message.hasOwnProperty(\"turnCredentials\"))\n            object.turnCredentials = $root.SdkTurnCredentials.toObject(message.turnCredentials, options);\n        if (message.videoSubscriptionLimit != null && message.hasOwnProperty(\"videoSubscriptionLimit\"))\n            object.videoSubscriptionLimit = message.videoSubscriptionLimit;\n        if (message.wantsCompressedSdp != null && message.hasOwnProperty(\"wantsCompressedSdp\"))\n            object.wantsCompressedSdp = message.wantsCompressedSdp;\n        return object;\n    };\n\n    /**\n     * Converts this SdkJoinAckFrame to JSON.\n     * @function toJSON\n     * @memberof SdkJoinAckFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkJoinAckFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkJoinAckFrame;\n})();\n\n$root.SdkLeaveFrame = (function() {\n\n    /**\n     * Properties of a SdkLeaveFrame.\n     * @exports ISdkLeaveFrame\n     * @interface ISdkLeaveFrame\n     */\n\n    /**\n     * Constructs a new SdkLeaveFrame.\n     * @exports SdkLeaveFrame\n     * @classdesc Represents a SdkLeaveFrame.\n     * @implements ISdkLeaveFrame\n     * @constructor\n     * @param {ISdkLeaveFrame=} [properties] Properties to set\n     */\n    function SdkLeaveFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Creates a new SdkLeaveFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {ISdkLeaveFrame=} [properties] Properties to set\n     * @returns {SdkLeaveFrame} SdkLeaveFrame instance\n     */\n    SdkLeaveFrame.create = function create(properties) {\n        return new SdkLeaveFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkLeaveFrame message. Does not implicitly {@link SdkLeaveFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {ISdkLeaveFrame} message SdkLeaveFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkLeaveFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkLeaveFrame message, length delimited. Does not implicitly {@link SdkLeaveFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {ISdkLeaveFrame} message SdkLeaveFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkLeaveFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkLeaveFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkLeaveFrame} SdkLeaveFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkLeaveFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkLeaveFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkLeaveFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkLeaveFrame} SdkLeaveFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkLeaveFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkLeaveFrame message.\n     * @function verify\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkLeaveFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkLeaveFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkLeaveFrame} SdkLeaveFrame\n     */\n    SdkLeaveFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkLeaveFrame)\n            return object;\n        return new $root.SdkLeaveFrame();\n    };\n\n    /**\n     * Creates a plain object from a SdkLeaveFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {SdkLeaveFrame} message SdkLeaveFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkLeaveFrame.toObject = function toObject() {\n        return {};\n    };\n\n    /**\n     * Converts this SdkLeaveFrame to JSON.\n     * @function toJSON\n     * @memberof SdkLeaveFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkLeaveFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkLeaveFrame;\n})();\n\n$root.SdkLeaveAckFrame = (function() {\n\n    /**\n     * Properties of a SdkLeaveAckFrame.\n     * @exports ISdkLeaveAckFrame\n     * @interface ISdkLeaveAckFrame\n     */\n\n    /**\n     * Constructs a new SdkLeaveAckFrame.\n     * @exports SdkLeaveAckFrame\n     * @classdesc Represents a SdkLeaveAckFrame.\n     * @implements ISdkLeaveAckFrame\n     * @constructor\n     * @param {ISdkLeaveAckFrame=} [properties] Properties to set\n     */\n    function SdkLeaveAckFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Creates a new SdkLeaveAckFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {ISdkLeaveAckFrame=} [properties] Properties to set\n     * @returns {SdkLeaveAckFrame} SdkLeaveAckFrame instance\n     */\n    SdkLeaveAckFrame.create = function create(properties) {\n        return new SdkLeaveAckFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkLeaveAckFrame message. Does not implicitly {@link SdkLeaveAckFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {ISdkLeaveAckFrame} message SdkLeaveAckFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkLeaveAckFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkLeaveAckFrame message, length delimited. Does not implicitly {@link SdkLeaveAckFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {ISdkLeaveAckFrame} message SdkLeaveAckFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkLeaveAckFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkLeaveAckFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkLeaveAckFrame} SdkLeaveAckFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkLeaveAckFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkLeaveAckFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkLeaveAckFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkLeaveAckFrame} SdkLeaveAckFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkLeaveAckFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkLeaveAckFrame message.\n     * @function verify\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkLeaveAckFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkLeaveAckFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkLeaveAckFrame} SdkLeaveAckFrame\n     */\n    SdkLeaveAckFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkLeaveAckFrame)\n            return object;\n        return new $root.SdkLeaveAckFrame();\n    };\n\n    /**\n     * Creates a plain object from a SdkLeaveAckFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {SdkLeaveAckFrame} message SdkLeaveAckFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkLeaveAckFrame.toObject = function toObject() {\n        return {};\n    };\n\n    /**\n     * Converts this SdkLeaveAckFrame to JSON.\n     * @function toJSON\n     * @memberof SdkLeaveAckFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkLeaveAckFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkLeaveAckFrame;\n})();\n\n/**\n * SdkStreamServiceType enum.\n * @exports SdkStreamServiceType\n * @enum {string}\n * @property {number} RX=1 RX value\n * @property {number} TX=2 TX value\n * @property {number} DUPLEX=3 DUPLEX value\n */\n$root.SdkStreamServiceType = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[1] = \"RX\"] = 1;\n    values[valuesById[2] = \"TX\"] = 2;\n    values[valuesById[3] = \"DUPLEX\"] = 3;\n    return values;\n})();\n\n/**\n * SdkStreamMediaType enum.\n * @exports SdkStreamMediaType\n * @enum {string}\n * @property {number} AUDIO=1 AUDIO value\n * @property {number} VIDEO=2 VIDEO value\n */\n$root.SdkStreamMediaType = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[1] = \"AUDIO\"] = 1;\n    values[valuesById[2] = \"VIDEO\"] = 2;\n    return values;\n})();\n\n$root.SdkSubscribeFrame = (function() {\n\n    /**\n     * Properties of a SdkSubscribeFrame.\n     * @exports ISdkSubscribeFrame\n     * @interface ISdkSubscribeFrame\n     * @property {SdkStreamServiceType|null} [duplex] SdkSubscribeFrame duplex\n     * @property {Array.<ISdkStreamDescriptor>|null} [sendStreams] SdkSubscribeFrame sendStreams\n     * @property {Array.<number>|null} [receiveStreamIds] SdkSubscribeFrame receiveStreamIds\n     * @property {string|null} [sdpOffer] SdkSubscribeFrame sdpOffer\n     * @property {string|null} [audioHost] SdkSubscribeFrame audioHost\n     * @property {boolean|null} [audioCheckin] SdkSubscribeFrame audioCheckin\n     * @property {boolean|null} [audioMuted] SdkSubscribeFrame audioMuted\n     * @property {Uint8Array|null} [compressedSdpOffer] SdkSubscribeFrame compressedSdpOffer\n     */\n\n    /**\n     * Constructs a new SdkSubscribeFrame.\n     * @exports SdkSubscribeFrame\n     * @classdesc Represents a SdkSubscribeFrame.\n     * @implements ISdkSubscribeFrame\n     * @constructor\n     * @param {ISdkSubscribeFrame=} [properties] Properties to set\n     */\n    function SdkSubscribeFrame(properties) {\n        this.sendStreams = [];\n        this.receiveStreamIds = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkSubscribeFrame duplex.\n     * @member {SdkStreamServiceType} duplex\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.duplex = 1;\n\n    /**\n     * SdkSubscribeFrame sendStreams.\n     * @member {Array.<ISdkStreamDescriptor>} sendStreams\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.sendStreams = $util.emptyArray;\n\n    /**\n     * SdkSubscribeFrame receiveStreamIds.\n     * @member {Array.<number>} receiveStreamIds\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.receiveStreamIds = $util.emptyArray;\n\n    /**\n     * SdkSubscribeFrame sdpOffer.\n     * @member {string} sdpOffer\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.sdpOffer = \"\";\n\n    /**\n     * SdkSubscribeFrame audioHost.\n     * @member {string} audioHost\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.audioHost = \"\";\n\n    /**\n     * SdkSubscribeFrame audioCheckin.\n     * @member {boolean} audioCheckin\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.audioCheckin = false;\n\n    /**\n     * SdkSubscribeFrame audioMuted.\n     * @member {boolean} audioMuted\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.audioMuted = false;\n\n    /**\n     * SdkSubscribeFrame compressedSdpOffer.\n     * @member {Uint8Array} compressedSdpOffer\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.compressedSdpOffer = $util.newBuffer([]);\n\n    /**\n     * Creates a new SdkSubscribeFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {ISdkSubscribeFrame=} [properties] Properties to set\n     * @returns {SdkSubscribeFrame} SdkSubscribeFrame instance\n     */\n    SdkSubscribeFrame.create = function create(properties) {\n        return new SdkSubscribeFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkSubscribeFrame message. Does not implicitly {@link SdkSubscribeFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {ISdkSubscribeFrame} message SdkSubscribeFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkSubscribeFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.duplex != null && message.hasOwnProperty(\"duplex\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.duplex);\n        if (message.sendStreams != null && message.sendStreams.length)\n            for (var i = 0; i < message.sendStreams.length; ++i)\n                $root.SdkStreamDescriptor.encode(message.sendStreams[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        if (message.receiveStreamIds != null && message.receiveStreamIds.length)\n            for (var i = 0; i < message.receiveStreamIds.length; ++i)\n                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.receiveStreamIds[i]);\n        if (message.sdpOffer != null && message.hasOwnProperty(\"sdpOffer\"))\n            writer.uint32(/* id 4, wireType 2 =*/34).string(message.sdpOffer);\n        if (message.audioHost != null && message.hasOwnProperty(\"audioHost\"))\n            writer.uint32(/* id 5, wireType 2 =*/42).string(message.audioHost);\n        if (message.audioCheckin != null && message.hasOwnProperty(\"audioCheckin\"))\n            writer.uint32(/* id 6, wireType 0 =*/48).bool(message.audioCheckin);\n        if (message.audioMuted != null && message.hasOwnProperty(\"audioMuted\"))\n            writer.uint32(/* id 7, wireType 0 =*/56).bool(message.audioMuted);\n        if (message.compressedSdpOffer != null && message.hasOwnProperty(\"compressedSdpOffer\"))\n            writer.uint32(/* id 8, wireType 2 =*/66).bytes(message.compressedSdpOffer);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkSubscribeFrame message, length delimited. Does not implicitly {@link SdkSubscribeFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {ISdkSubscribeFrame} message SdkSubscribeFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkSubscribeFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkSubscribeFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkSubscribeFrame} SdkSubscribeFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkSubscribeFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkSubscribeFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.duplex = reader.int32();\n                break;\n            case 2:\n                if (!(message.sendStreams && message.sendStreams.length))\n                    message.sendStreams = [];\n                message.sendStreams.push($root.SdkStreamDescriptor.decode(reader, reader.uint32()));\n                break;\n            case 3:\n                if (!(message.receiveStreamIds && message.receiveStreamIds.length))\n                    message.receiveStreamIds = [];\n                if ((tag & 7) === 2) {\n                    var end2 = reader.uint32() + reader.pos;\n                    while (reader.pos < end2)\n                        message.receiveStreamIds.push(reader.uint32());\n                } else\n                    message.receiveStreamIds.push(reader.uint32());\n                break;\n            case 4:\n                message.sdpOffer = reader.string();\n                break;\n            case 5:\n                message.audioHost = reader.string();\n                break;\n            case 6:\n                message.audioCheckin = reader.bool();\n                break;\n            case 7:\n                message.audioMuted = reader.bool();\n                break;\n            case 8:\n                message.compressedSdpOffer = reader.bytes();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkSubscribeFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkSubscribeFrame} SdkSubscribeFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkSubscribeFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkSubscribeFrame message.\n     * @function verify\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkSubscribeFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.duplex != null && message.hasOwnProperty(\"duplex\"))\n            switch (message.duplex) {\n            default:\n                return \"duplex: enum value expected\";\n            case 1:\n            case 2:\n            case 3:\n                break;\n            }\n        if (message.sendStreams != null && message.hasOwnProperty(\"sendStreams\")) {\n            if (!Array.isArray(message.sendStreams))\n                return \"sendStreams: array expected\";\n            for (var i = 0; i < message.sendStreams.length; ++i) {\n                var error = $root.SdkStreamDescriptor.verify(message.sendStreams[i]);\n                if (error)\n                    return \"sendStreams.\" + error;\n            }\n        }\n        if (message.receiveStreamIds != null && message.hasOwnProperty(\"receiveStreamIds\")) {\n            if (!Array.isArray(message.receiveStreamIds))\n                return \"receiveStreamIds: array expected\";\n            for (var i = 0; i < message.receiveStreamIds.length; ++i)\n                if (!$util.isInteger(message.receiveStreamIds[i]))\n                    return \"receiveStreamIds: integer[] expected\";\n        }\n        if (message.sdpOffer != null && message.hasOwnProperty(\"sdpOffer\"))\n            if (!$util.isString(message.sdpOffer))\n                return \"sdpOffer: string expected\";\n        if (message.audioHost != null && message.hasOwnProperty(\"audioHost\"))\n            if (!$util.isString(message.audioHost))\n                return \"audioHost: string expected\";\n        if (message.audioCheckin != null && message.hasOwnProperty(\"audioCheckin\"))\n            if (typeof message.audioCheckin !== \"boolean\")\n                return \"audioCheckin: boolean expected\";\n        if (message.audioMuted != null && message.hasOwnProperty(\"audioMuted\"))\n            if (typeof message.audioMuted !== \"boolean\")\n                return \"audioMuted: boolean expected\";\n        if (message.compressedSdpOffer != null && message.hasOwnProperty(\"compressedSdpOffer\"))\n            if (!(message.compressedSdpOffer && typeof message.compressedSdpOffer.length === \"number\" || $util.isString(message.compressedSdpOffer)))\n                return \"compressedSdpOffer: buffer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkSubscribeFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkSubscribeFrame} SdkSubscribeFrame\n     */\n    SdkSubscribeFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkSubscribeFrame)\n            return object;\n        var message = new $root.SdkSubscribeFrame();\n        switch (object.duplex) {\n        case \"RX\":\n        case 1:\n            message.duplex = 1;\n            break;\n        case \"TX\":\n        case 2:\n            message.duplex = 2;\n            break;\n        case \"DUPLEX\":\n        case 3:\n            message.duplex = 3;\n            break;\n        }\n        if (object.sendStreams) {\n            if (!Array.isArray(object.sendStreams))\n                throw TypeError(\".SdkSubscribeFrame.sendStreams: array expected\");\n            message.sendStreams = [];\n            for (var i = 0; i < object.sendStreams.length; ++i) {\n                if (typeof object.sendStreams[i] !== \"object\")\n                    throw TypeError(\".SdkSubscribeFrame.sendStreams: object expected\");\n                message.sendStreams[i] = $root.SdkStreamDescriptor.fromObject(object.sendStreams[i]);\n            }\n        }\n        if (object.receiveStreamIds) {\n            if (!Array.isArray(object.receiveStreamIds))\n                throw TypeError(\".SdkSubscribeFrame.receiveStreamIds: array expected\");\n            message.receiveStreamIds = [];\n            for (var i = 0; i < object.receiveStreamIds.length; ++i)\n                message.receiveStreamIds[i] = object.receiveStreamIds[i] >>> 0;\n        }\n        if (object.sdpOffer != null)\n            message.sdpOffer = String(object.sdpOffer);\n        if (object.audioHost != null)\n            message.audioHost = String(object.audioHost);\n        if (object.audioCheckin != null)\n            message.audioCheckin = Boolean(object.audioCheckin);\n        if (object.audioMuted != null)\n            message.audioMuted = Boolean(object.audioMuted);\n        if (object.compressedSdpOffer != null)\n            if (typeof object.compressedSdpOffer === \"string\")\n                $util.base64.decode(object.compressedSdpOffer, message.compressedSdpOffer = $util.newBuffer($util.base64.length(object.compressedSdpOffer)), 0);\n            else if (object.compressedSdpOffer.length)\n                message.compressedSdpOffer = object.compressedSdpOffer;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkSubscribeFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {SdkSubscribeFrame} message SdkSubscribeFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkSubscribeFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.sendStreams = [];\n            object.receiveStreamIds = [];\n        }\n        if (options.defaults) {\n            object.duplex = options.enums === String ? \"RX\" : 1;\n            object.sdpOffer = \"\";\n            object.audioHost = \"\";\n            object.audioCheckin = false;\n            object.audioMuted = false;\n            if (options.bytes === String)\n                object.compressedSdpOffer = \"\";\n            else {\n                object.compressedSdpOffer = [];\n                if (options.bytes !== Array)\n                    object.compressedSdpOffer = $util.newBuffer(object.compressedSdpOffer);\n            }\n        }\n        if (message.duplex != null && message.hasOwnProperty(\"duplex\"))\n            object.duplex = options.enums === String ? $root.SdkStreamServiceType[message.duplex] : message.duplex;\n        if (message.sendStreams && message.sendStreams.length) {\n            object.sendStreams = [];\n            for (var j = 0; j < message.sendStreams.length; ++j)\n                object.sendStreams[j] = $root.SdkStreamDescriptor.toObject(message.sendStreams[j], options);\n        }\n        if (message.receiveStreamIds && message.receiveStreamIds.length) {\n            object.receiveStreamIds = [];\n            for (var j = 0; j < message.receiveStreamIds.length; ++j)\n                object.receiveStreamIds[j] = message.receiveStreamIds[j];\n        }\n        if (message.sdpOffer != null && message.hasOwnProperty(\"sdpOffer\"))\n            object.sdpOffer = message.sdpOffer;\n        if (message.audioHost != null && message.hasOwnProperty(\"audioHost\"))\n            object.audioHost = message.audioHost;\n        if (message.audioCheckin != null && message.hasOwnProperty(\"audioCheckin\"))\n            object.audioCheckin = message.audioCheckin;\n        if (message.audioMuted != null && message.hasOwnProperty(\"audioMuted\"))\n            object.audioMuted = message.audioMuted;\n        if (message.compressedSdpOffer != null && message.hasOwnProperty(\"compressedSdpOffer\"))\n            object.compressedSdpOffer = options.bytes === String ? $util.base64.encode(message.compressedSdpOffer, 0, message.compressedSdpOffer.length) : options.bytes === Array ? Array.prototype.slice.call(message.compressedSdpOffer) : message.compressedSdpOffer;\n        return object;\n    };\n\n    /**\n     * Converts this SdkSubscribeFrame to JSON.\n     * @function toJSON\n     * @memberof SdkSubscribeFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkSubscribeFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkSubscribeFrame;\n})();\n\n$root.SdkSubscribeAckFrame = (function() {\n\n    /**\n     * Properties of a SdkSubscribeAckFrame.\n     * @exports ISdkSubscribeAckFrame\n     * @interface ISdkSubscribeAckFrame\n     * @property {SdkStreamServiceType|null} [duplex] SdkSubscribeAckFrame duplex\n     * @property {Array.<ISdkStreamAllocation>|null} [allocations] SdkSubscribeAckFrame allocations\n     * @property {string|null} [sdpAnswer] SdkSubscribeAckFrame sdpAnswer\n     * @property {Array.<ISdkTrackMapping>|null} [tracks] SdkSubscribeAckFrame tracks\n     * @property {Uint8Array|null} [compressedSdpAnswer] SdkSubscribeAckFrame compressedSdpAnswer\n     */\n\n    /**\n     * Constructs a new SdkSubscribeAckFrame.\n     * @exports SdkSubscribeAckFrame\n     * @classdesc Represents a SdkSubscribeAckFrame.\n     * @implements ISdkSubscribeAckFrame\n     * @constructor\n     * @param {ISdkSubscribeAckFrame=} [properties] Properties to set\n     */\n    function SdkSubscribeAckFrame(properties) {\n        this.allocations = [];\n        this.tracks = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkSubscribeAckFrame duplex.\n     * @member {SdkStreamServiceType} duplex\n     * @memberof SdkSubscribeAckFrame\n     * @instance\n     */\n    SdkSubscribeAckFrame.prototype.duplex = 1;\n\n    /**\n     * SdkSubscribeAckFrame allocations.\n     * @member {Array.<ISdkStreamAllocation>} allocations\n     * @memberof SdkSubscribeAckFrame\n     * @instance\n     */\n    SdkSubscribeAckFrame.prototype.allocations = $util.emptyArray;\n\n    /**\n     * SdkSubscribeAckFrame sdpAnswer.\n     * @member {string} sdpAnswer\n     * @memberof SdkSubscribeAckFrame\n     * @instance\n     */\n    SdkSubscribeAckFrame.prototype.sdpAnswer = \"\";\n\n    /**\n     * SdkSubscribeAckFrame tracks.\n     * @member {Array.<ISdkTrackMapping>} tracks\n     * @memberof SdkSubscribeAckFrame\n     * @instance\n     */\n    SdkSubscribeAckFrame.prototype.tracks = $util.emptyArray;\n\n    /**\n     * SdkSubscribeAckFrame compressedSdpAnswer.\n     * @member {Uint8Array} compressedSdpAnswer\n     * @memberof SdkSubscribeAckFrame\n     * @instance\n     */\n    SdkSubscribeAckFrame.prototype.compressedSdpAnswer = $util.newBuffer([]);\n\n    /**\n     * Creates a new SdkSubscribeAckFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {ISdkSubscribeAckFrame=} [properties] Properties to set\n     * @returns {SdkSubscribeAckFrame} SdkSubscribeAckFrame instance\n     */\n    SdkSubscribeAckFrame.create = function create(properties) {\n        return new SdkSubscribeAckFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkSubscribeAckFrame message. Does not implicitly {@link SdkSubscribeAckFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {ISdkSubscribeAckFrame} message SdkSubscribeAckFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkSubscribeAckFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.duplex != null && message.hasOwnProperty(\"duplex\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.duplex);\n        if (message.allocations != null && message.allocations.length)\n            for (var i = 0; i < message.allocations.length; ++i)\n                $root.SdkStreamAllocation.encode(message.allocations[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        if (message.sdpAnswer != null && message.hasOwnProperty(\"sdpAnswer\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.sdpAnswer);\n        if (message.tracks != null && message.tracks.length)\n            for (var i = 0; i < message.tracks.length; ++i)\n                $root.SdkTrackMapping.encode(message.tracks[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n        if (message.compressedSdpAnswer != null && message.hasOwnProperty(\"compressedSdpAnswer\"))\n            writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.compressedSdpAnswer);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkSubscribeAckFrame message, length delimited. Does not implicitly {@link SdkSubscribeAckFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {ISdkSubscribeAckFrame} message SdkSubscribeAckFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkSubscribeAckFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkSubscribeAckFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkSubscribeAckFrame} SdkSubscribeAckFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkSubscribeAckFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkSubscribeAckFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.duplex = reader.int32();\n                break;\n            case 2:\n                if (!(message.allocations && message.allocations.length))\n                    message.allocations = [];\n                message.allocations.push($root.SdkStreamAllocation.decode(reader, reader.uint32()));\n                break;\n            case 3:\n                message.sdpAnswer = reader.string();\n                break;\n            case 4:\n                if (!(message.tracks && message.tracks.length))\n                    message.tracks = [];\n                message.tracks.push($root.SdkTrackMapping.decode(reader, reader.uint32()));\n                break;\n            case 5:\n                message.compressedSdpAnswer = reader.bytes();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkSubscribeAckFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkSubscribeAckFrame} SdkSubscribeAckFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkSubscribeAckFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkSubscribeAckFrame message.\n     * @function verify\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkSubscribeAckFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.duplex != null && message.hasOwnProperty(\"duplex\"))\n            switch (message.duplex) {\n            default:\n                return \"duplex: enum value expected\";\n            case 1:\n            case 2:\n            case 3:\n                break;\n            }\n        if (message.allocations != null && message.hasOwnProperty(\"allocations\")) {\n            if (!Array.isArray(message.allocations))\n                return \"allocations: array expected\";\n            for (var i = 0; i < message.allocations.length; ++i) {\n                var error = $root.SdkStreamAllocation.verify(message.allocations[i]);\n                if (error)\n                    return \"allocations.\" + error;\n            }\n        }\n        if (message.sdpAnswer != null && message.hasOwnProperty(\"sdpAnswer\"))\n            if (!$util.isString(message.sdpAnswer))\n                return \"sdpAnswer: string expected\";\n        if (message.tracks != null && message.hasOwnProperty(\"tracks\")) {\n            if (!Array.isArray(message.tracks))\n                return \"tracks: array expected\";\n            for (var i = 0; i < message.tracks.length; ++i) {\n                var error = $root.SdkTrackMapping.verify(message.tracks[i]);\n                if (error)\n                    return \"tracks.\" + error;\n            }\n        }\n        if (message.compressedSdpAnswer != null && message.hasOwnProperty(\"compressedSdpAnswer\"))\n            if (!(message.compressedSdpAnswer && typeof message.compressedSdpAnswer.length === \"number\" || $util.isString(message.compressedSdpAnswer)))\n                return \"compressedSdpAnswer: buffer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkSubscribeAckFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkSubscribeAckFrame} SdkSubscribeAckFrame\n     */\n    SdkSubscribeAckFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkSubscribeAckFrame)\n            return object;\n        var message = new $root.SdkSubscribeAckFrame();\n        switch (object.duplex) {\n        case \"RX\":\n        case 1:\n            message.duplex = 1;\n            break;\n        case \"TX\":\n        case 2:\n            message.duplex = 2;\n            break;\n        case \"DUPLEX\":\n        case 3:\n            message.duplex = 3;\n            break;\n        }\n        if (object.allocations) {\n            if (!Array.isArray(object.allocations))\n                throw TypeError(\".SdkSubscribeAckFrame.allocations: array expected\");\n            message.allocations = [];\n            for (var i = 0; i < object.allocations.length; ++i) {\n                if (typeof object.allocations[i] !== \"object\")\n                    throw TypeError(\".SdkSubscribeAckFrame.allocations: object expected\");\n                message.allocations[i] = $root.SdkStreamAllocation.fromObject(object.allocations[i]);\n            }\n        }\n        if (object.sdpAnswer != null)\n            message.sdpAnswer = String(object.sdpAnswer);\n        if (object.tracks) {\n            if (!Array.isArray(object.tracks))\n                throw TypeError(\".SdkSubscribeAckFrame.tracks: array expected\");\n            message.tracks = [];\n            for (var i = 0; i < object.tracks.length; ++i) {\n                if (typeof object.tracks[i] !== \"object\")\n                    throw TypeError(\".SdkSubscribeAckFrame.tracks: object expected\");\n                message.tracks[i] = $root.SdkTrackMapping.fromObject(object.tracks[i]);\n            }\n        }\n        if (object.compressedSdpAnswer != null)\n            if (typeof object.compressedSdpAnswer === \"string\")\n                $util.base64.decode(object.compressedSdpAnswer, message.compressedSdpAnswer = $util.newBuffer($util.base64.length(object.compressedSdpAnswer)), 0);\n            else if (object.compressedSdpAnswer.length)\n                message.compressedSdpAnswer = object.compressedSdpAnswer;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkSubscribeAckFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {SdkSubscribeAckFrame} message SdkSubscribeAckFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkSubscribeAckFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.allocations = [];\n            object.tracks = [];\n        }\n        if (options.defaults) {\n            object.duplex = options.enums === String ? \"RX\" : 1;\n            object.sdpAnswer = \"\";\n            if (options.bytes === String)\n                object.compressedSdpAnswer = \"\";\n            else {\n                object.compressedSdpAnswer = [];\n                if (options.bytes !== Array)\n                    object.compressedSdpAnswer = $util.newBuffer(object.compressedSdpAnswer);\n            }\n        }\n        if (message.duplex != null && message.hasOwnProperty(\"duplex\"))\n            object.duplex = options.enums === String ? $root.SdkStreamServiceType[message.duplex] : message.duplex;\n        if (message.allocations && message.allocations.length) {\n            object.allocations = [];\n            for (var j = 0; j < message.allocations.length; ++j)\n                object.allocations[j] = $root.SdkStreamAllocation.toObject(message.allocations[j], options);\n        }\n        if (message.sdpAnswer != null && message.hasOwnProperty(\"sdpAnswer\"))\n            object.sdpAnswer = message.sdpAnswer;\n        if (message.tracks && message.tracks.length) {\n            object.tracks = [];\n            for (var j = 0; j < message.tracks.length; ++j)\n                object.tracks[j] = $root.SdkTrackMapping.toObject(message.tracks[j], options);\n        }\n        if (message.compressedSdpAnswer != null && message.hasOwnProperty(\"compressedSdpAnswer\"))\n            object.compressedSdpAnswer = options.bytes === String ? $util.base64.encode(message.compressedSdpAnswer, 0, message.compressedSdpAnswer.length) : options.bytes === Array ? Array.prototype.slice.call(message.compressedSdpAnswer) : message.compressedSdpAnswer;\n        return object;\n    };\n\n    /**\n     * Converts this SdkSubscribeAckFrame to JSON.\n     * @function toJSON\n     * @memberof SdkSubscribeAckFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkSubscribeAckFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkSubscribeAckFrame;\n})();\n\n$root.SdkIndexFrame = (function() {\n\n    /**\n     * Properties of a SdkIndexFrame.\n     * @exports ISdkIndexFrame\n     * @interface ISdkIndexFrame\n     * @property {boolean|null} [atCapacity] SdkIndexFrame atCapacity\n     * @property {Array.<ISdkStreamDescriptor>|null} [sources] SdkIndexFrame sources\n     * @property {Array.<number>|null} [pausedAtSourceIds] SdkIndexFrame pausedAtSourceIds\n     * @property {number|null} [numParticipants] SdkIndexFrame numParticipants\n     */\n\n    /**\n     * Constructs a new SdkIndexFrame.\n     * @exports SdkIndexFrame\n     * @classdesc Represents a SdkIndexFrame.\n     * @implements ISdkIndexFrame\n     * @constructor\n     * @param {ISdkIndexFrame=} [properties] Properties to set\n     */\n    function SdkIndexFrame(properties) {\n        this.sources = [];\n        this.pausedAtSourceIds = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkIndexFrame atCapacity.\n     * @member {boolean} atCapacity\n     * @memberof SdkIndexFrame\n     * @instance\n     */\n    SdkIndexFrame.prototype.atCapacity = false;\n\n    /**\n     * SdkIndexFrame sources.\n     * @member {Array.<ISdkStreamDescriptor>} sources\n     * @memberof SdkIndexFrame\n     * @instance\n     */\n    SdkIndexFrame.prototype.sources = $util.emptyArray;\n\n    /**\n     * SdkIndexFrame pausedAtSourceIds.\n     * @member {Array.<number>} pausedAtSourceIds\n     * @memberof SdkIndexFrame\n     * @instance\n     */\n    SdkIndexFrame.prototype.pausedAtSourceIds = $util.emptyArray;\n\n    /**\n     * SdkIndexFrame numParticipants.\n     * @member {number} numParticipants\n     * @memberof SdkIndexFrame\n     * @instance\n     */\n    SdkIndexFrame.prototype.numParticipants = 0;\n\n    /**\n     * Creates a new SdkIndexFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {ISdkIndexFrame=} [properties] Properties to set\n     * @returns {SdkIndexFrame} SdkIndexFrame instance\n     */\n    SdkIndexFrame.create = function create(properties) {\n        return new SdkIndexFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkIndexFrame message. Does not implicitly {@link SdkIndexFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {ISdkIndexFrame} message SdkIndexFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkIndexFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.atCapacity != null && message.hasOwnProperty(\"atCapacity\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.atCapacity);\n        if (message.sources != null && message.sources.length)\n            for (var i = 0; i < message.sources.length; ++i)\n                $root.SdkStreamDescriptor.encode(message.sources[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        if (message.pausedAtSourceIds != null && message.pausedAtSourceIds.length)\n            for (var i = 0; i < message.pausedAtSourceIds.length; ++i)\n                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.pausedAtSourceIds[i]);\n        if (message.numParticipants != null && message.hasOwnProperty(\"numParticipants\"))\n            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.numParticipants);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkIndexFrame message, length delimited. Does not implicitly {@link SdkIndexFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {ISdkIndexFrame} message SdkIndexFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkIndexFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkIndexFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkIndexFrame} SdkIndexFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkIndexFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkIndexFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.atCapacity = reader.bool();\n                break;\n            case 2:\n                if (!(message.sources && message.sources.length))\n                    message.sources = [];\n                message.sources.push($root.SdkStreamDescriptor.decode(reader, reader.uint32()));\n                break;\n            case 3:\n                if (!(message.pausedAtSourceIds && message.pausedAtSourceIds.length))\n                    message.pausedAtSourceIds = [];\n                if ((tag & 7) === 2) {\n                    var end2 = reader.uint32() + reader.pos;\n                    while (reader.pos < end2)\n                        message.pausedAtSourceIds.push(reader.uint32());\n                } else\n                    message.pausedAtSourceIds.push(reader.uint32());\n                break;\n            case 4:\n                message.numParticipants = reader.uint32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkIndexFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkIndexFrame} SdkIndexFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkIndexFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkIndexFrame message.\n     * @function verify\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkIndexFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.atCapacity != null && message.hasOwnProperty(\"atCapacity\"))\n            if (typeof message.atCapacity !== \"boolean\")\n                return \"atCapacity: boolean expected\";\n        if (message.sources != null && message.hasOwnProperty(\"sources\")) {\n            if (!Array.isArray(message.sources))\n                return \"sources: array expected\";\n            for (var i = 0; i < message.sources.length; ++i) {\n                var error = $root.SdkStreamDescriptor.verify(message.sources[i]);\n                if (error)\n                    return \"sources.\" + error;\n            }\n        }\n        if (message.pausedAtSourceIds != null && message.hasOwnProperty(\"pausedAtSourceIds\")) {\n            if (!Array.isArray(message.pausedAtSourceIds))\n                return \"pausedAtSourceIds: array expected\";\n            for (var i = 0; i < message.pausedAtSourceIds.length; ++i)\n                if (!$util.isInteger(message.pausedAtSourceIds[i]))\n                    return \"pausedAtSourceIds: integer[] expected\";\n        }\n        if (message.numParticipants != null && message.hasOwnProperty(\"numParticipants\"))\n            if (!$util.isInteger(message.numParticipants))\n                return \"numParticipants: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkIndexFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkIndexFrame} SdkIndexFrame\n     */\n    SdkIndexFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkIndexFrame)\n            return object;\n        var message = new $root.SdkIndexFrame();\n        if (object.atCapacity != null)\n            message.atCapacity = Boolean(object.atCapacity);\n        if (object.sources) {\n            if (!Array.isArray(object.sources))\n                throw TypeError(\".SdkIndexFrame.sources: array expected\");\n            message.sources = [];\n            for (var i = 0; i < object.sources.length; ++i) {\n                if (typeof object.sources[i] !== \"object\")\n                    throw TypeError(\".SdkIndexFrame.sources: object expected\");\n                message.sources[i] = $root.SdkStreamDescriptor.fromObject(object.sources[i]);\n            }\n        }\n        if (object.pausedAtSourceIds) {\n            if (!Array.isArray(object.pausedAtSourceIds))\n                throw TypeError(\".SdkIndexFrame.pausedAtSourceIds: array expected\");\n            message.pausedAtSourceIds = [];\n            for (var i = 0; i < object.pausedAtSourceIds.length; ++i)\n                message.pausedAtSourceIds[i] = object.pausedAtSourceIds[i] >>> 0;\n        }\n        if (object.numParticipants != null)\n            message.numParticipants = object.numParticipants >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkIndexFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {SdkIndexFrame} message SdkIndexFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkIndexFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.sources = [];\n            object.pausedAtSourceIds = [];\n        }\n        if (options.defaults) {\n            object.atCapacity = false;\n            object.numParticipants = 0;\n        }\n        if (message.atCapacity != null && message.hasOwnProperty(\"atCapacity\"))\n            object.atCapacity = message.atCapacity;\n        if (message.sources && message.sources.length) {\n            object.sources = [];\n            for (var j = 0; j < message.sources.length; ++j)\n                object.sources[j] = $root.SdkStreamDescriptor.toObject(message.sources[j], options);\n        }\n        if (message.pausedAtSourceIds && message.pausedAtSourceIds.length) {\n            object.pausedAtSourceIds = [];\n            for (var j = 0; j < message.pausedAtSourceIds.length; ++j)\n                object.pausedAtSourceIds[j] = message.pausedAtSourceIds[j];\n        }\n        if (message.numParticipants != null && message.hasOwnProperty(\"numParticipants\"))\n            object.numParticipants = message.numParticipants;\n        return object;\n    };\n\n    /**\n     * Converts this SdkIndexFrame to JSON.\n     * @function toJSON\n     * @memberof SdkIndexFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkIndexFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkIndexFrame;\n})();\n\n$root.SdkPauseResumeFrame = (function() {\n\n    /**\n     * Properties of a SdkPauseResumeFrame.\n     * @exports ISdkPauseResumeFrame\n     * @interface ISdkPauseResumeFrame\n     * @property {Array.<number>|null} [streamIds] SdkPauseResumeFrame streamIds\n     */\n\n    /**\n     * Constructs a new SdkPauseResumeFrame.\n     * @exports SdkPauseResumeFrame\n     * @classdesc Represents a SdkPauseResumeFrame.\n     * @implements ISdkPauseResumeFrame\n     * @constructor\n     * @param {ISdkPauseResumeFrame=} [properties] Properties to set\n     */\n    function SdkPauseResumeFrame(properties) {\n        this.streamIds = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkPauseResumeFrame streamIds.\n     * @member {Array.<number>} streamIds\n     * @memberof SdkPauseResumeFrame\n     * @instance\n     */\n    SdkPauseResumeFrame.prototype.streamIds = $util.emptyArray;\n\n    /**\n     * Creates a new SdkPauseResumeFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {ISdkPauseResumeFrame=} [properties] Properties to set\n     * @returns {SdkPauseResumeFrame} SdkPauseResumeFrame instance\n     */\n    SdkPauseResumeFrame.create = function create(properties) {\n        return new SdkPauseResumeFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkPauseResumeFrame message. Does not implicitly {@link SdkPauseResumeFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {ISdkPauseResumeFrame} message SdkPauseResumeFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkPauseResumeFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.streamIds != null && message.streamIds.length)\n            for (var i = 0; i < message.streamIds.length; ++i)\n                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.streamIds[i]);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkPauseResumeFrame message, length delimited. Does not implicitly {@link SdkPauseResumeFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {ISdkPauseResumeFrame} message SdkPauseResumeFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkPauseResumeFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkPauseResumeFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkPauseResumeFrame} SdkPauseResumeFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkPauseResumeFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkPauseResumeFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.streamIds && message.streamIds.length))\n                    message.streamIds = [];\n                if ((tag & 7) === 2) {\n                    var end2 = reader.uint32() + reader.pos;\n                    while (reader.pos < end2)\n                        message.streamIds.push(reader.uint32());\n                } else\n                    message.streamIds.push(reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkPauseResumeFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkPauseResumeFrame} SdkPauseResumeFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkPauseResumeFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkPauseResumeFrame message.\n     * @function verify\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkPauseResumeFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.streamIds != null && message.hasOwnProperty(\"streamIds\")) {\n            if (!Array.isArray(message.streamIds))\n                return \"streamIds: array expected\";\n            for (var i = 0; i < message.streamIds.length; ++i)\n                if (!$util.isInteger(message.streamIds[i]))\n                    return \"streamIds: integer[] expected\";\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkPauseResumeFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkPauseResumeFrame} SdkPauseResumeFrame\n     */\n    SdkPauseResumeFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkPauseResumeFrame)\n            return object;\n        var message = new $root.SdkPauseResumeFrame();\n        if (object.streamIds) {\n            if (!Array.isArray(object.streamIds))\n                throw TypeError(\".SdkPauseResumeFrame.streamIds: array expected\");\n            message.streamIds = [];\n            for (var i = 0; i < object.streamIds.length; ++i)\n                message.streamIds[i] = object.streamIds[i] >>> 0;\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkPauseResumeFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {SdkPauseResumeFrame} message SdkPauseResumeFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkPauseResumeFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.streamIds = [];\n        if (message.streamIds && message.streamIds.length) {\n            object.streamIds = [];\n            for (var j = 0; j < message.streamIds.length; ++j)\n                object.streamIds[j] = message.streamIds[j];\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkPauseResumeFrame to JSON.\n     * @function toJSON\n     * @memberof SdkPauseResumeFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkPauseResumeFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkPauseResumeFrame;\n})();\n\n$root.SdkBitrateFrame = (function() {\n\n    /**\n     * Properties of a SdkBitrateFrame.\n     * @exports ISdkBitrateFrame\n     * @interface ISdkBitrateFrame\n     * @property {Array.<ISdkBitrate>|null} [bitrates] SdkBitrateFrame bitrates\n     */\n\n    /**\n     * Constructs a new SdkBitrateFrame.\n     * @exports SdkBitrateFrame\n     * @classdesc Represents a SdkBitrateFrame.\n     * @implements ISdkBitrateFrame\n     * @constructor\n     * @param {ISdkBitrateFrame=} [properties] Properties to set\n     */\n    function SdkBitrateFrame(properties) {\n        this.bitrates = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkBitrateFrame bitrates.\n     * @member {Array.<ISdkBitrate>} bitrates\n     * @memberof SdkBitrateFrame\n     * @instance\n     */\n    SdkBitrateFrame.prototype.bitrates = $util.emptyArray;\n\n    /**\n     * Creates a new SdkBitrateFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {ISdkBitrateFrame=} [properties] Properties to set\n     * @returns {SdkBitrateFrame} SdkBitrateFrame instance\n     */\n    SdkBitrateFrame.create = function create(properties) {\n        return new SdkBitrateFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkBitrateFrame message. Does not implicitly {@link SdkBitrateFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {ISdkBitrateFrame} message SdkBitrateFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkBitrateFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.bitrates != null && message.bitrates.length)\n            for (var i = 0; i < message.bitrates.length; ++i)\n                $root.SdkBitrate.encode(message.bitrates[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkBitrateFrame message, length delimited. Does not implicitly {@link SdkBitrateFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {ISdkBitrateFrame} message SdkBitrateFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkBitrateFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkBitrateFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkBitrateFrame} SdkBitrateFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkBitrateFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkBitrateFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.bitrates && message.bitrates.length))\n                    message.bitrates = [];\n                message.bitrates.push($root.SdkBitrate.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkBitrateFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkBitrateFrame} SdkBitrateFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkBitrateFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkBitrateFrame message.\n     * @function verify\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkBitrateFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.bitrates != null && message.hasOwnProperty(\"bitrates\")) {\n            if (!Array.isArray(message.bitrates))\n                return \"bitrates: array expected\";\n            for (var i = 0; i < message.bitrates.length; ++i) {\n                var error = $root.SdkBitrate.verify(message.bitrates[i]);\n                if (error)\n                    return \"bitrates.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkBitrateFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkBitrateFrame} SdkBitrateFrame\n     */\n    SdkBitrateFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkBitrateFrame)\n            return object;\n        var message = new $root.SdkBitrateFrame();\n        if (object.bitrates) {\n            if (!Array.isArray(object.bitrates))\n                throw TypeError(\".SdkBitrateFrame.bitrates: array expected\");\n            message.bitrates = [];\n            for (var i = 0; i < object.bitrates.length; ++i) {\n                if (typeof object.bitrates[i] !== \"object\")\n                    throw TypeError(\".SdkBitrateFrame.bitrates: object expected\");\n                message.bitrates[i] = $root.SdkBitrate.fromObject(object.bitrates[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkBitrateFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {SdkBitrateFrame} message SdkBitrateFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkBitrateFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.bitrates = [];\n        if (message.bitrates && message.bitrates.length) {\n            object.bitrates = [];\n            for (var j = 0; j < message.bitrates.length; ++j)\n                object.bitrates[j] = $root.SdkBitrate.toObject(message.bitrates[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkBitrateFrame to JSON.\n     * @function toJSON\n     * @memberof SdkBitrateFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkBitrateFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkBitrateFrame;\n})();\n\n$root.SdkStreamDescriptor = (function() {\n\n    /**\n     * Properties of a SdkStreamDescriptor.\n     * @exports ISdkStreamDescriptor\n     * @interface ISdkStreamDescriptor\n     * @property {number|null} [streamId] SdkStreamDescriptor streamId\n     * @property {number|null} [framerate] SdkStreamDescriptor framerate\n     * @property {number|null} [maxBitrateKbps] SdkStreamDescriptor maxBitrateKbps\n     * @property {string|null} [trackLabel] SdkStreamDescriptor trackLabel\n     * @property {number|null} [groupId] SdkStreamDescriptor groupId\n     * @property {number|null} [avgBitrateBps] SdkStreamDescriptor avgBitrateBps\n     * @property {string|null} [attendeeId] SdkStreamDescriptor attendeeId\n     * @property {SdkStreamMediaType|null} [mediaType] SdkStreamDescriptor mediaType\n     * @property {string|null} [externalUserId] SdkStreamDescriptor externalUserId\n     */\n\n    /**\n     * Constructs a new SdkStreamDescriptor.\n     * @exports SdkStreamDescriptor\n     * @classdesc Represents a SdkStreamDescriptor.\n     * @implements ISdkStreamDescriptor\n     * @constructor\n     * @param {ISdkStreamDescriptor=} [properties] Properties to set\n     */\n    function SdkStreamDescriptor(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkStreamDescriptor streamId.\n     * @member {number} streamId\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.streamId = 0;\n\n    /**\n     * SdkStreamDescriptor framerate.\n     * @member {number} framerate\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.framerate = 0;\n\n    /**\n     * SdkStreamDescriptor maxBitrateKbps.\n     * @member {number} maxBitrateKbps\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.maxBitrateKbps = 0;\n\n    /**\n     * SdkStreamDescriptor trackLabel.\n     * @member {string} trackLabel\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.trackLabel = \"\";\n\n    /**\n     * SdkStreamDescriptor groupId.\n     * @member {number} groupId\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.groupId = 0;\n\n    /**\n     * SdkStreamDescriptor avgBitrateBps.\n     * @member {number} avgBitrateBps\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.avgBitrateBps = 0;\n\n    /**\n     * SdkStreamDescriptor attendeeId.\n     * @member {string} attendeeId\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.attendeeId = \"\";\n\n    /**\n     * SdkStreamDescriptor mediaType.\n     * @member {SdkStreamMediaType} mediaType\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.mediaType = 1;\n\n    /**\n     * SdkStreamDescriptor externalUserId.\n     * @member {string} externalUserId\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.externalUserId = \"\";\n\n    /**\n     * Creates a new SdkStreamDescriptor instance using the specified properties.\n     * @function create\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {ISdkStreamDescriptor=} [properties] Properties to set\n     * @returns {SdkStreamDescriptor} SdkStreamDescriptor instance\n     */\n    SdkStreamDescriptor.create = function create(properties) {\n        return new SdkStreamDescriptor(properties);\n    };\n\n    /**\n     * Encodes the specified SdkStreamDescriptor message. Does not implicitly {@link SdkStreamDescriptor.verify|verify} messages.\n     * @function encode\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {ISdkStreamDescriptor} message SdkStreamDescriptor message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkStreamDescriptor.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.streamId);\n        if (message.framerate != null && message.hasOwnProperty(\"framerate\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.framerate);\n        if (message.maxBitrateKbps != null && message.hasOwnProperty(\"maxBitrateKbps\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.maxBitrateKbps);\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trackLabel);\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.groupId);\n        if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\"))\n            writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.avgBitrateBps);\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            writer.uint32(/* id 8, wireType 2 =*/66).string(message.attendeeId);\n        if (message.mediaType != null && message.hasOwnProperty(\"mediaType\"))\n            writer.uint32(/* id 9, wireType 0 =*/72).int32(message.mediaType);\n        if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\"))\n            writer.uint32(/* id 10, wireType 2 =*/82).string(message.externalUserId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkStreamDescriptor message, length delimited. Does not implicitly {@link SdkStreamDescriptor.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {ISdkStreamDescriptor} message SdkStreamDescriptor message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkStreamDescriptor.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkStreamDescriptor message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkStreamDescriptor} SdkStreamDescriptor\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkStreamDescriptor.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkStreamDescriptor();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.streamId = reader.uint32();\n                break;\n            case 2:\n                message.framerate = reader.uint32();\n                break;\n            case 3:\n                message.maxBitrateKbps = reader.uint32();\n                break;\n            case 4:\n                message.trackLabel = reader.string();\n                break;\n            case 6:\n                message.groupId = reader.uint32();\n                break;\n            case 7:\n                message.avgBitrateBps = reader.uint32();\n                break;\n            case 8:\n                message.attendeeId = reader.string();\n                break;\n            case 9:\n                message.mediaType = reader.int32();\n                break;\n            case 10:\n                message.externalUserId = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkStreamDescriptor message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkStreamDescriptor} SdkStreamDescriptor\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkStreamDescriptor.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkStreamDescriptor message.\n     * @function verify\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkStreamDescriptor.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            if (!$util.isInteger(message.streamId))\n                return \"streamId: integer expected\";\n        if (message.framerate != null && message.hasOwnProperty(\"framerate\"))\n            if (!$util.isInteger(message.framerate))\n                return \"framerate: integer expected\";\n        if (message.maxBitrateKbps != null && message.hasOwnProperty(\"maxBitrateKbps\"))\n            if (!$util.isInteger(message.maxBitrateKbps))\n                return \"maxBitrateKbps: integer expected\";\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            if (!$util.isString(message.trackLabel))\n                return \"trackLabel: string expected\";\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            if (!$util.isInteger(message.groupId))\n                return \"groupId: integer expected\";\n        if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\"))\n            if (!$util.isInteger(message.avgBitrateBps))\n                return \"avgBitrateBps: integer expected\";\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            if (!$util.isString(message.attendeeId))\n                return \"attendeeId: string expected\";\n        if (message.mediaType != null && message.hasOwnProperty(\"mediaType\"))\n            switch (message.mediaType) {\n            default:\n                return \"mediaType: enum value expected\";\n            case 1:\n            case 2:\n                break;\n            }\n        if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\"))\n            if (!$util.isString(message.externalUserId))\n                return \"externalUserId: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkStreamDescriptor message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkStreamDescriptor} SdkStreamDescriptor\n     */\n    SdkStreamDescriptor.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkStreamDescriptor)\n            return object;\n        var message = new $root.SdkStreamDescriptor();\n        if (object.streamId != null)\n            message.streamId = object.streamId >>> 0;\n        if (object.framerate != null)\n            message.framerate = object.framerate >>> 0;\n        if (object.maxBitrateKbps != null)\n            message.maxBitrateKbps = object.maxBitrateKbps >>> 0;\n        if (object.trackLabel != null)\n            message.trackLabel = String(object.trackLabel);\n        if (object.groupId != null)\n            message.groupId = object.groupId >>> 0;\n        if (object.avgBitrateBps != null)\n            message.avgBitrateBps = object.avgBitrateBps >>> 0;\n        if (object.attendeeId != null)\n            message.attendeeId = String(object.attendeeId);\n        switch (object.mediaType) {\n        case \"AUDIO\":\n        case 1:\n            message.mediaType = 1;\n            break;\n        case \"VIDEO\":\n        case 2:\n            message.mediaType = 2;\n            break;\n        }\n        if (object.externalUserId != null)\n            message.externalUserId = String(object.externalUserId);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkStreamDescriptor message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {SdkStreamDescriptor} message SdkStreamDescriptor\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkStreamDescriptor.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.streamId = 0;\n            object.framerate = 0;\n            object.maxBitrateKbps = 0;\n            object.trackLabel = \"\";\n            object.groupId = 0;\n            object.avgBitrateBps = 0;\n            object.attendeeId = \"\";\n            object.mediaType = options.enums === String ? \"AUDIO\" : 1;\n            object.externalUserId = \"\";\n        }\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            object.streamId = message.streamId;\n        if (message.framerate != null && message.hasOwnProperty(\"framerate\"))\n            object.framerate = message.framerate;\n        if (message.maxBitrateKbps != null && message.hasOwnProperty(\"maxBitrateKbps\"))\n            object.maxBitrateKbps = message.maxBitrateKbps;\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            object.trackLabel = message.trackLabel;\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            object.groupId = message.groupId;\n        if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\"))\n            object.avgBitrateBps = message.avgBitrateBps;\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            object.attendeeId = message.attendeeId;\n        if (message.mediaType != null && message.hasOwnProperty(\"mediaType\"))\n            object.mediaType = options.enums === String ? $root.SdkStreamMediaType[message.mediaType] : message.mediaType;\n        if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\"))\n            object.externalUserId = message.externalUserId;\n        return object;\n    };\n\n    /**\n     * Converts this SdkStreamDescriptor to JSON.\n     * @function toJSON\n     * @memberof SdkStreamDescriptor\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkStreamDescriptor.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkStreamDescriptor;\n})();\n\n$root.SdkStreamAllocation = (function() {\n\n    /**\n     * Properties of a SdkStreamAllocation.\n     * @exports ISdkStreamAllocation\n     * @interface ISdkStreamAllocation\n     * @property {string|null} [trackLabel] SdkStreamAllocation trackLabel\n     * @property {number|null} [streamId] SdkStreamAllocation streamId\n     * @property {number|null} [groupId] SdkStreamAllocation groupId\n     */\n\n    /**\n     * Constructs a new SdkStreamAllocation.\n     * @exports SdkStreamAllocation\n     * @classdesc Represents a SdkStreamAllocation.\n     * @implements ISdkStreamAllocation\n     * @constructor\n     * @param {ISdkStreamAllocation=} [properties] Properties to set\n     */\n    function SdkStreamAllocation(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkStreamAllocation trackLabel.\n     * @member {string} trackLabel\n     * @memberof SdkStreamAllocation\n     * @instance\n     */\n    SdkStreamAllocation.prototype.trackLabel = \"\";\n\n    /**\n     * SdkStreamAllocation streamId.\n     * @member {number} streamId\n     * @memberof SdkStreamAllocation\n     * @instance\n     */\n    SdkStreamAllocation.prototype.streamId = 0;\n\n    /**\n     * SdkStreamAllocation groupId.\n     * @member {number} groupId\n     * @memberof SdkStreamAllocation\n     * @instance\n     */\n    SdkStreamAllocation.prototype.groupId = 0;\n\n    /**\n     * Creates a new SdkStreamAllocation instance using the specified properties.\n     * @function create\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {ISdkStreamAllocation=} [properties] Properties to set\n     * @returns {SdkStreamAllocation} SdkStreamAllocation instance\n     */\n    SdkStreamAllocation.create = function create(properties) {\n        return new SdkStreamAllocation(properties);\n    };\n\n    /**\n     * Encodes the specified SdkStreamAllocation message. Does not implicitly {@link SdkStreamAllocation.verify|verify} messages.\n     * @function encode\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {ISdkStreamAllocation} message SdkStreamAllocation message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkStreamAllocation.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.trackLabel);\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.streamId);\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.groupId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkStreamAllocation message, length delimited. Does not implicitly {@link SdkStreamAllocation.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {ISdkStreamAllocation} message SdkStreamAllocation message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkStreamAllocation.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkStreamAllocation message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkStreamAllocation} SdkStreamAllocation\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkStreamAllocation.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkStreamAllocation();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.trackLabel = reader.string();\n                break;\n            case 2:\n                message.streamId = reader.uint32();\n                break;\n            case 3:\n                message.groupId = reader.uint32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkStreamAllocation message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkStreamAllocation} SdkStreamAllocation\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkStreamAllocation.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkStreamAllocation message.\n     * @function verify\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkStreamAllocation.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            if (!$util.isString(message.trackLabel))\n                return \"trackLabel: string expected\";\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            if (!$util.isInteger(message.streamId))\n                return \"streamId: integer expected\";\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            if (!$util.isInteger(message.groupId))\n                return \"groupId: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkStreamAllocation message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkStreamAllocation} SdkStreamAllocation\n     */\n    SdkStreamAllocation.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkStreamAllocation)\n            return object;\n        var message = new $root.SdkStreamAllocation();\n        if (object.trackLabel != null)\n            message.trackLabel = String(object.trackLabel);\n        if (object.streamId != null)\n            message.streamId = object.streamId >>> 0;\n        if (object.groupId != null)\n            message.groupId = object.groupId >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkStreamAllocation message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {SdkStreamAllocation} message SdkStreamAllocation\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkStreamAllocation.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.trackLabel = \"\";\n            object.streamId = 0;\n            object.groupId = 0;\n        }\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            object.trackLabel = message.trackLabel;\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            object.streamId = message.streamId;\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            object.groupId = message.groupId;\n        return object;\n    };\n\n    /**\n     * Converts this SdkStreamAllocation to JSON.\n     * @function toJSON\n     * @memberof SdkStreamAllocation\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkStreamAllocation.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkStreamAllocation;\n})();\n\n$root.SdkTrackMapping = (function() {\n\n    /**\n     * Properties of a SdkTrackMapping.\n     * @exports ISdkTrackMapping\n     * @interface ISdkTrackMapping\n     * @property {number|null} [streamId] SdkTrackMapping streamId\n     * @property {number|null} [ssrc] SdkTrackMapping ssrc\n     * @property {string|null} [trackLabel] SdkTrackMapping trackLabel\n     */\n\n    /**\n     * Constructs a new SdkTrackMapping.\n     * @exports SdkTrackMapping\n     * @classdesc Represents a SdkTrackMapping.\n     * @implements ISdkTrackMapping\n     * @constructor\n     * @param {ISdkTrackMapping=} [properties] Properties to set\n     */\n    function SdkTrackMapping(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkTrackMapping streamId.\n     * @member {number} streamId\n     * @memberof SdkTrackMapping\n     * @instance\n     */\n    SdkTrackMapping.prototype.streamId = 0;\n\n    /**\n     * SdkTrackMapping ssrc.\n     * @member {number} ssrc\n     * @memberof SdkTrackMapping\n     * @instance\n     */\n    SdkTrackMapping.prototype.ssrc = 0;\n\n    /**\n     * SdkTrackMapping trackLabel.\n     * @member {string} trackLabel\n     * @memberof SdkTrackMapping\n     * @instance\n     */\n    SdkTrackMapping.prototype.trackLabel = \"\";\n\n    /**\n     * Creates a new SdkTrackMapping instance using the specified properties.\n     * @function create\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {ISdkTrackMapping=} [properties] Properties to set\n     * @returns {SdkTrackMapping} SdkTrackMapping instance\n     */\n    SdkTrackMapping.create = function create(properties) {\n        return new SdkTrackMapping(properties);\n    };\n\n    /**\n     * Encodes the specified SdkTrackMapping message. Does not implicitly {@link SdkTrackMapping.verify|verify} messages.\n     * @function encode\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {ISdkTrackMapping} message SdkTrackMapping message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTrackMapping.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.streamId);\n        if (message.ssrc != null && message.hasOwnProperty(\"ssrc\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.ssrc);\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.trackLabel);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkTrackMapping message, length delimited. Does not implicitly {@link SdkTrackMapping.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {ISdkTrackMapping} message SdkTrackMapping message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTrackMapping.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkTrackMapping message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkTrackMapping} SdkTrackMapping\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTrackMapping.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkTrackMapping();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.streamId = reader.uint32();\n                break;\n            case 2:\n                message.ssrc = reader.uint32();\n                break;\n            case 3:\n                message.trackLabel = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkTrackMapping message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkTrackMapping} SdkTrackMapping\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTrackMapping.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkTrackMapping message.\n     * @function verify\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkTrackMapping.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            if (!$util.isInteger(message.streamId))\n                return \"streamId: integer expected\";\n        if (message.ssrc != null && message.hasOwnProperty(\"ssrc\"))\n            if (!$util.isInteger(message.ssrc))\n                return \"ssrc: integer expected\";\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            if (!$util.isString(message.trackLabel))\n                return \"trackLabel: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkTrackMapping message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkTrackMapping} SdkTrackMapping\n     */\n    SdkTrackMapping.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkTrackMapping)\n            return object;\n        var message = new $root.SdkTrackMapping();\n        if (object.streamId != null)\n            message.streamId = object.streamId >>> 0;\n        if (object.ssrc != null)\n            message.ssrc = object.ssrc >>> 0;\n        if (object.trackLabel != null)\n            message.trackLabel = String(object.trackLabel);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkTrackMapping message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {SdkTrackMapping} message SdkTrackMapping\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkTrackMapping.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.streamId = 0;\n            object.ssrc = 0;\n            object.trackLabel = \"\";\n        }\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            object.streamId = message.streamId;\n        if (message.ssrc != null && message.hasOwnProperty(\"ssrc\"))\n            object.ssrc = message.ssrc;\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            object.trackLabel = message.trackLabel;\n        return object;\n    };\n\n    /**\n     * Converts this SdkTrackMapping to JSON.\n     * @function toJSON\n     * @memberof SdkTrackMapping\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkTrackMapping.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkTrackMapping;\n})();\n\n$root.SdkBitrate = (function() {\n\n    /**\n     * Properties of a SdkBitrate.\n     * @exports ISdkBitrate\n     * @interface ISdkBitrate\n     * @property {number|null} [sourceStreamId] SdkBitrate sourceStreamId\n     * @property {number|null} [avgBitrateBps] SdkBitrate avgBitrateBps\n     */\n\n    /**\n     * Constructs a new SdkBitrate.\n     * @exports SdkBitrate\n     * @classdesc Represents a SdkBitrate.\n     * @implements ISdkBitrate\n     * @constructor\n     * @param {ISdkBitrate=} [properties] Properties to set\n     */\n    function SdkBitrate(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkBitrate sourceStreamId.\n     * @member {number} sourceStreamId\n     * @memberof SdkBitrate\n     * @instance\n     */\n    SdkBitrate.prototype.sourceStreamId = 0;\n\n    /**\n     * SdkBitrate avgBitrateBps.\n     * @member {number} avgBitrateBps\n     * @memberof SdkBitrate\n     * @instance\n     */\n    SdkBitrate.prototype.avgBitrateBps = 0;\n\n    /**\n     * Creates a new SdkBitrate instance using the specified properties.\n     * @function create\n     * @memberof SdkBitrate\n     * @static\n     * @param {ISdkBitrate=} [properties] Properties to set\n     * @returns {SdkBitrate} SdkBitrate instance\n     */\n    SdkBitrate.create = function create(properties) {\n        return new SdkBitrate(properties);\n    };\n\n    /**\n     * Encodes the specified SdkBitrate message. Does not implicitly {@link SdkBitrate.verify|verify} messages.\n     * @function encode\n     * @memberof SdkBitrate\n     * @static\n     * @param {ISdkBitrate} message SdkBitrate message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkBitrate.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.sourceStreamId != null && message.hasOwnProperty(\"sourceStreamId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.sourceStreamId);\n        if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.avgBitrateBps);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkBitrate message, length delimited. Does not implicitly {@link SdkBitrate.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkBitrate\n     * @static\n     * @param {ISdkBitrate} message SdkBitrate message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkBitrate.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkBitrate message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkBitrate\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkBitrate} SdkBitrate\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkBitrate.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkBitrate();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.sourceStreamId = reader.uint32();\n                break;\n            case 2:\n                message.avgBitrateBps = reader.uint32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkBitrate message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkBitrate\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkBitrate} SdkBitrate\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkBitrate.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkBitrate message.\n     * @function verify\n     * @memberof SdkBitrate\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkBitrate.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.sourceStreamId != null && message.hasOwnProperty(\"sourceStreamId\"))\n            if (!$util.isInteger(message.sourceStreamId))\n                return \"sourceStreamId: integer expected\";\n        if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\"))\n            if (!$util.isInteger(message.avgBitrateBps))\n                return \"avgBitrateBps: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkBitrate message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkBitrate\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkBitrate} SdkBitrate\n     */\n    SdkBitrate.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkBitrate)\n            return object;\n        var message = new $root.SdkBitrate();\n        if (object.sourceStreamId != null)\n            message.sourceStreamId = object.sourceStreamId >>> 0;\n        if (object.avgBitrateBps != null)\n            message.avgBitrateBps = object.avgBitrateBps >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkBitrate message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkBitrate\n     * @static\n     * @param {SdkBitrate} message SdkBitrate\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkBitrate.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.sourceStreamId = 0;\n            object.avgBitrateBps = 0;\n        }\n        if (message.sourceStreamId != null && message.hasOwnProperty(\"sourceStreamId\"))\n            object.sourceStreamId = message.sourceStreamId;\n        if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\"))\n            object.avgBitrateBps = message.avgBitrateBps;\n        return object;\n    };\n\n    /**\n     * Converts this SdkBitrate to JSON.\n     * @function toJSON\n     * @memberof SdkBitrate\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkBitrate.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkBitrate;\n})();\n\n$root.SdkAudioControlFrame = (function() {\n\n    /**\n     * Properties of a SdkAudioControlFrame.\n     * @exports ISdkAudioControlFrame\n     * @interface ISdkAudioControlFrame\n     * @property {boolean|null} [muted] SdkAudioControlFrame muted\n     */\n\n    /**\n     * Constructs a new SdkAudioControlFrame.\n     * @exports SdkAudioControlFrame\n     * @classdesc Represents a SdkAudioControlFrame.\n     * @implements ISdkAudioControlFrame\n     * @constructor\n     * @param {ISdkAudioControlFrame=} [properties] Properties to set\n     */\n    function SdkAudioControlFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkAudioControlFrame muted.\n     * @member {boolean} muted\n     * @memberof SdkAudioControlFrame\n     * @instance\n     */\n    SdkAudioControlFrame.prototype.muted = false;\n\n    /**\n     * Creates a new SdkAudioControlFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {ISdkAudioControlFrame=} [properties] Properties to set\n     * @returns {SdkAudioControlFrame} SdkAudioControlFrame instance\n     */\n    SdkAudioControlFrame.create = function create(properties) {\n        return new SdkAudioControlFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkAudioControlFrame message. Does not implicitly {@link SdkAudioControlFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {ISdkAudioControlFrame} message SdkAudioControlFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioControlFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.muted);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkAudioControlFrame message, length delimited. Does not implicitly {@link SdkAudioControlFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {ISdkAudioControlFrame} message SdkAudioControlFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioControlFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkAudioControlFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkAudioControlFrame} SdkAudioControlFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioControlFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkAudioControlFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.muted = reader.bool();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkAudioControlFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkAudioControlFrame} SdkAudioControlFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioControlFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkAudioControlFrame message.\n     * @function verify\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkAudioControlFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            if (typeof message.muted !== \"boolean\")\n                return \"muted: boolean expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkAudioControlFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkAudioControlFrame} SdkAudioControlFrame\n     */\n    SdkAudioControlFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkAudioControlFrame)\n            return object;\n        var message = new $root.SdkAudioControlFrame();\n        if (object.muted != null)\n            message.muted = Boolean(object.muted);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkAudioControlFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {SdkAudioControlFrame} message SdkAudioControlFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkAudioControlFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.muted = false;\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            object.muted = message.muted;\n        return object;\n    };\n\n    /**\n     * Converts this SdkAudioControlFrame to JSON.\n     * @function toJSON\n     * @memberof SdkAudioControlFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkAudioControlFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkAudioControlFrame;\n})();\n\n$root.SdkAudioMetadataFrame = (function() {\n\n    /**\n     * Properties of a SdkAudioMetadataFrame.\n     * @exports ISdkAudioMetadataFrame\n     * @interface ISdkAudioMetadataFrame\n     * @property {Array.<ISdkAudioAttendeeState>|null} [attendeeStates] SdkAudioMetadataFrame attendeeStates\n     */\n\n    /**\n     * Constructs a new SdkAudioMetadataFrame.\n     * @exports SdkAudioMetadataFrame\n     * @classdesc Represents a SdkAudioMetadataFrame.\n     * @implements ISdkAudioMetadataFrame\n     * @constructor\n     * @param {ISdkAudioMetadataFrame=} [properties] Properties to set\n     */\n    function SdkAudioMetadataFrame(properties) {\n        this.attendeeStates = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkAudioMetadataFrame attendeeStates.\n     * @member {Array.<ISdkAudioAttendeeState>} attendeeStates\n     * @memberof SdkAudioMetadataFrame\n     * @instance\n     */\n    SdkAudioMetadataFrame.prototype.attendeeStates = $util.emptyArray;\n\n    /**\n     * Creates a new SdkAudioMetadataFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {ISdkAudioMetadataFrame=} [properties] Properties to set\n     * @returns {SdkAudioMetadataFrame} SdkAudioMetadataFrame instance\n     */\n    SdkAudioMetadataFrame.create = function create(properties) {\n        return new SdkAudioMetadataFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkAudioMetadataFrame message. Does not implicitly {@link SdkAudioMetadataFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {ISdkAudioMetadataFrame} message SdkAudioMetadataFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioMetadataFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.attendeeStates != null && message.attendeeStates.length)\n            for (var i = 0; i < message.attendeeStates.length; ++i)\n                $root.SdkAudioAttendeeState.encode(message.attendeeStates[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkAudioMetadataFrame message, length delimited. Does not implicitly {@link SdkAudioMetadataFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {ISdkAudioMetadataFrame} message SdkAudioMetadataFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioMetadataFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkAudioMetadataFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkAudioMetadataFrame} SdkAudioMetadataFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioMetadataFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkAudioMetadataFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.attendeeStates && message.attendeeStates.length))\n                    message.attendeeStates = [];\n                message.attendeeStates.push($root.SdkAudioAttendeeState.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkAudioMetadataFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkAudioMetadataFrame} SdkAudioMetadataFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioMetadataFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkAudioMetadataFrame message.\n     * @function verify\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkAudioMetadataFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.attendeeStates != null && message.hasOwnProperty(\"attendeeStates\")) {\n            if (!Array.isArray(message.attendeeStates))\n                return \"attendeeStates: array expected\";\n            for (var i = 0; i < message.attendeeStates.length; ++i) {\n                var error = $root.SdkAudioAttendeeState.verify(message.attendeeStates[i]);\n                if (error)\n                    return \"attendeeStates.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkAudioMetadataFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkAudioMetadataFrame} SdkAudioMetadataFrame\n     */\n    SdkAudioMetadataFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkAudioMetadataFrame)\n            return object;\n        var message = new $root.SdkAudioMetadataFrame();\n        if (object.attendeeStates) {\n            if (!Array.isArray(object.attendeeStates))\n                throw TypeError(\".SdkAudioMetadataFrame.attendeeStates: array expected\");\n            message.attendeeStates = [];\n            for (var i = 0; i < object.attendeeStates.length; ++i) {\n                if (typeof object.attendeeStates[i] !== \"object\")\n                    throw TypeError(\".SdkAudioMetadataFrame.attendeeStates: object expected\");\n                message.attendeeStates[i] = $root.SdkAudioAttendeeState.fromObject(object.attendeeStates[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkAudioMetadataFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {SdkAudioMetadataFrame} message SdkAudioMetadataFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkAudioMetadataFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.attendeeStates = [];\n        if (message.attendeeStates && message.attendeeStates.length) {\n            object.attendeeStates = [];\n            for (var j = 0; j < message.attendeeStates.length; ++j)\n                object.attendeeStates[j] = $root.SdkAudioAttendeeState.toObject(message.attendeeStates[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkAudioMetadataFrame to JSON.\n     * @function toJSON\n     * @memberof SdkAudioMetadataFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkAudioMetadataFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkAudioMetadataFrame;\n})();\n\n$root.SdkAudioAttendeeState = (function() {\n\n    /**\n     * Properties of a SdkAudioAttendeeState.\n     * @exports ISdkAudioAttendeeState\n     * @interface ISdkAudioAttendeeState\n     * @property {number|null} [audioStreamId] SdkAudioAttendeeState audioStreamId\n     * @property {number|null} [volume] SdkAudioAttendeeState volume\n     * @property {boolean|null} [muted] SdkAudioAttendeeState muted\n     * @property {number|null} [signalStrength] SdkAudioAttendeeState signalStrength\n     */\n\n    /**\n     * Constructs a new SdkAudioAttendeeState.\n     * @exports SdkAudioAttendeeState\n     * @classdesc Represents a SdkAudioAttendeeState.\n     * @implements ISdkAudioAttendeeState\n     * @constructor\n     * @param {ISdkAudioAttendeeState=} [properties] Properties to set\n     */\n    function SdkAudioAttendeeState(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkAudioAttendeeState audioStreamId.\n     * @member {number} audioStreamId\n     * @memberof SdkAudioAttendeeState\n     * @instance\n     */\n    SdkAudioAttendeeState.prototype.audioStreamId = 0;\n\n    /**\n     * SdkAudioAttendeeState volume.\n     * @member {number} volume\n     * @memberof SdkAudioAttendeeState\n     * @instance\n     */\n    SdkAudioAttendeeState.prototype.volume = 0;\n\n    /**\n     * SdkAudioAttendeeState muted.\n     * @member {boolean} muted\n     * @memberof SdkAudioAttendeeState\n     * @instance\n     */\n    SdkAudioAttendeeState.prototype.muted = false;\n\n    /**\n     * SdkAudioAttendeeState signalStrength.\n     * @member {number} signalStrength\n     * @memberof SdkAudioAttendeeState\n     * @instance\n     */\n    SdkAudioAttendeeState.prototype.signalStrength = 0;\n\n    /**\n     * Creates a new SdkAudioAttendeeState instance using the specified properties.\n     * @function create\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {ISdkAudioAttendeeState=} [properties] Properties to set\n     * @returns {SdkAudioAttendeeState} SdkAudioAttendeeState instance\n     */\n    SdkAudioAttendeeState.create = function create(properties) {\n        return new SdkAudioAttendeeState(properties);\n    };\n\n    /**\n     * Encodes the specified SdkAudioAttendeeState message. Does not implicitly {@link SdkAudioAttendeeState.verify|verify} messages.\n     * @function encode\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {ISdkAudioAttendeeState} message SdkAudioAttendeeState message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioAttendeeState.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.audioStreamId);\n        if (message.volume != null && message.hasOwnProperty(\"volume\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.volume);\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).bool(message.muted);\n        if (message.signalStrength != null && message.hasOwnProperty(\"signalStrength\"))\n            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.signalStrength);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkAudioAttendeeState message, length delimited. Does not implicitly {@link SdkAudioAttendeeState.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {ISdkAudioAttendeeState} message SdkAudioAttendeeState message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioAttendeeState.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkAudioAttendeeState message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkAudioAttendeeState} SdkAudioAttendeeState\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioAttendeeState.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkAudioAttendeeState();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.audioStreamId = reader.uint32();\n                break;\n            case 2:\n                message.volume = reader.uint32();\n                break;\n            case 3:\n                message.muted = reader.bool();\n                break;\n            case 4:\n                message.signalStrength = reader.uint32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkAudioAttendeeState message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkAudioAttendeeState} SdkAudioAttendeeState\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioAttendeeState.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkAudioAttendeeState message.\n     * @function verify\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkAudioAttendeeState.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\"))\n            if (!$util.isInteger(message.audioStreamId))\n                return \"audioStreamId: integer expected\";\n        if (message.volume != null && message.hasOwnProperty(\"volume\"))\n            if (!$util.isInteger(message.volume))\n                return \"volume: integer expected\";\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            if (typeof message.muted !== \"boolean\")\n                return \"muted: boolean expected\";\n        if (message.signalStrength != null && message.hasOwnProperty(\"signalStrength\"))\n            if (!$util.isInteger(message.signalStrength))\n                return \"signalStrength: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkAudioAttendeeState message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkAudioAttendeeState} SdkAudioAttendeeState\n     */\n    SdkAudioAttendeeState.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkAudioAttendeeState)\n            return object;\n        var message = new $root.SdkAudioAttendeeState();\n        if (object.audioStreamId != null)\n            message.audioStreamId = object.audioStreamId >>> 0;\n        if (object.volume != null)\n            message.volume = object.volume >>> 0;\n        if (object.muted != null)\n            message.muted = Boolean(object.muted);\n        if (object.signalStrength != null)\n            message.signalStrength = object.signalStrength >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkAudioAttendeeState message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {SdkAudioAttendeeState} message SdkAudioAttendeeState\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkAudioAttendeeState.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.audioStreamId = 0;\n            object.volume = 0;\n            object.muted = false;\n            object.signalStrength = 0;\n        }\n        if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\"))\n            object.audioStreamId = message.audioStreamId;\n        if (message.volume != null && message.hasOwnProperty(\"volume\"))\n            object.volume = message.volume;\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            object.muted = message.muted;\n        if (message.signalStrength != null && message.hasOwnProperty(\"signalStrength\"))\n            object.signalStrength = message.signalStrength;\n        return object;\n    };\n\n    /**\n     * Converts this SdkAudioAttendeeState to JSON.\n     * @function toJSON\n     * @memberof SdkAudioAttendeeState\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkAudioAttendeeState.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkAudioAttendeeState;\n})();\n\n$root.SdkAudioStreamIdInfoFrame = (function() {\n\n    /**\n     * Properties of a SdkAudioStreamIdInfoFrame.\n     * @exports ISdkAudioStreamIdInfoFrame\n     * @interface ISdkAudioStreamIdInfoFrame\n     * @property {Array.<ISdkAudioStreamIdInfo>|null} [streams] SdkAudioStreamIdInfoFrame streams\n     */\n\n    /**\n     * Constructs a new SdkAudioStreamIdInfoFrame.\n     * @exports SdkAudioStreamIdInfoFrame\n     * @classdesc Represents a SdkAudioStreamIdInfoFrame.\n     * @implements ISdkAudioStreamIdInfoFrame\n     * @constructor\n     * @param {ISdkAudioStreamIdInfoFrame=} [properties] Properties to set\n     */\n    function SdkAudioStreamIdInfoFrame(properties) {\n        this.streams = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkAudioStreamIdInfoFrame streams.\n     * @member {Array.<ISdkAudioStreamIdInfo>} streams\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @instance\n     */\n    SdkAudioStreamIdInfoFrame.prototype.streams = $util.emptyArray;\n\n    /**\n     * Creates a new SdkAudioStreamIdInfoFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {ISdkAudioStreamIdInfoFrame=} [properties] Properties to set\n     * @returns {SdkAudioStreamIdInfoFrame} SdkAudioStreamIdInfoFrame instance\n     */\n    SdkAudioStreamIdInfoFrame.create = function create(properties) {\n        return new SdkAudioStreamIdInfoFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkAudioStreamIdInfoFrame message. Does not implicitly {@link SdkAudioStreamIdInfoFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {ISdkAudioStreamIdInfoFrame} message SdkAudioStreamIdInfoFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioStreamIdInfoFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.streams != null && message.streams.length)\n            for (var i = 0; i < message.streams.length; ++i)\n                $root.SdkAudioStreamIdInfo.encode(message.streams[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkAudioStreamIdInfoFrame message, length delimited. Does not implicitly {@link SdkAudioStreamIdInfoFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {ISdkAudioStreamIdInfoFrame} message SdkAudioStreamIdInfoFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioStreamIdInfoFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkAudioStreamIdInfoFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkAudioStreamIdInfoFrame} SdkAudioStreamIdInfoFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioStreamIdInfoFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkAudioStreamIdInfoFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.streams && message.streams.length))\n                    message.streams = [];\n                message.streams.push($root.SdkAudioStreamIdInfo.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkAudioStreamIdInfoFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkAudioStreamIdInfoFrame} SdkAudioStreamIdInfoFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioStreamIdInfoFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkAudioStreamIdInfoFrame message.\n     * @function verify\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkAudioStreamIdInfoFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.streams != null && message.hasOwnProperty(\"streams\")) {\n            if (!Array.isArray(message.streams))\n                return \"streams: array expected\";\n            for (var i = 0; i < message.streams.length; ++i) {\n                var error = $root.SdkAudioStreamIdInfo.verify(message.streams[i]);\n                if (error)\n                    return \"streams.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkAudioStreamIdInfoFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkAudioStreamIdInfoFrame} SdkAudioStreamIdInfoFrame\n     */\n    SdkAudioStreamIdInfoFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkAudioStreamIdInfoFrame)\n            return object;\n        var message = new $root.SdkAudioStreamIdInfoFrame();\n        if (object.streams) {\n            if (!Array.isArray(object.streams))\n                throw TypeError(\".SdkAudioStreamIdInfoFrame.streams: array expected\");\n            message.streams = [];\n            for (var i = 0; i < object.streams.length; ++i) {\n                if (typeof object.streams[i] !== \"object\")\n                    throw TypeError(\".SdkAudioStreamIdInfoFrame.streams: object expected\");\n                message.streams[i] = $root.SdkAudioStreamIdInfo.fromObject(object.streams[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkAudioStreamIdInfoFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {SdkAudioStreamIdInfoFrame} message SdkAudioStreamIdInfoFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkAudioStreamIdInfoFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.streams = [];\n        if (message.streams && message.streams.length) {\n            object.streams = [];\n            for (var j = 0; j < message.streams.length; ++j)\n                object.streams[j] = $root.SdkAudioStreamIdInfo.toObject(message.streams[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkAudioStreamIdInfoFrame to JSON.\n     * @function toJSON\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkAudioStreamIdInfoFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkAudioStreamIdInfoFrame;\n})();\n\n$root.SdkAudioStreamIdInfo = (function() {\n\n    /**\n     * Properties of a SdkAudioStreamIdInfo.\n     * @exports ISdkAudioStreamIdInfo\n     * @interface ISdkAudioStreamIdInfo\n     * @property {number|null} [audioStreamId] SdkAudioStreamIdInfo audioStreamId\n     * @property {string|null} [attendeeId] SdkAudioStreamIdInfo attendeeId\n     * @property {boolean|null} [muted] SdkAudioStreamIdInfo muted\n     * @property {string|null} [externalUserId] SdkAudioStreamIdInfo externalUserId\n     * @property {boolean|null} [dropped] SdkAudioStreamIdInfo dropped\n     */\n\n    /**\n     * Constructs a new SdkAudioStreamIdInfo.\n     * @exports SdkAudioStreamIdInfo\n     * @classdesc Represents a SdkAudioStreamIdInfo.\n     * @implements ISdkAudioStreamIdInfo\n     * @constructor\n     * @param {ISdkAudioStreamIdInfo=} [properties] Properties to set\n     */\n    function SdkAudioStreamIdInfo(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkAudioStreamIdInfo audioStreamId.\n     * @member {number} audioStreamId\n     * @memberof SdkAudioStreamIdInfo\n     * @instance\n     */\n    SdkAudioStreamIdInfo.prototype.audioStreamId = 0;\n\n    /**\n     * SdkAudioStreamIdInfo attendeeId.\n     * @member {string} attendeeId\n     * @memberof SdkAudioStreamIdInfo\n     * @instance\n     */\n    SdkAudioStreamIdInfo.prototype.attendeeId = \"\";\n\n    /**\n     * SdkAudioStreamIdInfo muted.\n     * @member {boolean} muted\n     * @memberof SdkAudioStreamIdInfo\n     * @instance\n     */\n    SdkAudioStreamIdInfo.prototype.muted = false;\n\n    /**\n     * SdkAudioStreamIdInfo externalUserId.\n     * @member {string} externalUserId\n     * @memberof SdkAudioStreamIdInfo\n     * @instance\n     */\n    SdkAudioStreamIdInfo.prototype.externalUserId = \"\";\n\n    /**\n     * SdkAudioStreamIdInfo dropped.\n     * @member {boolean} dropped\n     * @memberof SdkAudioStreamIdInfo\n     * @instance\n     */\n    SdkAudioStreamIdInfo.prototype.dropped = false;\n\n    /**\n     * Creates a new SdkAudioStreamIdInfo instance using the specified properties.\n     * @function create\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {ISdkAudioStreamIdInfo=} [properties] Properties to set\n     * @returns {SdkAudioStreamIdInfo} SdkAudioStreamIdInfo instance\n     */\n    SdkAudioStreamIdInfo.create = function create(properties) {\n        return new SdkAudioStreamIdInfo(properties);\n    };\n\n    /**\n     * Encodes the specified SdkAudioStreamIdInfo message. Does not implicitly {@link SdkAudioStreamIdInfo.verify|verify} messages.\n     * @function encode\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {ISdkAudioStreamIdInfo} message SdkAudioStreamIdInfo message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioStreamIdInfo.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.audioStreamId);\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.attendeeId);\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).bool(message.muted);\n        if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\"))\n            writer.uint32(/* id 4, wireType 2 =*/34).string(message.externalUserId);\n        if (message.dropped != null && message.hasOwnProperty(\"dropped\"))\n            writer.uint32(/* id 5, wireType 0 =*/40).bool(message.dropped);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkAudioStreamIdInfo message, length delimited. Does not implicitly {@link SdkAudioStreamIdInfo.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {ISdkAudioStreamIdInfo} message SdkAudioStreamIdInfo message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioStreamIdInfo.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkAudioStreamIdInfo message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkAudioStreamIdInfo} SdkAudioStreamIdInfo\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioStreamIdInfo.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkAudioStreamIdInfo();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.audioStreamId = reader.uint32();\n                break;\n            case 2:\n                message.attendeeId = reader.string();\n                break;\n            case 3:\n                message.muted = reader.bool();\n                break;\n            case 4:\n                message.externalUserId = reader.string();\n                break;\n            case 5:\n                message.dropped = reader.bool();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkAudioStreamIdInfo message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkAudioStreamIdInfo} SdkAudioStreamIdInfo\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioStreamIdInfo.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkAudioStreamIdInfo message.\n     * @function verify\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkAudioStreamIdInfo.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\"))\n            if (!$util.isInteger(message.audioStreamId))\n                return \"audioStreamId: integer expected\";\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            if (!$util.isString(message.attendeeId))\n                return \"attendeeId: string expected\";\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            if (typeof message.muted !== \"boolean\")\n                return \"muted: boolean expected\";\n        if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\"))\n            if (!$util.isString(message.externalUserId))\n                return \"externalUserId: string expected\";\n        if (message.dropped != null && message.hasOwnProperty(\"dropped\"))\n            if (typeof message.dropped !== \"boolean\")\n                return \"dropped: boolean expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkAudioStreamIdInfo message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkAudioStreamIdInfo} SdkAudioStreamIdInfo\n     */\n    SdkAudioStreamIdInfo.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkAudioStreamIdInfo)\n            return object;\n        var message = new $root.SdkAudioStreamIdInfo();\n        if (object.audioStreamId != null)\n            message.audioStreamId = object.audioStreamId >>> 0;\n        if (object.attendeeId != null)\n            message.attendeeId = String(object.attendeeId);\n        if (object.muted != null)\n            message.muted = Boolean(object.muted);\n        if (object.externalUserId != null)\n            message.externalUserId = String(object.externalUserId);\n        if (object.dropped != null)\n            message.dropped = Boolean(object.dropped);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkAudioStreamIdInfo message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {SdkAudioStreamIdInfo} message SdkAudioStreamIdInfo\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkAudioStreamIdInfo.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.audioStreamId = 0;\n            object.attendeeId = \"\";\n            object.muted = false;\n            object.externalUserId = \"\";\n            object.dropped = false;\n        }\n        if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\"))\n            object.audioStreamId = message.audioStreamId;\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            object.attendeeId = message.attendeeId;\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            object.muted = message.muted;\n        if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\"))\n            object.externalUserId = message.externalUserId;\n        if (message.dropped != null && message.hasOwnProperty(\"dropped\"))\n            object.dropped = message.dropped;\n        return object;\n    };\n\n    /**\n     * Converts this SdkAudioStreamIdInfo to JSON.\n     * @function toJSON\n     * @memberof SdkAudioStreamIdInfo\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkAudioStreamIdInfo.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkAudioStreamIdInfo;\n})();\n\n/**\n * SdkPingPongType enum.\n * @exports SdkPingPongType\n * @enum {string}\n * @property {number} PING=1 PING value\n * @property {number} PONG=2 PONG value\n */\n$root.SdkPingPongType = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[1] = \"PING\"] = 1;\n    values[valuesById[2] = \"PONG\"] = 2;\n    return values;\n})();\n\n$root.SdkPingPongFrame = (function() {\n\n    /**\n     * Properties of a SdkPingPongFrame.\n     * @exports ISdkPingPongFrame\n     * @interface ISdkPingPongFrame\n     * @property {SdkPingPongType} type SdkPingPongFrame type\n     * @property {number} pingId SdkPingPongFrame pingId\n     */\n\n    /**\n     * Constructs a new SdkPingPongFrame.\n     * @exports SdkPingPongFrame\n     * @classdesc Represents a SdkPingPongFrame.\n     * @implements ISdkPingPongFrame\n     * @constructor\n     * @param {ISdkPingPongFrame=} [properties] Properties to set\n     */\n    function SdkPingPongFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkPingPongFrame type.\n     * @member {SdkPingPongType} type\n     * @memberof SdkPingPongFrame\n     * @instance\n     */\n    SdkPingPongFrame.prototype.type = 1;\n\n    /**\n     * SdkPingPongFrame pingId.\n     * @member {number} pingId\n     * @memberof SdkPingPongFrame\n     * @instance\n     */\n    SdkPingPongFrame.prototype.pingId = 0;\n\n    /**\n     * Creates a new SdkPingPongFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {ISdkPingPongFrame=} [properties] Properties to set\n     * @returns {SdkPingPongFrame} SdkPingPongFrame instance\n     */\n    SdkPingPongFrame.create = function create(properties) {\n        return new SdkPingPongFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkPingPongFrame message. Does not implicitly {@link SdkPingPongFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {ISdkPingPongFrame} message SdkPingPongFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkPingPongFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);\n        writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.pingId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkPingPongFrame message, length delimited. Does not implicitly {@link SdkPingPongFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {ISdkPingPongFrame} message SdkPingPongFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkPingPongFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkPingPongFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkPingPongFrame} SdkPingPongFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkPingPongFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkPingPongFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.type = reader.int32();\n                break;\n            case 2:\n                message.pingId = reader.uint32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        if (!message.hasOwnProperty(\"type\"))\n            throw $util.ProtocolError(\"missing required 'type'\", { instance: message });\n        if (!message.hasOwnProperty(\"pingId\"))\n            throw $util.ProtocolError(\"missing required 'pingId'\", { instance: message });\n        return message;\n    };\n\n    /**\n     * Decodes a SdkPingPongFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkPingPongFrame} SdkPingPongFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkPingPongFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkPingPongFrame message.\n     * @function verify\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkPingPongFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        switch (message.type) {\n        default:\n            return \"type: enum value expected\";\n        case 1:\n        case 2:\n            break;\n        }\n        if (!$util.isInteger(message.pingId))\n            return \"pingId: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkPingPongFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkPingPongFrame} SdkPingPongFrame\n     */\n    SdkPingPongFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkPingPongFrame)\n            return object;\n        var message = new $root.SdkPingPongFrame();\n        switch (object.type) {\n        case \"PING\":\n        case 1:\n            message.type = 1;\n            break;\n        case \"PONG\":\n        case 2:\n            message.type = 2;\n            break;\n        }\n        if (object.pingId != null)\n            message.pingId = object.pingId >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkPingPongFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {SdkPingPongFrame} message SdkPingPongFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkPingPongFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.type = options.enums === String ? \"PING\" : 1;\n            object.pingId = 0;\n        }\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            object.type = options.enums === String ? $root.SdkPingPongType[message.type] : message.type;\n        if (message.pingId != null && message.hasOwnProperty(\"pingId\"))\n            object.pingId = message.pingId;\n        return object;\n    };\n\n    /**\n     * Converts this SdkPingPongFrame to JSON.\n     * @function toJSON\n     * @memberof SdkPingPongFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkPingPongFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkPingPongFrame;\n})();\n\n$root.SdkAudioStatusFrame = (function() {\n\n    /**\n     * Properties of a SdkAudioStatusFrame.\n     * @exports ISdkAudioStatusFrame\n     * @interface ISdkAudioStatusFrame\n     * @property {number|null} [audioStatus] SdkAudioStatusFrame audioStatus\n     */\n\n    /**\n     * Constructs a new SdkAudioStatusFrame.\n     * @exports SdkAudioStatusFrame\n     * @classdesc Represents a SdkAudioStatusFrame.\n     * @implements ISdkAudioStatusFrame\n     * @constructor\n     * @param {ISdkAudioStatusFrame=} [properties] Properties to set\n     */\n    function SdkAudioStatusFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkAudioStatusFrame audioStatus.\n     * @member {number} audioStatus\n     * @memberof SdkAudioStatusFrame\n     * @instance\n     */\n    SdkAudioStatusFrame.prototype.audioStatus = 0;\n\n    /**\n     * Creates a new SdkAudioStatusFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {ISdkAudioStatusFrame=} [properties] Properties to set\n     * @returns {SdkAudioStatusFrame} SdkAudioStatusFrame instance\n     */\n    SdkAudioStatusFrame.create = function create(properties) {\n        return new SdkAudioStatusFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkAudioStatusFrame message. Does not implicitly {@link SdkAudioStatusFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {ISdkAudioStatusFrame} message SdkAudioStatusFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioStatusFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.audioStatus);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkAudioStatusFrame message, length delimited. Does not implicitly {@link SdkAudioStatusFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {ISdkAudioStatusFrame} message SdkAudioStatusFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioStatusFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkAudioStatusFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkAudioStatusFrame} SdkAudioStatusFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioStatusFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkAudioStatusFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.audioStatus = reader.uint32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkAudioStatusFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkAudioStatusFrame} SdkAudioStatusFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioStatusFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkAudioStatusFrame message.\n     * @function verify\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkAudioStatusFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\"))\n            if (!$util.isInteger(message.audioStatus))\n                return \"audioStatus: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkAudioStatusFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkAudioStatusFrame} SdkAudioStatusFrame\n     */\n    SdkAudioStatusFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkAudioStatusFrame)\n            return object;\n        var message = new $root.SdkAudioStatusFrame();\n        if (object.audioStatus != null)\n            message.audioStatus = object.audioStatus >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkAudioStatusFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {SdkAudioStatusFrame} message SdkAudioStatusFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkAudioStatusFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.audioStatus = 0;\n        if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\"))\n            object.audioStatus = message.audioStatus;\n        return object;\n    };\n\n    /**\n     * Converts this SdkAudioStatusFrame to JSON.\n     * @function toJSON\n     * @memberof SdkAudioStatusFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkAudioStatusFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkAudioStatusFrame;\n})();\n\n$root.SdkMetric = (function() {\n\n    /**\n     * Properties of a SdkMetric.\n     * @exports ISdkMetric\n     * @interface ISdkMetric\n     * @property {SdkMetric.Type|null} [type] SdkMetric type\n     * @property {number|null} [value] SdkMetric value\n     */\n\n    /**\n     * Constructs a new SdkMetric.\n     * @exports SdkMetric\n     * @classdesc Represents a SdkMetric.\n     * @implements ISdkMetric\n     * @constructor\n     * @param {ISdkMetric=} [properties] Properties to set\n     */\n    function SdkMetric(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkMetric type.\n     * @member {SdkMetric.Type} type\n     * @memberof SdkMetric\n     * @instance\n     */\n    SdkMetric.prototype.type = 1;\n\n    /**\n     * SdkMetric value.\n     * @member {number} value\n     * @memberof SdkMetric\n     * @instance\n     */\n    SdkMetric.prototype.value = 0;\n\n    /**\n     * Creates a new SdkMetric instance using the specified properties.\n     * @function create\n     * @memberof SdkMetric\n     * @static\n     * @param {ISdkMetric=} [properties] Properties to set\n     * @returns {SdkMetric} SdkMetric instance\n     */\n    SdkMetric.create = function create(properties) {\n        return new SdkMetric(properties);\n    };\n\n    /**\n     * Encodes the specified SdkMetric message. Does not implicitly {@link SdkMetric.verify|verify} messages.\n     * @function encode\n     * @memberof SdkMetric\n     * @static\n     * @param {ISdkMetric} message SdkMetric message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkMetric.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);\n        if (message.value != null && message.hasOwnProperty(\"value\"))\n            writer.uint32(/* id 2, wireType 1 =*/17).double(message.value);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkMetric message, length delimited. Does not implicitly {@link SdkMetric.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkMetric\n     * @static\n     * @param {ISdkMetric} message SdkMetric message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkMetric.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkMetric message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkMetric\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkMetric} SdkMetric\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkMetric.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkMetric();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.type = reader.int32();\n                break;\n            case 2:\n                message.value = reader.double();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkMetric message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkMetric\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkMetric} SdkMetric\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkMetric.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkMetric message.\n     * @function verify\n     * @memberof SdkMetric\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkMetric.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            switch (message.type) {\n            default:\n                return \"type: enum value expected\";\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n            case 16:\n            case 17:\n            case 18:\n            case 19:\n            case 20:\n            case 21:\n            case 22:\n            case 23:\n            case 24:\n            case 25:\n            case 26:\n            case 27:\n            case 28:\n            case 29:\n            case 30:\n            case 31:\n            case 32:\n            case 33:\n            case 34:\n            case 35:\n            case 36:\n            case 37:\n            case 38:\n            case 39:\n            case 40:\n            case 41:\n            case 42:\n            case 43:\n            case 44:\n            case 45:\n            case 46:\n            case 47:\n            case 48:\n            case 49:\n            case 64:\n            case 66:\n            case 69:\n            case 72:\n            case 86:\n            case 87:\n                break;\n            }\n        if (message.value != null && message.hasOwnProperty(\"value\"))\n            if (typeof message.value !== \"number\")\n                return \"value: number expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkMetric message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkMetric\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkMetric} SdkMetric\n     */\n    SdkMetric.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkMetric)\n            return object;\n        var message = new $root.SdkMetric();\n        switch (object.type) {\n        case \"VIDEO_ACTUAL_ENCODER_BITRATE\":\n        case 1:\n            message.type = 1;\n            break;\n        case \"VIDEO_AVAILABLE_SEND_BANDWIDTH\":\n        case 2:\n            message.type = 2;\n            break;\n        case \"VIDEO_RETRANSMIT_BITRATE\":\n        case 3:\n            message.type = 3;\n            break;\n        case \"VIDEO_AVAILABLE_RECEIVE_BANDWIDTH\":\n        case 4:\n            message.type = 4;\n            break;\n        case \"VIDEO_TARGET_ENCODER_BITRATE\":\n        case 5:\n            message.type = 5;\n            break;\n        case \"VIDEO_BUCKET_DELAY_MS\":\n        case 6:\n            message.type = 6;\n            break;\n        case \"STUN_RTT_MS\":\n        case 7:\n            message.type = 7;\n            break;\n        case \"SOCKET_DISCARDED_PPS\":\n        case 8:\n            message.type = 8;\n            break;\n        case \"RTC_MIC_JITTER_MS\":\n        case 9:\n            message.type = 9;\n            break;\n        case \"RTC_MIC_PPS\":\n        case 10:\n            message.type = 10;\n            break;\n        case \"RTC_MIC_FRACTION_PACKET_LOST_PERCENT\":\n        case 11:\n            message.type = 11;\n            break;\n        case \"RTC_MIC_BITRATE\":\n        case 12:\n            message.type = 12;\n            break;\n        case \"RTC_MIC_RTT_MS\":\n        case 13:\n            message.type = 13;\n            break;\n        case \"RTC_SPK_PPS\":\n        case 14:\n            message.type = 14;\n            break;\n        case \"RTC_SPK_FRACTION_PACKET_LOST_PERCENT\":\n        case 15:\n            message.type = 15;\n            break;\n        case \"RTC_SPK_JITTER_MS\":\n        case 16:\n            message.type = 16;\n            break;\n        case \"RTC_SPK_FRACTION_DECODER_LOSS_PERCENT\":\n        case 17:\n            message.type = 17;\n            break;\n        case \"RTC_SPK_BITRATE\":\n        case 18:\n            message.type = 18;\n            break;\n        case \"RTC_SPK_CURRENT_DELAY_MS\":\n        case 19:\n            message.type = 19;\n            break;\n        case \"RTC_SPK_JITTER_BUFFER_MS\":\n        case 20:\n            message.type = 20;\n            break;\n        case \"VIDEO_SENT_RTT_MS\":\n        case 21:\n            message.type = 21;\n            break;\n        case \"VIDEO_ENCODE_USAGE_PERCENT\":\n        case 22:\n            message.type = 22;\n            break;\n        case \"VIDEO_NACKS_RECEIVED\":\n        case 23:\n            message.type = 23;\n            break;\n        case \"VIDEO_PLIS_RECEIVED\":\n        case 24:\n            message.type = 24;\n            break;\n        case \"VIDEO_AVERAGE_ENCODE_MS\":\n        case 25:\n            message.type = 25;\n            break;\n        case \"VIDEO_INPUT_FPS\":\n        case 26:\n            message.type = 26;\n            break;\n        case \"VIDEO_ENCODE_FPS\":\n        case 27:\n            message.type = 27;\n            break;\n        case \"VIDEO_SENT_FPS\":\n        case 28:\n            message.type = 28;\n            break;\n        case \"VIDEO_FIRS_RECEIVED\":\n        case 29:\n            message.type = 29;\n            break;\n        case \"VIDEO_SENT_PPS\":\n        case 30:\n            message.type = 30;\n            break;\n        case \"VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT\":\n        case 31:\n            message.type = 31;\n            break;\n        case \"VIDEO_SENT_BITRATE\":\n        case 32:\n            message.type = 32;\n            break;\n        case \"VIDEO_DROPPED_FPS\":\n        case 33:\n            message.type = 33;\n            break;\n        case \"VIDEO_TARGET_DELAY_MS\":\n        case 34:\n            message.type = 34;\n            break;\n        case \"VIDEO_DECODE_MS\":\n        case 35:\n            message.type = 35;\n            break;\n        case \"VIDEO_OUTPUT_FPS\":\n        case 36:\n            message.type = 36;\n            break;\n        case \"VIDEO_RECEIVED_PPS\":\n        case 37:\n            message.type = 37;\n            break;\n        case \"VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT\":\n        case 38:\n            message.type = 38;\n            break;\n        case \"VIDEO_RENDER_DELAY_MS\":\n        case 39:\n            message.type = 39;\n            break;\n        case \"VIDEO_RECEIVED_FPS\":\n        case 40:\n            message.type = 40;\n            break;\n        case \"VIDEO_DECODE_FPS\":\n        case 41:\n            message.type = 41;\n            break;\n        case \"VIDEO_NACKS_SENT\":\n        case 42:\n            message.type = 42;\n            break;\n        case \"VIDEO_FIRS_SENT\":\n        case 43:\n            message.type = 43;\n            break;\n        case \"VIDEO_RECEIVED_BITRATE\":\n        case 44:\n            message.type = 44;\n            break;\n        case \"VIDEO_CURRENT_DELAY_MS\":\n        case 45:\n            message.type = 45;\n            break;\n        case \"VIDEO_JITTER_BUFFER_MS\":\n        case 46:\n            message.type = 46;\n            break;\n        case \"VIDEO_DISCARDED_PPS\":\n        case 47:\n            message.type = 47;\n            break;\n        case \"VIDEO_PLIS_SENT\":\n        case 48:\n            message.type = 48;\n            break;\n        case \"VIDEO_RECEIVED_JITTER_MS\":\n        case 49:\n            message.type = 49;\n            break;\n        case \"VIDEO_ENCODE_HEIGHT\":\n        case 64:\n            message.type = 64;\n            break;\n        case \"VIDEO_SENT_QP_SUM\":\n        case 66:\n            message.type = 66;\n            break;\n        case \"VIDEO_DECODE_HEIGHT\":\n        case 69:\n            message.type = 69;\n            break;\n        case \"VIDEO_RECEIVED_QP_SUM\":\n        case 72:\n            message.type = 72;\n            break;\n        case \"VIDEO_ENCODE_WIDTH\":\n        case 86:\n            message.type = 86;\n            break;\n        case \"VIDEO_DECODE_WIDTH\":\n        case 87:\n            message.type = 87;\n            break;\n        }\n        if (object.value != null)\n            message.value = Number(object.value);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkMetric message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkMetric\n     * @static\n     * @param {SdkMetric} message SdkMetric\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkMetric.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.type = options.enums === String ? \"VIDEO_ACTUAL_ENCODER_BITRATE\" : 1;\n            object.value = 0;\n        }\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            object.type = options.enums === String ? $root.SdkMetric.Type[message.type] : message.type;\n        if (message.value != null && message.hasOwnProperty(\"value\"))\n            object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;\n        return object;\n    };\n\n    /**\n     * Converts this SdkMetric to JSON.\n     * @function toJSON\n     * @memberof SdkMetric\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkMetric.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * Type enum.\n     * @name SdkMetric.Type\n     * @enum {string}\n     * @property {number} VIDEO_ACTUAL_ENCODER_BITRATE=1 VIDEO_ACTUAL_ENCODER_BITRATE value\n     * @property {number} VIDEO_AVAILABLE_SEND_BANDWIDTH=2 VIDEO_AVAILABLE_SEND_BANDWIDTH value\n     * @property {number} VIDEO_RETRANSMIT_BITRATE=3 VIDEO_RETRANSMIT_BITRATE value\n     * @property {number} VIDEO_AVAILABLE_RECEIVE_BANDWIDTH=4 VIDEO_AVAILABLE_RECEIVE_BANDWIDTH value\n     * @property {number} VIDEO_TARGET_ENCODER_BITRATE=5 VIDEO_TARGET_ENCODER_BITRATE value\n     * @property {number} VIDEO_BUCKET_DELAY_MS=6 VIDEO_BUCKET_DELAY_MS value\n     * @property {number} STUN_RTT_MS=7 STUN_RTT_MS value\n     * @property {number} SOCKET_DISCARDED_PPS=8 SOCKET_DISCARDED_PPS value\n     * @property {number} RTC_MIC_JITTER_MS=9 RTC_MIC_JITTER_MS value\n     * @property {number} RTC_MIC_PPS=10 RTC_MIC_PPS value\n     * @property {number} RTC_MIC_FRACTION_PACKET_LOST_PERCENT=11 RTC_MIC_FRACTION_PACKET_LOST_PERCENT value\n     * @property {number} RTC_MIC_BITRATE=12 RTC_MIC_BITRATE value\n     * @property {number} RTC_MIC_RTT_MS=13 RTC_MIC_RTT_MS value\n     * @property {number} RTC_SPK_PPS=14 RTC_SPK_PPS value\n     * @property {number} RTC_SPK_FRACTION_PACKET_LOST_PERCENT=15 RTC_SPK_FRACTION_PACKET_LOST_PERCENT value\n     * @property {number} RTC_SPK_JITTER_MS=16 RTC_SPK_JITTER_MS value\n     * @property {number} RTC_SPK_FRACTION_DECODER_LOSS_PERCENT=17 RTC_SPK_FRACTION_DECODER_LOSS_PERCENT value\n     * @property {number} RTC_SPK_BITRATE=18 RTC_SPK_BITRATE value\n     * @property {number} RTC_SPK_CURRENT_DELAY_MS=19 RTC_SPK_CURRENT_DELAY_MS value\n     * @property {number} RTC_SPK_JITTER_BUFFER_MS=20 RTC_SPK_JITTER_BUFFER_MS value\n     * @property {number} VIDEO_SENT_RTT_MS=21 VIDEO_SENT_RTT_MS value\n     * @property {number} VIDEO_ENCODE_USAGE_PERCENT=22 VIDEO_ENCODE_USAGE_PERCENT value\n     * @property {number} VIDEO_NACKS_RECEIVED=23 VIDEO_NACKS_RECEIVED value\n     * @property {number} VIDEO_PLIS_RECEIVED=24 VIDEO_PLIS_RECEIVED value\n     * @property {number} VIDEO_AVERAGE_ENCODE_MS=25 VIDEO_AVERAGE_ENCODE_MS value\n     * @property {number} VIDEO_INPUT_FPS=26 VIDEO_INPUT_FPS value\n     * @property {number} VIDEO_ENCODE_FPS=27 VIDEO_ENCODE_FPS value\n     * @property {number} VIDEO_SENT_FPS=28 VIDEO_SENT_FPS value\n     * @property {number} VIDEO_FIRS_RECEIVED=29 VIDEO_FIRS_RECEIVED value\n     * @property {number} VIDEO_SENT_PPS=30 VIDEO_SENT_PPS value\n     * @property {number} VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT=31 VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT value\n     * @property {number} VIDEO_SENT_BITRATE=32 VIDEO_SENT_BITRATE value\n     * @property {number} VIDEO_DROPPED_FPS=33 VIDEO_DROPPED_FPS value\n     * @property {number} VIDEO_TARGET_DELAY_MS=34 VIDEO_TARGET_DELAY_MS value\n     * @property {number} VIDEO_DECODE_MS=35 VIDEO_DECODE_MS value\n     * @property {number} VIDEO_OUTPUT_FPS=36 VIDEO_OUTPUT_FPS value\n     * @property {number} VIDEO_RECEIVED_PPS=37 VIDEO_RECEIVED_PPS value\n     * @property {number} VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT=38 VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT value\n     * @property {number} VIDEO_RENDER_DELAY_MS=39 VIDEO_RENDER_DELAY_MS value\n     * @property {number} VIDEO_RECEIVED_FPS=40 VIDEO_RECEIVED_FPS value\n     * @property {number} VIDEO_DECODE_FPS=41 VIDEO_DECODE_FPS value\n     * @property {number} VIDEO_NACKS_SENT=42 VIDEO_NACKS_SENT value\n     * @property {number} VIDEO_FIRS_SENT=43 VIDEO_FIRS_SENT value\n     * @property {number} VIDEO_RECEIVED_BITRATE=44 VIDEO_RECEIVED_BITRATE value\n     * @property {number} VIDEO_CURRENT_DELAY_MS=45 VIDEO_CURRENT_DELAY_MS value\n     * @property {number} VIDEO_JITTER_BUFFER_MS=46 VIDEO_JITTER_BUFFER_MS value\n     * @property {number} VIDEO_DISCARDED_PPS=47 VIDEO_DISCARDED_PPS value\n     * @property {number} VIDEO_PLIS_SENT=48 VIDEO_PLIS_SENT value\n     * @property {number} VIDEO_RECEIVED_JITTER_MS=49 VIDEO_RECEIVED_JITTER_MS value\n     * @property {number} VIDEO_ENCODE_HEIGHT=64 VIDEO_ENCODE_HEIGHT value\n     * @property {number} VIDEO_SENT_QP_SUM=66 VIDEO_SENT_QP_SUM value\n     * @property {number} VIDEO_DECODE_HEIGHT=69 VIDEO_DECODE_HEIGHT value\n     * @property {number} VIDEO_RECEIVED_QP_SUM=72 VIDEO_RECEIVED_QP_SUM value\n     * @property {number} VIDEO_ENCODE_WIDTH=86 VIDEO_ENCODE_WIDTH value\n     * @property {number} VIDEO_DECODE_WIDTH=87 VIDEO_DECODE_WIDTH value\n     */\n    SdkMetric.Type = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[1] = \"VIDEO_ACTUAL_ENCODER_BITRATE\"] = 1;\n        values[valuesById[2] = \"VIDEO_AVAILABLE_SEND_BANDWIDTH\"] = 2;\n        values[valuesById[3] = \"VIDEO_RETRANSMIT_BITRATE\"] = 3;\n        values[valuesById[4] = \"VIDEO_AVAILABLE_RECEIVE_BANDWIDTH\"] = 4;\n        values[valuesById[5] = \"VIDEO_TARGET_ENCODER_BITRATE\"] = 5;\n        values[valuesById[6] = \"VIDEO_BUCKET_DELAY_MS\"] = 6;\n        values[valuesById[7] = \"STUN_RTT_MS\"] = 7;\n        values[valuesById[8] = \"SOCKET_DISCARDED_PPS\"] = 8;\n        values[valuesById[9] = \"RTC_MIC_JITTER_MS\"] = 9;\n        values[valuesById[10] = \"RTC_MIC_PPS\"] = 10;\n        values[valuesById[11] = \"RTC_MIC_FRACTION_PACKET_LOST_PERCENT\"] = 11;\n        values[valuesById[12] = \"RTC_MIC_BITRATE\"] = 12;\n        values[valuesById[13] = \"RTC_MIC_RTT_MS\"] = 13;\n        values[valuesById[14] = \"RTC_SPK_PPS\"] = 14;\n        values[valuesById[15] = \"RTC_SPK_FRACTION_PACKET_LOST_PERCENT\"] = 15;\n        values[valuesById[16] = \"RTC_SPK_JITTER_MS\"] = 16;\n        values[valuesById[17] = \"RTC_SPK_FRACTION_DECODER_LOSS_PERCENT\"] = 17;\n        values[valuesById[18] = \"RTC_SPK_BITRATE\"] = 18;\n        values[valuesById[19] = \"RTC_SPK_CURRENT_DELAY_MS\"] = 19;\n        values[valuesById[20] = \"RTC_SPK_JITTER_BUFFER_MS\"] = 20;\n        values[valuesById[21] = \"VIDEO_SENT_RTT_MS\"] = 21;\n        values[valuesById[22] = \"VIDEO_ENCODE_USAGE_PERCENT\"] = 22;\n        values[valuesById[23] = \"VIDEO_NACKS_RECEIVED\"] = 23;\n        values[valuesById[24] = \"VIDEO_PLIS_RECEIVED\"] = 24;\n        values[valuesById[25] = \"VIDEO_AVERAGE_ENCODE_MS\"] = 25;\n        values[valuesById[26] = \"VIDEO_INPUT_FPS\"] = 26;\n        values[valuesById[27] = \"VIDEO_ENCODE_FPS\"] = 27;\n        values[valuesById[28] = \"VIDEO_SENT_FPS\"] = 28;\n        values[valuesById[29] = \"VIDEO_FIRS_RECEIVED\"] = 29;\n        values[valuesById[30] = \"VIDEO_SENT_PPS\"] = 30;\n        values[valuesById[31] = \"VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT\"] = 31;\n        values[valuesById[32] = \"VIDEO_SENT_BITRATE\"] = 32;\n        values[valuesById[33] = \"VIDEO_DROPPED_FPS\"] = 33;\n        values[valuesById[34] = \"VIDEO_TARGET_DELAY_MS\"] = 34;\n        values[valuesById[35] = \"VIDEO_DECODE_MS\"] = 35;\n        values[valuesById[36] = \"VIDEO_OUTPUT_FPS\"] = 36;\n        values[valuesById[37] = \"VIDEO_RECEIVED_PPS\"] = 37;\n        values[valuesById[38] = \"VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT\"] = 38;\n        values[valuesById[39] = \"VIDEO_RENDER_DELAY_MS\"] = 39;\n        values[valuesById[40] = \"VIDEO_RECEIVED_FPS\"] = 40;\n        values[valuesById[41] = \"VIDEO_DECODE_FPS\"] = 41;\n        values[valuesById[42] = \"VIDEO_NACKS_SENT\"] = 42;\n        values[valuesById[43] = \"VIDEO_FIRS_SENT\"] = 43;\n        values[valuesById[44] = \"VIDEO_RECEIVED_BITRATE\"] = 44;\n        values[valuesById[45] = \"VIDEO_CURRENT_DELAY_MS\"] = 45;\n        values[valuesById[46] = \"VIDEO_JITTER_BUFFER_MS\"] = 46;\n        values[valuesById[47] = \"VIDEO_DISCARDED_PPS\"] = 47;\n        values[valuesById[48] = \"VIDEO_PLIS_SENT\"] = 48;\n        values[valuesById[49] = \"VIDEO_RECEIVED_JITTER_MS\"] = 49;\n        values[valuesById[64] = \"VIDEO_ENCODE_HEIGHT\"] = 64;\n        values[valuesById[66] = \"VIDEO_SENT_QP_SUM\"] = 66;\n        values[valuesById[69] = \"VIDEO_DECODE_HEIGHT\"] = 69;\n        values[valuesById[72] = \"VIDEO_RECEIVED_QP_SUM\"] = 72;\n        values[valuesById[86] = \"VIDEO_ENCODE_WIDTH\"] = 86;\n        values[valuesById[87] = \"VIDEO_DECODE_WIDTH\"] = 87;\n        return values;\n    })();\n\n    return SdkMetric;\n})();\n\n$root.SdkStreamMetricFrame = (function() {\n\n    /**\n     * Properties of a SdkStreamMetricFrame.\n     * @exports ISdkStreamMetricFrame\n     * @interface ISdkStreamMetricFrame\n     * @property {number|null} [streamId] SdkStreamMetricFrame streamId\n     * @property {number|null} [groupId] SdkStreamMetricFrame groupId\n     * @property {Array.<ISdkMetric>|null} [metrics] SdkStreamMetricFrame metrics\n     */\n\n    /**\n     * Constructs a new SdkStreamMetricFrame.\n     * @exports SdkStreamMetricFrame\n     * @classdesc Represents a SdkStreamMetricFrame.\n     * @implements ISdkStreamMetricFrame\n     * @constructor\n     * @param {ISdkStreamMetricFrame=} [properties] Properties to set\n     */\n    function SdkStreamMetricFrame(properties) {\n        this.metrics = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkStreamMetricFrame streamId.\n     * @member {number} streamId\n     * @memberof SdkStreamMetricFrame\n     * @instance\n     */\n    SdkStreamMetricFrame.prototype.streamId = 0;\n\n    /**\n     * SdkStreamMetricFrame groupId.\n     * @member {number} groupId\n     * @memberof SdkStreamMetricFrame\n     * @instance\n     */\n    SdkStreamMetricFrame.prototype.groupId = 0;\n\n    /**\n     * SdkStreamMetricFrame metrics.\n     * @member {Array.<ISdkMetric>} metrics\n     * @memberof SdkStreamMetricFrame\n     * @instance\n     */\n    SdkStreamMetricFrame.prototype.metrics = $util.emptyArray;\n\n    /**\n     * Creates a new SdkStreamMetricFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {ISdkStreamMetricFrame=} [properties] Properties to set\n     * @returns {SdkStreamMetricFrame} SdkStreamMetricFrame instance\n     */\n    SdkStreamMetricFrame.create = function create(properties) {\n        return new SdkStreamMetricFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkStreamMetricFrame message. Does not implicitly {@link SdkStreamMetricFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {ISdkStreamMetricFrame} message SdkStreamMetricFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkStreamMetricFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.streamId);\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.groupId);\n        if (message.metrics != null && message.metrics.length)\n            for (var i = 0; i < message.metrics.length; ++i)\n                $root.SdkMetric.encode(message.metrics[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkStreamMetricFrame message, length delimited. Does not implicitly {@link SdkStreamMetricFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {ISdkStreamMetricFrame} message SdkStreamMetricFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkStreamMetricFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkStreamMetricFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkStreamMetricFrame} SdkStreamMetricFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkStreamMetricFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkStreamMetricFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 3:\n                message.streamId = reader.uint32();\n                break;\n            case 4:\n                message.groupId = reader.uint32();\n                break;\n            case 5:\n                if (!(message.metrics && message.metrics.length))\n                    message.metrics = [];\n                message.metrics.push($root.SdkMetric.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkStreamMetricFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkStreamMetricFrame} SdkStreamMetricFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkStreamMetricFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkStreamMetricFrame message.\n     * @function verify\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkStreamMetricFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            if (!$util.isInteger(message.streamId))\n                return \"streamId: integer expected\";\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            if (!$util.isInteger(message.groupId))\n                return \"groupId: integer expected\";\n        if (message.metrics != null && message.hasOwnProperty(\"metrics\")) {\n            if (!Array.isArray(message.metrics))\n                return \"metrics: array expected\";\n            for (var i = 0; i < message.metrics.length; ++i) {\n                var error = $root.SdkMetric.verify(message.metrics[i]);\n                if (error)\n                    return \"metrics.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkStreamMetricFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkStreamMetricFrame} SdkStreamMetricFrame\n     */\n    SdkStreamMetricFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkStreamMetricFrame)\n            return object;\n        var message = new $root.SdkStreamMetricFrame();\n        if (object.streamId != null)\n            message.streamId = object.streamId >>> 0;\n        if (object.groupId != null)\n            message.groupId = object.groupId >>> 0;\n        if (object.metrics) {\n            if (!Array.isArray(object.metrics))\n                throw TypeError(\".SdkStreamMetricFrame.metrics: array expected\");\n            message.metrics = [];\n            for (var i = 0; i < object.metrics.length; ++i) {\n                if (typeof object.metrics[i] !== \"object\")\n                    throw TypeError(\".SdkStreamMetricFrame.metrics: object expected\");\n                message.metrics[i] = $root.SdkMetric.fromObject(object.metrics[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkStreamMetricFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {SdkStreamMetricFrame} message SdkStreamMetricFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkStreamMetricFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.metrics = [];\n        if (options.defaults) {\n            object.streamId = 0;\n            object.groupId = 0;\n        }\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            object.streamId = message.streamId;\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            object.groupId = message.groupId;\n        if (message.metrics && message.metrics.length) {\n            object.metrics = [];\n            for (var j = 0; j < message.metrics.length; ++j)\n                object.metrics[j] = $root.SdkMetric.toObject(message.metrics[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkStreamMetricFrame to JSON.\n     * @function toJSON\n     * @memberof SdkStreamMetricFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkStreamMetricFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkStreamMetricFrame;\n})();\n\n$root.SdkClientMetricFrame = (function() {\n\n    /**\n     * Properties of a SdkClientMetricFrame.\n     * @exports ISdkClientMetricFrame\n     * @interface ISdkClientMetricFrame\n     * @property {Array.<ISdkMetric>|null} [globalMetrics] SdkClientMetricFrame globalMetrics\n     * @property {Array.<ISdkStreamMetricFrame>|null} [streamMetricFrames] SdkClientMetricFrame streamMetricFrames\n     */\n\n    /**\n     * Constructs a new SdkClientMetricFrame.\n     * @exports SdkClientMetricFrame\n     * @classdesc Represents a SdkClientMetricFrame.\n     * @implements ISdkClientMetricFrame\n     * @constructor\n     * @param {ISdkClientMetricFrame=} [properties] Properties to set\n     */\n    function SdkClientMetricFrame(properties) {\n        this.globalMetrics = [];\n        this.streamMetricFrames = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkClientMetricFrame globalMetrics.\n     * @member {Array.<ISdkMetric>} globalMetrics\n     * @memberof SdkClientMetricFrame\n     * @instance\n     */\n    SdkClientMetricFrame.prototype.globalMetrics = $util.emptyArray;\n\n    /**\n     * SdkClientMetricFrame streamMetricFrames.\n     * @member {Array.<ISdkStreamMetricFrame>} streamMetricFrames\n     * @memberof SdkClientMetricFrame\n     * @instance\n     */\n    SdkClientMetricFrame.prototype.streamMetricFrames = $util.emptyArray;\n\n    /**\n     * Creates a new SdkClientMetricFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {ISdkClientMetricFrame=} [properties] Properties to set\n     * @returns {SdkClientMetricFrame} SdkClientMetricFrame instance\n     */\n    SdkClientMetricFrame.create = function create(properties) {\n        return new SdkClientMetricFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkClientMetricFrame message. Does not implicitly {@link SdkClientMetricFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {ISdkClientMetricFrame} message SdkClientMetricFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkClientMetricFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.globalMetrics != null && message.globalMetrics.length)\n            for (var i = 0; i < message.globalMetrics.length; ++i)\n                $root.SdkMetric.encode(message.globalMetrics[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        if (message.streamMetricFrames != null && message.streamMetricFrames.length)\n            for (var i = 0; i < message.streamMetricFrames.length; ++i)\n                $root.SdkStreamMetricFrame.encode(message.streamMetricFrames[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkClientMetricFrame message, length delimited. Does not implicitly {@link SdkClientMetricFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {ISdkClientMetricFrame} message SdkClientMetricFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkClientMetricFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkClientMetricFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkClientMetricFrame} SdkClientMetricFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkClientMetricFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkClientMetricFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.globalMetrics && message.globalMetrics.length))\n                    message.globalMetrics = [];\n                message.globalMetrics.push($root.SdkMetric.decode(reader, reader.uint32()));\n                break;\n            case 2:\n                if (!(message.streamMetricFrames && message.streamMetricFrames.length))\n                    message.streamMetricFrames = [];\n                message.streamMetricFrames.push($root.SdkStreamMetricFrame.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkClientMetricFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkClientMetricFrame} SdkClientMetricFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkClientMetricFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkClientMetricFrame message.\n     * @function verify\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkClientMetricFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.globalMetrics != null && message.hasOwnProperty(\"globalMetrics\")) {\n            if (!Array.isArray(message.globalMetrics))\n                return \"globalMetrics: array expected\";\n            for (var i = 0; i < message.globalMetrics.length; ++i) {\n                var error = $root.SdkMetric.verify(message.globalMetrics[i]);\n                if (error)\n                    return \"globalMetrics.\" + error;\n            }\n        }\n        if (message.streamMetricFrames != null && message.hasOwnProperty(\"streamMetricFrames\")) {\n            if (!Array.isArray(message.streamMetricFrames))\n                return \"streamMetricFrames: array expected\";\n            for (var i = 0; i < message.streamMetricFrames.length; ++i) {\n                var error = $root.SdkStreamMetricFrame.verify(message.streamMetricFrames[i]);\n                if (error)\n                    return \"streamMetricFrames.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkClientMetricFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkClientMetricFrame} SdkClientMetricFrame\n     */\n    SdkClientMetricFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkClientMetricFrame)\n            return object;\n        var message = new $root.SdkClientMetricFrame();\n        if (object.globalMetrics) {\n            if (!Array.isArray(object.globalMetrics))\n                throw TypeError(\".SdkClientMetricFrame.globalMetrics: array expected\");\n            message.globalMetrics = [];\n            for (var i = 0; i < object.globalMetrics.length; ++i) {\n                if (typeof object.globalMetrics[i] !== \"object\")\n                    throw TypeError(\".SdkClientMetricFrame.globalMetrics: object expected\");\n                message.globalMetrics[i] = $root.SdkMetric.fromObject(object.globalMetrics[i]);\n            }\n        }\n        if (object.streamMetricFrames) {\n            if (!Array.isArray(object.streamMetricFrames))\n                throw TypeError(\".SdkClientMetricFrame.streamMetricFrames: array expected\");\n            message.streamMetricFrames = [];\n            for (var i = 0; i < object.streamMetricFrames.length; ++i) {\n                if (typeof object.streamMetricFrames[i] !== \"object\")\n                    throw TypeError(\".SdkClientMetricFrame.streamMetricFrames: object expected\");\n                message.streamMetricFrames[i] = $root.SdkStreamMetricFrame.fromObject(object.streamMetricFrames[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkClientMetricFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {SdkClientMetricFrame} message SdkClientMetricFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkClientMetricFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.globalMetrics = [];\n            object.streamMetricFrames = [];\n        }\n        if (message.globalMetrics && message.globalMetrics.length) {\n            object.globalMetrics = [];\n            for (var j = 0; j < message.globalMetrics.length; ++j)\n                object.globalMetrics[j] = $root.SdkMetric.toObject(message.globalMetrics[j], options);\n        }\n        if (message.streamMetricFrames && message.streamMetricFrames.length) {\n            object.streamMetricFrames = [];\n            for (var j = 0; j < message.streamMetricFrames.length; ++j)\n                object.streamMetricFrames[j] = $root.SdkStreamMetricFrame.toObject(message.streamMetricFrames[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkClientMetricFrame to JSON.\n     * @function toJSON\n     * @memberof SdkClientMetricFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkClientMetricFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkClientMetricFrame;\n})();\n\n$root.SdkDataMessageFrame = (function() {\n\n    /**\n     * Properties of a SdkDataMessageFrame.\n     * @exports ISdkDataMessageFrame\n     * @interface ISdkDataMessageFrame\n     * @property {Array.<ISdkDataMessagePayload>|null} [messages] SdkDataMessageFrame messages\n     */\n\n    /**\n     * Constructs a new SdkDataMessageFrame.\n     * @exports SdkDataMessageFrame\n     * @classdesc Represents a SdkDataMessageFrame.\n     * @implements ISdkDataMessageFrame\n     * @constructor\n     * @param {ISdkDataMessageFrame=} [properties] Properties to set\n     */\n    function SdkDataMessageFrame(properties) {\n        this.messages = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkDataMessageFrame messages.\n     * @member {Array.<ISdkDataMessagePayload>} messages\n     * @memberof SdkDataMessageFrame\n     * @instance\n     */\n    SdkDataMessageFrame.prototype.messages = $util.emptyArray;\n\n    /**\n     * Creates a new SdkDataMessageFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {ISdkDataMessageFrame=} [properties] Properties to set\n     * @returns {SdkDataMessageFrame} SdkDataMessageFrame instance\n     */\n    SdkDataMessageFrame.create = function create(properties) {\n        return new SdkDataMessageFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkDataMessageFrame message. Does not implicitly {@link SdkDataMessageFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {ISdkDataMessageFrame} message SdkDataMessageFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkDataMessageFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.messages != null && message.messages.length)\n            for (var i = 0; i < message.messages.length; ++i)\n                $root.SdkDataMessagePayload.encode(message.messages[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkDataMessageFrame message, length delimited. Does not implicitly {@link SdkDataMessageFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {ISdkDataMessageFrame} message SdkDataMessageFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkDataMessageFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkDataMessageFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkDataMessageFrame} SdkDataMessageFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkDataMessageFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkDataMessageFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.messages && message.messages.length))\n                    message.messages = [];\n                message.messages.push($root.SdkDataMessagePayload.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkDataMessageFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkDataMessageFrame} SdkDataMessageFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkDataMessageFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkDataMessageFrame message.\n     * @function verify\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkDataMessageFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.messages != null && message.hasOwnProperty(\"messages\")) {\n            if (!Array.isArray(message.messages))\n                return \"messages: array expected\";\n            for (var i = 0; i < message.messages.length; ++i) {\n                var error = $root.SdkDataMessagePayload.verify(message.messages[i]);\n                if (error)\n                    return \"messages.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkDataMessageFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkDataMessageFrame} SdkDataMessageFrame\n     */\n    SdkDataMessageFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkDataMessageFrame)\n            return object;\n        var message = new $root.SdkDataMessageFrame();\n        if (object.messages) {\n            if (!Array.isArray(object.messages))\n                throw TypeError(\".SdkDataMessageFrame.messages: array expected\");\n            message.messages = [];\n            for (var i = 0; i < object.messages.length; ++i) {\n                if (typeof object.messages[i] !== \"object\")\n                    throw TypeError(\".SdkDataMessageFrame.messages: object expected\");\n                message.messages[i] = $root.SdkDataMessagePayload.fromObject(object.messages[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkDataMessageFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {SdkDataMessageFrame} message SdkDataMessageFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkDataMessageFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.messages = [];\n        if (message.messages && message.messages.length) {\n            object.messages = [];\n            for (var j = 0; j < message.messages.length; ++j)\n                object.messages[j] = $root.SdkDataMessagePayload.toObject(message.messages[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkDataMessageFrame to JSON.\n     * @function toJSON\n     * @memberof SdkDataMessageFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkDataMessageFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkDataMessageFrame;\n})();\n\n$root.SdkDataMessagePayload = (function() {\n\n    /**\n     * Properties of a SdkDataMessagePayload.\n     * @exports ISdkDataMessagePayload\n     * @interface ISdkDataMessagePayload\n     * @property {string|null} [topic] SdkDataMessagePayload topic\n     * @property {Uint8Array|null} [data] SdkDataMessagePayload data\n     * @property {number|null} [lifetimeMs] SdkDataMessagePayload lifetimeMs\n     * @property {string|null} [senderAttendeeId] SdkDataMessagePayload senderAttendeeId\n     * @property {number|Long|null} [ingestTimeNs] SdkDataMessagePayload ingestTimeNs\n     * @property {string|null} [senderExternalUserId] SdkDataMessagePayload senderExternalUserId\n     */\n\n    /**\n     * Constructs a new SdkDataMessagePayload.\n     * @exports SdkDataMessagePayload\n     * @classdesc Represents a SdkDataMessagePayload.\n     * @implements ISdkDataMessagePayload\n     * @constructor\n     * @param {ISdkDataMessagePayload=} [properties] Properties to set\n     */\n    function SdkDataMessagePayload(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkDataMessagePayload topic.\n     * @member {string} topic\n     * @memberof SdkDataMessagePayload\n     * @instance\n     */\n    SdkDataMessagePayload.prototype.topic = \"\";\n\n    /**\n     * SdkDataMessagePayload data.\n     * @member {Uint8Array} data\n     * @memberof SdkDataMessagePayload\n     * @instance\n     */\n    SdkDataMessagePayload.prototype.data = $util.newBuffer([]);\n\n    /**\n     * SdkDataMessagePayload lifetimeMs.\n     * @member {number} lifetimeMs\n     * @memberof SdkDataMessagePayload\n     * @instance\n     */\n    SdkDataMessagePayload.prototype.lifetimeMs = 0;\n\n    /**\n     * SdkDataMessagePayload senderAttendeeId.\n     * @member {string} senderAttendeeId\n     * @memberof SdkDataMessagePayload\n     * @instance\n     */\n    SdkDataMessagePayload.prototype.senderAttendeeId = \"\";\n\n    /**\n     * SdkDataMessagePayload ingestTimeNs.\n     * @member {number|Long} ingestTimeNs\n     * @memberof SdkDataMessagePayload\n     * @instance\n     */\n    SdkDataMessagePayload.prototype.ingestTimeNs = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * SdkDataMessagePayload senderExternalUserId.\n     * @member {string} senderExternalUserId\n     * @memberof SdkDataMessagePayload\n     * @instance\n     */\n    SdkDataMessagePayload.prototype.senderExternalUserId = \"\";\n\n    /**\n     * Creates a new SdkDataMessagePayload instance using the specified properties.\n     * @function create\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {ISdkDataMessagePayload=} [properties] Properties to set\n     * @returns {SdkDataMessagePayload} SdkDataMessagePayload instance\n     */\n    SdkDataMessagePayload.create = function create(properties) {\n        return new SdkDataMessagePayload(properties);\n    };\n\n    /**\n     * Encodes the specified SdkDataMessagePayload message. Does not implicitly {@link SdkDataMessagePayload.verify|verify} messages.\n     * @function encode\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {ISdkDataMessagePayload} message SdkDataMessagePayload message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkDataMessagePayload.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.topic != null && message.hasOwnProperty(\"topic\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.topic);\n        if (message.data != null && message.hasOwnProperty(\"data\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.data);\n        if (message.lifetimeMs != null && message.hasOwnProperty(\"lifetimeMs\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.lifetimeMs);\n        if (message.senderAttendeeId != null && message.hasOwnProperty(\"senderAttendeeId\"))\n            writer.uint32(/* id 4, wireType 2 =*/34).string(message.senderAttendeeId);\n        if (message.ingestTimeNs != null && message.hasOwnProperty(\"ingestTimeNs\"))\n            writer.uint32(/* id 5, wireType 0 =*/40).int64(message.ingestTimeNs);\n        if (message.senderExternalUserId != null && message.hasOwnProperty(\"senderExternalUserId\"))\n            writer.uint32(/* id 6, wireType 2 =*/50).string(message.senderExternalUserId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkDataMessagePayload message, length delimited. Does not implicitly {@link SdkDataMessagePayload.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {ISdkDataMessagePayload} message SdkDataMessagePayload message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkDataMessagePayload.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkDataMessagePayload message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkDataMessagePayload} SdkDataMessagePayload\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkDataMessagePayload.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkDataMessagePayload();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.topic = reader.string();\n                break;\n            case 2:\n                message.data = reader.bytes();\n                break;\n            case 3:\n                message.lifetimeMs = reader.uint32();\n                break;\n            case 4:\n                message.senderAttendeeId = reader.string();\n                break;\n            case 5:\n                message.ingestTimeNs = reader.int64();\n                break;\n            case 6:\n                message.senderExternalUserId = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkDataMessagePayload message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkDataMessagePayload} SdkDataMessagePayload\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkDataMessagePayload.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkDataMessagePayload message.\n     * @function verify\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkDataMessagePayload.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.topic != null && message.hasOwnProperty(\"topic\"))\n            if (!$util.isString(message.topic))\n                return \"topic: string expected\";\n        if (message.data != null && message.hasOwnProperty(\"data\"))\n            if (!(message.data && typeof message.data.length === \"number\" || $util.isString(message.data)))\n                return \"data: buffer expected\";\n        if (message.lifetimeMs != null && message.hasOwnProperty(\"lifetimeMs\"))\n            if (!$util.isInteger(message.lifetimeMs))\n                return \"lifetimeMs: integer expected\";\n        if (message.senderAttendeeId != null && message.hasOwnProperty(\"senderAttendeeId\"))\n            if (!$util.isString(message.senderAttendeeId))\n                return \"senderAttendeeId: string expected\";\n        if (message.ingestTimeNs != null && message.hasOwnProperty(\"ingestTimeNs\"))\n            if (!$util.isInteger(message.ingestTimeNs) && !(message.ingestTimeNs && $util.isInteger(message.ingestTimeNs.low) && $util.isInteger(message.ingestTimeNs.high)))\n                return \"ingestTimeNs: integer|Long expected\";\n        if (message.senderExternalUserId != null && message.hasOwnProperty(\"senderExternalUserId\"))\n            if (!$util.isString(message.senderExternalUserId))\n                return \"senderExternalUserId: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkDataMessagePayload message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkDataMessagePayload} SdkDataMessagePayload\n     */\n    SdkDataMessagePayload.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkDataMessagePayload)\n            return object;\n        var message = new $root.SdkDataMessagePayload();\n        if (object.topic != null)\n            message.topic = String(object.topic);\n        if (object.data != null)\n            if (typeof object.data === \"string\")\n                $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);\n            else if (object.data.length)\n                message.data = object.data;\n        if (object.lifetimeMs != null)\n            message.lifetimeMs = object.lifetimeMs >>> 0;\n        if (object.senderAttendeeId != null)\n            message.senderAttendeeId = String(object.senderAttendeeId);\n        if (object.ingestTimeNs != null)\n            if ($util.Long)\n                (message.ingestTimeNs = $util.Long.fromValue(object.ingestTimeNs)).unsigned = false;\n            else if (typeof object.ingestTimeNs === \"string\")\n                message.ingestTimeNs = parseInt(object.ingestTimeNs, 10);\n            else if (typeof object.ingestTimeNs === \"number\")\n                message.ingestTimeNs = object.ingestTimeNs;\n            else if (typeof object.ingestTimeNs === \"object\")\n                message.ingestTimeNs = new $util.LongBits(object.ingestTimeNs.low >>> 0, object.ingestTimeNs.high >>> 0).toNumber();\n        if (object.senderExternalUserId != null)\n            message.senderExternalUserId = String(object.senderExternalUserId);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkDataMessagePayload message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {SdkDataMessagePayload} message SdkDataMessagePayload\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkDataMessagePayload.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.topic = \"\";\n            if (options.bytes === String)\n                object.data = \"\";\n            else {\n                object.data = [];\n                if (options.bytes !== Array)\n                    object.data = $util.newBuffer(object.data);\n            }\n            object.lifetimeMs = 0;\n            object.senderAttendeeId = \"\";\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.ingestTimeNs = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.ingestTimeNs = options.longs === String ? \"0\" : 0;\n            object.senderExternalUserId = \"\";\n        }\n        if (message.topic != null && message.hasOwnProperty(\"topic\"))\n            object.topic = message.topic;\n        if (message.data != null && message.hasOwnProperty(\"data\"))\n            object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;\n        if (message.lifetimeMs != null && message.hasOwnProperty(\"lifetimeMs\"))\n            object.lifetimeMs = message.lifetimeMs;\n        if (message.senderAttendeeId != null && message.hasOwnProperty(\"senderAttendeeId\"))\n            object.senderAttendeeId = message.senderAttendeeId;\n        if (message.ingestTimeNs != null && message.hasOwnProperty(\"ingestTimeNs\"))\n            if (typeof message.ingestTimeNs === \"number\")\n                object.ingestTimeNs = options.longs === String ? String(message.ingestTimeNs) : message.ingestTimeNs;\n            else\n                object.ingestTimeNs = options.longs === String ? $util.Long.prototype.toString.call(message.ingestTimeNs) : options.longs === Number ? new $util.LongBits(message.ingestTimeNs.low >>> 0, message.ingestTimeNs.high >>> 0).toNumber() : message.ingestTimeNs;\n        if (message.senderExternalUserId != null && message.hasOwnProperty(\"senderExternalUserId\"))\n            object.senderExternalUserId = message.senderExternalUserId;\n        return object;\n    };\n\n    /**\n     * Converts this SdkDataMessagePayload to JSON.\n     * @function toJSON\n     * @memberof SdkDataMessagePayload\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkDataMessagePayload.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkDataMessagePayload;\n})();\n\n$root.SdkTurnCredentials = (function() {\n\n    /**\n     * Properties of a SdkTurnCredentials.\n     * @exports ISdkTurnCredentials\n     * @interface ISdkTurnCredentials\n     * @property {string|null} [username] SdkTurnCredentials username\n     * @property {string|null} [password] SdkTurnCredentials password\n     * @property {number|null} [ttl] SdkTurnCredentials ttl\n     * @property {Array.<string>|null} [uris] SdkTurnCredentials uris\n     */\n\n    /**\n     * Constructs a new SdkTurnCredentials.\n     * @exports SdkTurnCredentials\n     * @classdesc Represents a SdkTurnCredentials.\n     * @implements ISdkTurnCredentials\n     * @constructor\n     * @param {ISdkTurnCredentials=} [properties] Properties to set\n     */\n    function SdkTurnCredentials(properties) {\n        this.uris = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkTurnCredentials username.\n     * @member {string} username\n     * @memberof SdkTurnCredentials\n     * @instance\n     */\n    SdkTurnCredentials.prototype.username = \"\";\n\n    /**\n     * SdkTurnCredentials password.\n     * @member {string} password\n     * @memberof SdkTurnCredentials\n     * @instance\n     */\n    SdkTurnCredentials.prototype.password = \"\";\n\n    /**\n     * SdkTurnCredentials ttl.\n     * @member {number} ttl\n     * @memberof SdkTurnCredentials\n     * @instance\n     */\n    SdkTurnCredentials.prototype.ttl = 0;\n\n    /**\n     * SdkTurnCredentials uris.\n     * @member {Array.<string>} uris\n     * @memberof SdkTurnCredentials\n     * @instance\n     */\n    SdkTurnCredentials.prototype.uris = $util.emptyArray;\n\n    /**\n     * Creates a new SdkTurnCredentials instance using the specified properties.\n     * @function create\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {ISdkTurnCredentials=} [properties] Properties to set\n     * @returns {SdkTurnCredentials} SdkTurnCredentials instance\n     */\n    SdkTurnCredentials.create = function create(properties) {\n        return new SdkTurnCredentials(properties);\n    };\n\n    /**\n     * Encodes the specified SdkTurnCredentials message. Does not implicitly {@link SdkTurnCredentials.verify|verify} messages.\n     * @function encode\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {ISdkTurnCredentials} message SdkTurnCredentials message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTurnCredentials.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.username != null && message.hasOwnProperty(\"username\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.username);\n        if (message.password != null && message.hasOwnProperty(\"password\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.password);\n        if (message.ttl != null && message.hasOwnProperty(\"ttl\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.ttl);\n        if (message.uris != null && message.uris.length)\n            for (var i = 0; i < message.uris.length; ++i)\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.uris[i]);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkTurnCredentials message, length delimited. Does not implicitly {@link SdkTurnCredentials.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {ISdkTurnCredentials} message SdkTurnCredentials message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTurnCredentials.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkTurnCredentials message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkTurnCredentials} SdkTurnCredentials\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTurnCredentials.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkTurnCredentials();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.username = reader.string();\n                break;\n            case 2:\n                message.password = reader.string();\n                break;\n            case 3:\n                message.ttl = reader.uint32();\n                break;\n            case 4:\n                if (!(message.uris && message.uris.length))\n                    message.uris = [];\n                message.uris.push(reader.string());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkTurnCredentials message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkTurnCredentials} SdkTurnCredentials\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTurnCredentials.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkTurnCredentials message.\n     * @function verify\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkTurnCredentials.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.username != null && message.hasOwnProperty(\"username\"))\n            if (!$util.isString(message.username))\n                return \"username: string expected\";\n        if (message.password != null && message.hasOwnProperty(\"password\"))\n            if (!$util.isString(message.password))\n                return \"password: string expected\";\n        if (message.ttl != null && message.hasOwnProperty(\"ttl\"))\n            if (!$util.isInteger(message.ttl))\n                return \"ttl: integer expected\";\n        if (message.uris != null && message.hasOwnProperty(\"uris\")) {\n            if (!Array.isArray(message.uris))\n                return \"uris: array expected\";\n            for (var i = 0; i < message.uris.length; ++i)\n                if (!$util.isString(message.uris[i]))\n                    return \"uris: string[] expected\";\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkTurnCredentials message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkTurnCredentials} SdkTurnCredentials\n     */\n    SdkTurnCredentials.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkTurnCredentials)\n            return object;\n        var message = new $root.SdkTurnCredentials();\n        if (object.username != null)\n            message.username = String(object.username);\n        if (object.password != null)\n            message.password = String(object.password);\n        if (object.ttl != null)\n            message.ttl = object.ttl >>> 0;\n        if (object.uris) {\n            if (!Array.isArray(object.uris))\n                throw TypeError(\".SdkTurnCredentials.uris: array expected\");\n            message.uris = [];\n            for (var i = 0; i < object.uris.length; ++i)\n                message.uris[i] = String(object.uris[i]);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkTurnCredentials message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {SdkTurnCredentials} message SdkTurnCredentials\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkTurnCredentials.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.uris = [];\n        if (options.defaults) {\n            object.username = \"\";\n            object.password = \"\";\n            object.ttl = 0;\n        }\n        if (message.username != null && message.hasOwnProperty(\"username\"))\n            object.username = message.username;\n        if (message.password != null && message.hasOwnProperty(\"password\"))\n            object.password = message.password;\n        if (message.ttl != null && message.hasOwnProperty(\"ttl\"))\n            object.ttl = message.ttl;\n        if (message.uris && message.uris.length) {\n            object.uris = [];\n            for (var j = 0; j < message.uris.length; ++j)\n                object.uris[j] = message.uris[j];\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkTurnCredentials to JSON.\n     * @function toJSON\n     * @memberof SdkTurnCredentials\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkTurnCredentials.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkTurnCredentials;\n})();\n\n$root.SdkTranscriptItem = (function() {\n\n    /**\n     * Properties of a SdkTranscriptItem.\n     * @exports ISdkTranscriptItem\n     * @interface ISdkTranscriptItem\n     * @property {string|null} [content] SdkTranscriptItem content\n     * @property {number|Long|null} [endTime] SdkTranscriptItem endTime\n     * @property {string|null} [speakerAttendeeId] SdkTranscriptItem speakerAttendeeId\n     * @property {string|null} [speakerExternalUserId] SdkTranscriptItem speakerExternalUserId\n     * @property {number|Long|null} [startTime] SdkTranscriptItem startTime\n     * @property {SdkTranscriptItem.Type|null} [type] SdkTranscriptItem type\n     * @property {boolean|null} [vocabularyFilterMatch] SdkTranscriptItem vocabularyFilterMatch\n     * @property {number|null} [confidence] SdkTranscriptItem confidence\n     * @property {boolean|null} [stable] SdkTranscriptItem stable\n     */\n\n    /**\n     * Constructs a new SdkTranscriptItem.\n     * @exports SdkTranscriptItem\n     * @classdesc Represents a SdkTranscriptItem.\n     * @implements ISdkTranscriptItem\n     * @constructor\n     * @param {ISdkTranscriptItem=} [properties] Properties to set\n     */\n    function SdkTranscriptItem(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkTranscriptItem content.\n     * @member {string} content\n     * @memberof SdkTranscriptItem\n     * @instance\n     */\n    SdkTranscriptItem.prototype.content = \"\";\n\n    /**\n     * SdkTranscriptItem endTime.\n     * @member {number|Long} endTime\n     * @memberof SdkTranscriptItem\n     * @instance\n     */\n    SdkTranscriptItem.prototype.endTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * SdkTranscriptItem speakerAttendeeId.\n     * @member {string} speakerAttendeeId\n     * @memberof SdkTranscriptItem\n     * @instance\n     */\n    SdkTranscriptItem.prototype.speakerAttendeeId = \"\";\n\n    /**\n     * SdkTranscriptItem speakerExternalUserId.\n     * @member {string} speakerExternalUserId\n     * @memberof SdkTranscriptItem\n     * @instance\n     */\n    SdkTranscriptItem.prototype.speakerExternalUserId = \"\";\n\n    /**\n     * SdkTranscriptItem startTime.\n     * @member {number|Long} startTime\n     * @memberof SdkTranscriptItem\n     * @instance\n     */\n    SdkTranscriptItem.prototype.startTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * SdkTranscriptItem type.\n     * @member {SdkTranscriptItem.Type} type\n     * @memberof SdkTranscriptItem\n     * @instance\n     */\n    SdkTranscriptItem.prototype.type = 1;\n\n    /**\n     * SdkTranscriptItem vocabularyFilterMatch.\n     * @member {boolean} vocabularyFilterMatch\n     * @memberof SdkTranscriptItem\n     * @instance\n     */\n    SdkTranscriptItem.prototype.vocabularyFilterMatch = false;\n\n    /**\n     * SdkTranscriptItem confidence.\n     * @member {number} confidence\n     * @memberof SdkTranscriptItem\n     * @instance\n     */\n    SdkTranscriptItem.prototype.confidence = 0;\n\n    /**\n     * SdkTranscriptItem stable.\n     * @member {boolean} stable\n     * @memberof SdkTranscriptItem\n     * @instance\n     */\n    SdkTranscriptItem.prototype.stable = false;\n\n    /**\n     * Creates a new SdkTranscriptItem instance using the specified properties.\n     * @function create\n     * @memberof SdkTranscriptItem\n     * @static\n     * @param {ISdkTranscriptItem=} [properties] Properties to set\n     * @returns {SdkTranscriptItem} SdkTranscriptItem instance\n     */\n    SdkTranscriptItem.create = function create(properties) {\n        return new SdkTranscriptItem(properties);\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptItem message. Does not implicitly {@link SdkTranscriptItem.verify|verify} messages.\n     * @function encode\n     * @memberof SdkTranscriptItem\n     * @static\n     * @param {ISdkTranscriptItem} message SdkTranscriptItem message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptItem.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.content != null && message.hasOwnProperty(\"content\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.content);\n        if (message.endTime != null && message.hasOwnProperty(\"endTime\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).int64(message.endTime);\n        if (message.speakerAttendeeId != null && message.hasOwnProperty(\"speakerAttendeeId\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.speakerAttendeeId);\n        if (message.speakerExternalUserId != null && message.hasOwnProperty(\"speakerExternalUserId\"))\n            writer.uint32(/* id 4, wireType 2 =*/34).string(message.speakerExternalUserId);\n        if (message.startTime != null && message.hasOwnProperty(\"startTime\"))\n            writer.uint32(/* id 5, wireType 0 =*/40).int64(message.startTime);\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            writer.uint32(/* id 6, wireType 0 =*/48).int32(message.type);\n        if (message.vocabularyFilterMatch != null && message.hasOwnProperty(\"vocabularyFilterMatch\"))\n            writer.uint32(/* id 7, wireType 0 =*/56).bool(message.vocabularyFilterMatch);\n        if (message.confidence != null && message.hasOwnProperty(\"confidence\"))\n            writer.uint32(/* id 8, wireType 1 =*/65).double(message.confidence);\n        if (message.stable != null && message.hasOwnProperty(\"stable\"))\n            writer.uint32(/* id 9, wireType 0 =*/72).bool(message.stable);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptItem message, length delimited. Does not implicitly {@link SdkTranscriptItem.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkTranscriptItem\n     * @static\n     * @param {ISdkTranscriptItem} message SdkTranscriptItem message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptItem.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkTranscriptItem message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkTranscriptItem\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkTranscriptItem} SdkTranscriptItem\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptItem.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkTranscriptItem();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.content = reader.string();\n                break;\n            case 2:\n                message.endTime = reader.int64();\n                break;\n            case 3:\n                message.speakerAttendeeId = reader.string();\n                break;\n            case 4:\n                message.speakerExternalUserId = reader.string();\n                break;\n            case 5:\n                message.startTime = reader.int64();\n                break;\n            case 6:\n                message.type = reader.int32();\n                break;\n            case 7:\n                message.vocabularyFilterMatch = reader.bool();\n                break;\n            case 8:\n                message.confidence = reader.double();\n                break;\n            case 9:\n                message.stable = reader.bool();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkTranscriptItem message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkTranscriptItem\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkTranscriptItem} SdkTranscriptItem\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptItem.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkTranscriptItem message.\n     * @function verify\n     * @memberof SdkTranscriptItem\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkTranscriptItem.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.content != null && message.hasOwnProperty(\"content\"))\n            if (!$util.isString(message.content))\n                return \"content: string expected\";\n        if (message.endTime != null && message.hasOwnProperty(\"endTime\"))\n            if (!$util.isInteger(message.endTime) && !(message.endTime && $util.isInteger(message.endTime.low) && $util.isInteger(message.endTime.high)))\n                return \"endTime: integer|Long expected\";\n        if (message.speakerAttendeeId != null && message.hasOwnProperty(\"speakerAttendeeId\"))\n            if (!$util.isString(message.speakerAttendeeId))\n                return \"speakerAttendeeId: string expected\";\n        if (message.speakerExternalUserId != null && message.hasOwnProperty(\"speakerExternalUserId\"))\n            if (!$util.isString(message.speakerExternalUserId))\n                return \"speakerExternalUserId: string expected\";\n        if (message.startTime != null && message.hasOwnProperty(\"startTime\"))\n            if (!$util.isInteger(message.startTime) && !(message.startTime && $util.isInteger(message.startTime.low) && $util.isInteger(message.startTime.high)))\n                return \"startTime: integer|Long expected\";\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            switch (message.type) {\n            default:\n                return \"type: enum value expected\";\n            case 1:\n            case 2:\n                break;\n            }\n        if (message.vocabularyFilterMatch != null && message.hasOwnProperty(\"vocabularyFilterMatch\"))\n            if (typeof message.vocabularyFilterMatch !== \"boolean\")\n                return \"vocabularyFilterMatch: boolean expected\";\n        if (message.confidence != null && message.hasOwnProperty(\"confidence\"))\n            if (typeof message.confidence !== \"number\")\n                return \"confidence: number expected\";\n        if (message.stable != null && message.hasOwnProperty(\"stable\"))\n            if (typeof message.stable !== \"boolean\")\n                return \"stable: boolean expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkTranscriptItem message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkTranscriptItem\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkTranscriptItem} SdkTranscriptItem\n     */\n    SdkTranscriptItem.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkTranscriptItem)\n            return object;\n        var message = new $root.SdkTranscriptItem();\n        if (object.content != null)\n            message.content = String(object.content);\n        if (object.endTime != null)\n            if ($util.Long)\n                (message.endTime = $util.Long.fromValue(object.endTime)).unsigned = false;\n            else if (typeof object.endTime === \"string\")\n                message.endTime = parseInt(object.endTime, 10);\n            else if (typeof object.endTime === \"number\")\n                message.endTime = object.endTime;\n            else if (typeof object.endTime === \"object\")\n                message.endTime = new $util.LongBits(object.endTime.low >>> 0, object.endTime.high >>> 0).toNumber();\n        if (object.speakerAttendeeId != null)\n            message.speakerAttendeeId = String(object.speakerAttendeeId);\n        if (object.speakerExternalUserId != null)\n            message.speakerExternalUserId = String(object.speakerExternalUserId);\n        if (object.startTime != null)\n            if ($util.Long)\n                (message.startTime = $util.Long.fromValue(object.startTime)).unsigned = false;\n            else if (typeof object.startTime === \"string\")\n                message.startTime = parseInt(object.startTime, 10);\n            else if (typeof object.startTime === \"number\")\n                message.startTime = object.startTime;\n            else if (typeof object.startTime === \"object\")\n                message.startTime = new $util.LongBits(object.startTime.low >>> 0, object.startTime.high >>> 0).toNumber();\n        switch (object.type) {\n        case \"PRONUNCIATION\":\n        case 1:\n            message.type = 1;\n            break;\n        case \"PUNCTUATION\":\n        case 2:\n            message.type = 2;\n            break;\n        }\n        if (object.vocabularyFilterMatch != null)\n            message.vocabularyFilterMatch = Boolean(object.vocabularyFilterMatch);\n        if (object.confidence != null)\n            message.confidence = Number(object.confidence);\n        if (object.stable != null)\n            message.stable = Boolean(object.stable);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkTranscriptItem message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkTranscriptItem\n     * @static\n     * @param {SdkTranscriptItem} message SdkTranscriptItem\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkTranscriptItem.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.content = \"\";\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.endTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.endTime = options.longs === String ? \"0\" : 0;\n            object.speakerAttendeeId = \"\";\n            object.speakerExternalUserId = \"\";\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.startTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.startTime = options.longs === String ? \"0\" : 0;\n            object.type = options.enums === String ? \"PRONUNCIATION\" : 1;\n            object.vocabularyFilterMatch = false;\n            object.confidence = 0;\n            object.stable = false;\n        }\n        if (message.content != null && message.hasOwnProperty(\"content\"))\n            object.content = message.content;\n        if (message.endTime != null && message.hasOwnProperty(\"endTime\"))\n            if (typeof message.endTime === \"number\")\n                object.endTime = options.longs === String ? String(message.endTime) : message.endTime;\n            else\n                object.endTime = options.longs === String ? $util.Long.prototype.toString.call(message.endTime) : options.longs === Number ? new $util.LongBits(message.endTime.low >>> 0, message.endTime.high >>> 0).toNumber() : message.endTime;\n        if (message.speakerAttendeeId != null && message.hasOwnProperty(\"speakerAttendeeId\"))\n            object.speakerAttendeeId = message.speakerAttendeeId;\n        if (message.speakerExternalUserId != null && message.hasOwnProperty(\"speakerExternalUserId\"))\n            object.speakerExternalUserId = message.speakerExternalUserId;\n        if (message.startTime != null && message.hasOwnProperty(\"startTime\"))\n            if (typeof message.startTime === \"number\")\n                object.startTime = options.longs === String ? String(message.startTime) : message.startTime;\n            else\n                object.startTime = options.longs === String ? $util.Long.prototype.toString.call(message.startTime) : options.longs === Number ? new $util.LongBits(message.startTime.low >>> 0, message.startTime.high >>> 0).toNumber() : message.startTime;\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            object.type = options.enums === String ? $root.SdkTranscriptItem.Type[message.type] : message.type;\n        if (message.vocabularyFilterMatch != null && message.hasOwnProperty(\"vocabularyFilterMatch\"))\n            object.vocabularyFilterMatch = message.vocabularyFilterMatch;\n        if (message.confidence != null && message.hasOwnProperty(\"confidence\"))\n            object.confidence = options.json && !isFinite(message.confidence) ? String(message.confidence) : message.confidence;\n        if (message.stable != null && message.hasOwnProperty(\"stable\"))\n            object.stable = message.stable;\n        return object;\n    };\n\n    /**\n     * Converts this SdkTranscriptItem to JSON.\n     * @function toJSON\n     * @memberof SdkTranscriptItem\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkTranscriptItem.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * Type enum.\n     * @name SdkTranscriptItem.Type\n     * @enum {string}\n     * @property {number} PRONUNCIATION=1 PRONUNCIATION value\n     * @property {number} PUNCTUATION=2 PUNCTUATION value\n     */\n    SdkTranscriptItem.Type = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[1] = \"PRONUNCIATION\"] = 1;\n        values[valuesById[2] = \"PUNCTUATION\"] = 2;\n        return values;\n    })();\n\n    return SdkTranscriptItem;\n})();\n\n$root.SdkTranscriptEntity = (function() {\n\n    /**\n     * Properties of a SdkTranscriptEntity.\n     * @exports ISdkTranscriptEntity\n     * @interface ISdkTranscriptEntity\n     * @property {string|null} [category] SdkTranscriptEntity category\n     * @property {number|null} [confidence] SdkTranscriptEntity confidence\n     * @property {string|null} [content] SdkTranscriptEntity content\n     * @property {number|Long|null} [endTime] SdkTranscriptEntity endTime\n     * @property {number|Long|null} [startTime] SdkTranscriptEntity startTime\n     * @property {string|null} [type] SdkTranscriptEntity type\n     */\n\n    /**\n     * Constructs a new SdkTranscriptEntity.\n     * @exports SdkTranscriptEntity\n     * @classdesc Represents a SdkTranscriptEntity.\n     * @implements ISdkTranscriptEntity\n     * @constructor\n     * @param {ISdkTranscriptEntity=} [properties] Properties to set\n     */\n    function SdkTranscriptEntity(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkTranscriptEntity category.\n     * @member {string} category\n     * @memberof SdkTranscriptEntity\n     * @instance\n     */\n    SdkTranscriptEntity.prototype.category = \"\";\n\n    /**\n     * SdkTranscriptEntity confidence.\n     * @member {number} confidence\n     * @memberof SdkTranscriptEntity\n     * @instance\n     */\n    SdkTranscriptEntity.prototype.confidence = 0;\n\n    /**\n     * SdkTranscriptEntity content.\n     * @member {string} content\n     * @memberof SdkTranscriptEntity\n     * @instance\n     */\n    SdkTranscriptEntity.prototype.content = \"\";\n\n    /**\n     * SdkTranscriptEntity endTime.\n     * @member {number|Long} endTime\n     * @memberof SdkTranscriptEntity\n     * @instance\n     */\n    SdkTranscriptEntity.prototype.endTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * SdkTranscriptEntity startTime.\n     * @member {number|Long} startTime\n     * @memberof SdkTranscriptEntity\n     * @instance\n     */\n    SdkTranscriptEntity.prototype.startTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * SdkTranscriptEntity type.\n     * @member {string} type\n     * @memberof SdkTranscriptEntity\n     * @instance\n     */\n    SdkTranscriptEntity.prototype.type = \"\";\n\n    /**\n     * Creates a new SdkTranscriptEntity instance using the specified properties.\n     * @function create\n     * @memberof SdkTranscriptEntity\n     * @static\n     * @param {ISdkTranscriptEntity=} [properties] Properties to set\n     * @returns {SdkTranscriptEntity} SdkTranscriptEntity instance\n     */\n    SdkTranscriptEntity.create = function create(properties) {\n        return new SdkTranscriptEntity(properties);\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptEntity message. Does not implicitly {@link SdkTranscriptEntity.verify|verify} messages.\n     * @function encode\n     * @memberof SdkTranscriptEntity\n     * @static\n     * @param {ISdkTranscriptEntity} message SdkTranscriptEntity message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptEntity.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.category != null && message.hasOwnProperty(\"category\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.category);\n        if (message.confidence != null && message.hasOwnProperty(\"confidence\"))\n            writer.uint32(/* id 2, wireType 1 =*/17).double(message.confidence);\n        if (message.content != null && message.hasOwnProperty(\"content\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.content);\n        if (message.endTime != null && message.hasOwnProperty(\"endTime\"))\n            writer.uint32(/* id 4, wireType 0 =*/32).int64(message.endTime);\n        if (message.startTime != null && message.hasOwnProperty(\"startTime\"))\n            writer.uint32(/* id 5, wireType 0 =*/40).int64(message.startTime);\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            writer.uint32(/* id 6, wireType 2 =*/50).string(message.type);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptEntity message, length delimited. Does not implicitly {@link SdkTranscriptEntity.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkTranscriptEntity\n     * @static\n     * @param {ISdkTranscriptEntity} message SdkTranscriptEntity message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptEntity.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkTranscriptEntity message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkTranscriptEntity\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkTranscriptEntity} SdkTranscriptEntity\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptEntity.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkTranscriptEntity();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.category = reader.string();\n                break;\n            case 2:\n                message.confidence = reader.double();\n                break;\n            case 3:\n                message.content = reader.string();\n                break;\n            case 4:\n                message.endTime = reader.int64();\n                break;\n            case 5:\n                message.startTime = reader.int64();\n                break;\n            case 6:\n                message.type = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkTranscriptEntity message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkTranscriptEntity\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkTranscriptEntity} SdkTranscriptEntity\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptEntity.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkTranscriptEntity message.\n     * @function verify\n     * @memberof SdkTranscriptEntity\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkTranscriptEntity.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.category != null && message.hasOwnProperty(\"category\"))\n            if (!$util.isString(message.category))\n                return \"category: string expected\";\n        if (message.confidence != null && message.hasOwnProperty(\"confidence\"))\n            if (typeof message.confidence !== \"number\")\n                return \"confidence: number expected\";\n        if (message.content != null && message.hasOwnProperty(\"content\"))\n            if (!$util.isString(message.content))\n                return \"content: string expected\";\n        if (message.endTime != null && message.hasOwnProperty(\"endTime\"))\n            if (!$util.isInteger(message.endTime) && !(message.endTime && $util.isInteger(message.endTime.low) && $util.isInteger(message.endTime.high)))\n                return \"endTime: integer|Long expected\";\n        if (message.startTime != null && message.hasOwnProperty(\"startTime\"))\n            if (!$util.isInteger(message.startTime) && !(message.startTime && $util.isInteger(message.startTime.low) && $util.isInteger(message.startTime.high)))\n                return \"startTime: integer|Long expected\";\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            if (!$util.isString(message.type))\n                return \"type: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkTranscriptEntity message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkTranscriptEntity\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkTranscriptEntity} SdkTranscriptEntity\n     */\n    SdkTranscriptEntity.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkTranscriptEntity)\n            return object;\n        var message = new $root.SdkTranscriptEntity();\n        if (object.category != null)\n            message.category = String(object.category);\n        if (object.confidence != null)\n            message.confidence = Number(object.confidence);\n        if (object.content != null)\n            message.content = String(object.content);\n        if (object.endTime != null)\n            if ($util.Long)\n                (message.endTime = $util.Long.fromValue(object.endTime)).unsigned = false;\n            else if (typeof object.endTime === \"string\")\n                message.endTime = parseInt(object.endTime, 10);\n            else if (typeof object.endTime === \"number\")\n                message.endTime = object.endTime;\n            else if (typeof object.endTime === \"object\")\n                message.endTime = new $util.LongBits(object.endTime.low >>> 0, object.endTime.high >>> 0).toNumber();\n        if (object.startTime != null)\n            if ($util.Long)\n                (message.startTime = $util.Long.fromValue(object.startTime)).unsigned = false;\n            else if (typeof object.startTime === \"string\")\n                message.startTime = parseInt(object.startTime, 10);\n            else if (typeof object.startTime === \"number\")\n                message.startTime = object.startTime;\n            else if (typeof object.startTime === \"object\")\n                message.startTime = new $util.LongBits(object.startTime.low >>> 0, object.startTime.high >>> 0).toNumber();\n        if (object.type != null)\n            message.type = String(object.type);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkTranscriptEntity message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkTranscriptEntity\n     * @static\n     * @param {SdkTranscriptEntity} message SdkTranscriptEntity\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkTranscriptEntity.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.category = \"\";\n            object.confidence = 0;\n            object.content = \"\";\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.endTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.endTime = options.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.startTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.startTime = options.longs === String ? \"0\" : 0;\n            object.type = \"\";\n        }\n        if (message.category != null && message.hasOwnProperty(\"category\"))\n            object.category = message.category;\n        if (message.confidence != null && message.hasOwnProperty(\"confidence\"))\n            object.confidence = options.json && !isFinite(message.confidence) ? String(message.confidence) : message.confidence;\n        if (message.content != null && message.hasOwnProperty(\"content\"))\n            object.content = message.content;\n        if (message.endTime != null && message.hasOwnProperty(\"endTime\"))\n            if (typeof message.endTime === \"number\")\n                object.endTime = options.longs === String ? String(message.endTime) : message.endTime;\n            else\n                object.endTime = options.longs === String ? $util.Long.prototype.toString.call(message.endTime) : options.longs === Number ? new $util.LongBits(message.endTime.low >>> 0, message.endTime.high >>> 0).toNumber() : message.endTime;\n        if (message.startTime != null && message.hasOwnProperty(\"startTime\"))\n            if (typeof message.startTime === \"number\")\n                object.startTime = options.longs === String ? String(message.startTime) : message.startTime;\n            else\n                object.startTime = options.longs === String ? $util.Long.prototype.toString.call(message.startTime) : options.longs === Number ? new $util.LongBits(message.startTime.low >>> 0, message.startTime.high >>> 0).toNumber() : message.startTime;\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            object.type = message.type;\n        return object;\n    };\n\n    /**\n     * Converts this SdkTranscriptEntity to JSON.\n     * @function toJSON\n     * @memberof SdkTranscriptEntity\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkTranscriptEntity.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkTranscriptEntity;\n})();\n\n$root.SdkTranscriptAlternative = (function() {\n\n    /**\n     * Properties of a SdkTranscriptAlternative.\n     * @exports ISdkTranscriptAlternative\n     * @interface ISdkTranscriptAlternative\n     * @property {Array.<ISdkTranscriptItem>|null} [items] SdkTranscriptAlternative items\n     * @property {string|null} [transcript] SdkTranscriptAlternative transcript\n     * @property {Array.<ISdkTranscriptEntity>|null} [entities] SdkTranscriptAlternative entities\n     */\n\n    /**\n     * Constructs a new SdkTranscriptAlternative.\n     * @exports SdkTranscriptAlternative\n     * @classdesc Represents a SdkTranscriptAlternative.\n     * @implements ISdkTranscriptAlternative\n     * @constructor\n     * @param {ISdkTranscriptAlternative=} [properties] Properties to set\n     */\n    function SdkTranscriptAlternative(properties) {\n        this.items = [];\n        this.entities = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkTranscriptAlternative items.\n     * @member {Array.<ISdkTranscriptItem>} items\n     * @memberof SdkTranscriptAlternative\n     * @instance\n     */\n    SdkTranscriptAlternative.prototype.items = $util.emptyArray;\n\n    /**\n     * SdkTranscriptAlternative transcript.\n     * @member {string} transcript\n     * @memberof SdkTranscriptAlternative\n     * @instance\n     */\n    SdkTranscriptAlternative.prototype.transcript = \"\";\n\n    /**\n     * SdkTranscriptAlternative entities.\n     * @member {Array.<ISdkTranscriptEntity>} entities\n     * @memberof SdkTranscriptAlternative\n     * @instance\n     */\n    SdkTranscriptAlternative.prototype.entities = $util.emptyArray;\n\n    /**\n     * Creates a new SdkTranscriptAlternative instance using the specified properties.\n     * @function create\n     * @memberof SdkTranscriptAlternative\n     * @static\n     * @param {ISdkTranscriptAlternative=} [properties] Properties to set\n     * @returns {SdkTranscriptAlternative} SdkTranscriptAlternative instance\n     */\n    SdkTranscriptAlternative.create = function create(properties) {\n        return new SdkTranscriptAlternative(properties);\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptAlternative message. Does not implicitly {@link SdkTranscriptAlternative.verify|verify} messages.\n     * @function encode\n     * @memberof SdkTranscriptAlternative\n     * @static\n     * @param {ISdkTranscriptAlternative} message SdkTranscriptAlternative message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptAlternative.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.items != null && message.items.length)\n            for (var i = 0; i < message.items.length; ++i)\n                $root.SdkTranscriptItem.encode(message.items[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        if (message.transcript != null && message.hasOwnProperty(\"transcript\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.transcript);\n        if (message.entities != null && message.entities.length)\n            for (var i = 0; i < message.entities.length; ++i)\n                $root.SdkTranscriptEntity.encode(message.entities[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptAlternative message, length delimited. Does not implicitly {@link SdkTranscriptAlternative.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkTranscriptAlternative\n     * @static\n     * @param {ISdkTranscriptAlternative} message SdkTranscriptAlternative message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptAlternative.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkTranscriptAlternative message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkTranscriptAlternative\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkTranscriptAlternative} SdkTranscriptAlternative\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptAlternative.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkTranscriptAlternative();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.items && message.items.length))\n                    message.items = [];\n                message.items.push($root.SdkTranscriptItem.decode(reader, reader.uint32()));\n                break;\n            case 2:\n                message.transcript = reader.string();\n                break;\n            case 3:\n                if (!(message.entities && message.entities.length))\n                    message.entities = [];\n                message.entities.push($root.SdkTranscriptEntity.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkTranscriptAlternative message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkTranscriptAlternative\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkTranscriptAlternative} SdkTranscriptAlternative\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptAlternative.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkTranscriptAlternative message.\n     * @function verify\n     * @memberof SdkTranscriptAlternative\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkTranscriptAlternative.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.items != null && message.hasOwnProperty(\"items\")) {\n            if (!Array.isArray(message.items))\n                return \"items: array expected\";\n            for (var i = 0; i < message.items.length; ++i) {\n                var error = $root.SdkTranscriptItem.verify(message.items[i]);\n                if (error)\n                    return \"items.\" + error;\n            }\n        }\n        if (message.transcript != null && message.hasOwnProperty(\"transcript\"))\n            if (!$util.isString(message.transcript))\n                return \"transcript: string expected\";\n        if (message.entities != null && message.hasOwnProperty(\"entities\")) {\n            if (!Array.isArray(message.entities))\n                return \"entities: array expected\";\n            for (var i = 0; i < message.entities.length; ++i) {\n                var error = $root.SdkTranscriptEntity.verify(message.entities[i]);\n                if (error)\n                    return \"entities.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkTranscriptAlternative message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkTranscriptAlternative\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkTranscriptAlternative} SdkTranscriptAlternative\n     */\n    SdkTranscriptAlternative.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkTranscriptAlternative)\n            return object;\n        var message = new $root.SdkTranscriptAlternative();\n        if (object.items) {\n            if (!Array.isArray(object.items))\n                throw TypeError(\".SdkTranscriptAlternative.items: array expected\");\n            message.items = [];\n            for (var i = 0; i < object.items.length; ++i) {\n                if (typeof object.items[i] !== \"object\")\n                    throw TypeError(\".SdkTranscriptAlternative.items: object expected\");\n                message.items[i] = $root.SdkTranscriptItem.fromObject(object.items[i]);\n            }\n        }\n        if (object.transcript != null)\n            message.transcript = String(object.transcript);\n        if (object.entities) {\n            if (!Array.isArray(object.entities))\n                throw TypeError(\".SdkTranscriptAlternative.entities: array expected\");\n            message.entities = [];\n            for (var i = 0; i < object.entities.length; ++i) {\n                if (typeof object.entities[i] !== \"object\")\n                    throw TypeError(\".SdkTranscriptAlternative.entities: object expected\");\n                message.entities[i] = $root.SdkTranscriptEntity.fromObject(object.entities[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkTranscriptAlternative message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkTranscriptAlternative\n     * @static\n     * @param {SdkTranscriptAlternative} message SdkTranscriptAlternative\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkTranscriptAlternative.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.items = [];\n            object.entities = [];\n        }\n        if (options.defaults)\n            object.transcript = \"\";\n        if (message.items && message.items.length) {\n            object.items = [];\n            for (var j = 0; j < message.items.length; ++j)\n                object.items[j] = $root.SdkTranscriptItem.toObject(message.items[j], options);\n        }\n        if (message.transcript != null && message.hasOwnProperty(\"transcript\"))\n            object.transcript = message.transcript;\n        if (message.entities && message.entities.length) {\n            object.entities = [];\n            for (var j = 0; j < message.entities.length; ++j)\n                object.entities[j] = $root.SdkTranscriptEntity.toObject(message.entities[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkTranscriptAlternative to JSON.\n     * @function toJSON\n     * @memberof SdkTranscriptAlternative\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkTranscriptAlternative.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkTranscriptAlternative;\n})();\n\n$root.SdkTranscriptLanguageWithScore = (function() {\n\n    /**\n     * Properties of a SdkTranscriptLanguageWithScore.\n     * @exports ISdkTranscriptLanguageWithScore\n     * @interface ISdkTranscriptLanguageWithScore\n     * @property {string|null} [languageCode] SdkTranscriptLanguageWithScore languageCode\n     * @property {number|null} [score] SdkTranscriptLanguageWithScore score\n     */\n\n    /**\n     * Constructs a new SdkTranscriptLanguageWithScore.\n     * @exports SdkTranscriptLanguageWithScore\n     * @classdesc Represents a SdkTranscriptLanguageWithScore.\n     * @implements ISdkTranscriptLanguageWithScore\n     * @constructor\n     * @param {ISdkTranscriptLanguageWithScore=} [properties] Properties to set\n     */\n    function SdkTranscriptLanguageWithScore(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkTranscriptLanguageWithScore languageCode.\n     * @member {string} languageCode\n     * @memberof SdkTranscriptLanguageWithScore\n     * @instance\n     */\n    SdkTranscriptLanguageWithScore.prototype.languageCode = \"\";\n\n    /**\n     * SdkTranscriptLanguageWithScore score.\n     * @member {number} score\n     * @memberof SdkTranscriptLanguageWithScore\n     * @instance\n     */\n    SdkTranscriptLanguageWithScore.prototype.score = 0;\n\n    /**\n     * Creates a new SdkTranscriptLanguageWithScore instance using the specified properties.\n     * @function create\n     * @memberof SdkTranscriptLanguageWithScore\n     * @static\n     * @param {ISdkTranscriptLanguageWithScore=} [properties] Properties to set\n     * @returns {SdkTranscriptLanguageWithScore} SdkTranscriptLanguageWithScore instance\n     */\n    SdkTranscriptLanguageWithScore.create = function create(properties) {\n        return new SdkTranscriptLanguageWithScore(properties);\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptLanguageWithScore message. Does not implicitly {@link SdkTranscriptLanguageWithScore.verify|verify} messages.\n     * @function encode\n     * @memberof SdkTranscriptLanguageWithScore\n     * @static\n     * @param {ISdkTranscriptLanguageWithScore} message SdkTranscriptLanguageWithScore message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptLanguageWithScore.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.languageCode != null && message.hasOwnProperty(\"languageCode\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.languageCode);\n        if (message.score != null && message.hasOwnProperty(\"score\"))\n            writer.uint32(/* id 2, wireType 1 =*/17).double(message.score);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptLanguageWithScore message, length delimited. Does not implicitly {@link SdkTranscriptLanguageWithScore.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkTranscriptLanguageWithScore\n     * @static\n     * @param {ISdkTranscriptLanguageWithScore} message SdkTranscriptLanguageWithScore message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptLanguageWithScore.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkTranscriptLanguageWithScore message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkTranscriptLanguageWithScore\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkTranscriptLanguageWithScore} SdkTranscriptLanguageWithScore\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptLanguageWithScore.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkTranscriptLanguageWithScore();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.languageCode = reader.string();\n                break;\n            case 2:\n                message.score = reader.double();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkTranscriptLanguageWithScore message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkTranscriptLanguageWithScore\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkTranscriptLanguageWithScore} SdkTranscriptLanguageWithScore\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptLanguageWithScore.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkTranscriptLanguageWithScore message.\n     * @function verify\n     * @memberof SdkTranscriptLanguageWithScore\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkTranscriptLanguageWithScore.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.languageCode != null && message.hasOwnProperty(\"languageCode\"))\n            if (!$util.isString(message.languageCode))\n                return \"languageCode: string expected\";\n        if (message.score != null && message.hasOwnProperty(\"score\"))\n            if (typeof message.score !== \"number\")\n                return \"score: number expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkTranscriptLanguageWithScore message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkTranscriptLanguageWithScore\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkTranscriptLanguageWithScore} SdkTranscriptLanguageWithScore\n     */\n    SdkTranscriptLanguageWithScore.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkTranscriptLanguageWithScore)\n            return object;\n        var message = new $root.SdkTranscriptLanguageWithScore();\n        if (object.languageCode != null)\n            message.languageCode = String(object.languageCode);\n        if (object.score != null)\n            message.score = Number(object.score);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkTranscriptLanguageWithScore message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkTranscriptLanguageWithScore\n     * @static\n     * @param {SdkTranscriptLanguageWithScore} message SdkTranscriptLanguageWithScore\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkTranscriptLanguageWithScore.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.languageCode = \"\";\n            object.score = 0;\n        }\n        if (message.languageCode != null && message.hasOwnProperty(\"languageCode\"))\n            object.languageCode = message.languageCode;\n        if (message.score != null && message.hasOwnProperty(\"score\"))\n            object.score = options.json && !isFinite(message.score) ? String(message.score) : message.score;\n        return object;\n    };\n\n    /**\n     * Converts this SdkTranscriptLanguageWithScore to JSON.\n     * @function toJSON\n     * @memberof SdkTranscriptLanguageWithScore\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkTranscriptLanguageWithScore.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkTranscriptLanguageWithScore;\n})();\n\n$root.SdkTranscriptResult = (function() {\n\n    /**\n     * Properties of a SdkTranscriptResult.\n     * @exports ISdkTranscriptResult\n     * @interface ISdkTranscriptResult\n     * @property {Array.<ISdkTranscriptAlternative>|null} [alternatives] SdkTranscriptResult alternatives\n     * @property {string|null} [channelId] SdkTranscriptResult channelId\n     * @property {number|Long|null} [endTime] SdkTranscriptResult endTime\n     * @property {boolean|null} [isPartial] SdkTranscriptResult isPartial\n     * @property {string|null} [resultId] SdkTranscriptResult resultId\n     * @property {number|Long|null} [startTime] SdkTranscriptResult startTime\n     * @property {string|null} [languageCode] SdkTranscriptResult languageCode\n     * @property {Array.<ISdkTranscriptLanguageWithScore>|null} [languageIdentification] SdkTranscriptResult languageIdentification\n     */\n\n    /**\n     * Constructs a new SdkTranscriptResult.\n     * @exports SdkTranscriptResult\n     * @classdesc Represents a SdkTranscriptResult.\n     * @implements ISdkTranscriptResult\n     * @constructor\n     * @param {ISdkTranscriptResult=} [properties] Properties to set\n     */\n    function SdkTranscriptResult(properties) {\n        this.alternatives = [];\n        this.languageIdentification = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkTranscriptResult alternatives.\n     * @member {Array.<ISdkTranscriptAlternative>} alternatives\n     * @memberof SdkTranscriptResult\n     * @instance\n     */\n    SdkTranscriptResult.prototype.alternatives = $util.emptyArray;\n\n    /**\n     * SdkTranscriptResult channelId.\n     * @member {string} channelId\n     * @memberof SdkTranscriptResult\n     * @instance\n     */\n    SdkTranscriptResult.prototype.channelId = \"\";\n\n    /**\n     * SdkTranscriptResult endTime.\n     * @member {number|Long} endTime\n     * @memberof SdkTranscriptResult\n     * @instance\n     */\n    SdkTranscriptResult.prototype.endTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * SdkTranscriptResult isPartial.\n     * @member {boolean} isPartial\n     * @memberof SdkTranscriptResult\n     * @instance\n     */\n    SdkTranscriptResult.prototype.isPartial = false;\n\n    /**\n     * SdkTranscriptResult resultId.\n     * @member {string} resultId\n     * @memberof SdkTranscriptResult\n     * @instance\n     */\n    SdkTranscriptResult.prototype.resultId = \"\";\n\n    /**\n     * SdkTranscriptResult startTime.\n     * @member {number|Long} startTime\n     * @memberof SdkTranscriptResult\n     * @instance\n     */\n    SdkTranscriptResult.prototype.startTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * SdkTranscriptResult languageCode.\n     * @member {string} languageCode\n     * @memberof SdkTranscriptResult\n     * @instance\n     */\n    SdkTranscriptResult.prototype.languageCode = \"\";\n\n    /**\n     * SdkTranscriptResult languageIdentification.\n     * @member {Array.<ISdkTranscriptLanguageWithScore>} languageIdentification\n     * @memberof SdkTranscriptResult\n     * @instance\n     */\n    SdkTranscriptResult.prototype.languageIdentification = $util.emptyArray;\n\n    /**\n     * Creates a new SdkTranscriptResult instance using the specified properties.\n     * @function create\n     * @memberof SdkTranscriptResult\n     * @static\n     * @param {ISdkTranscriptResult=} [properties] Properties to set\n     * @returns {SdkTranscriptResult} SdkTranscriptResult instance\n     */\n    SdkTranscriptResult.create = function create(properties) {\n        return new SdkTranscriptResult(properties);\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptResult message. Does not implicitly {@link SdkTranscriptResult.verify|verify} messages.\n     * @function encode\n     * @memberof SdkTranscriptResult\n     * @static\n     * @param {ISdkTranscriptResult} message SdkTranscriptResult message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptResult.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.alternatives != null && message.alternatives.length)\n            for (var i = 0; i < message.alternatives.length; ++i)\n                $root.SdkTranscriptAlternative.encode(message.alternatives[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        if (message.channelId != null && message.hasOwnProperty(\"channelId\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.channelId);\n        if (message.endTime != null && message.hasOwnProperty(\"endTime\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).int64(message.endTime);\n        if (message.isPartial != null && message.hasOwnProperty(\"isPartial\"))\n            writer.uint32(/* id 4, wireType 0 =*/32).bool(message.isPartial);\n        if (message.resultId != null && message.hasOwnProperty(\"resultId\"))\n            writer.uint32(/* id 5, wireType 2 =*/42).string(message.resultId);\n        if (message.startTime != null && message.hasOwnProperty(\"startTime\"))\n            writer.uint32(/* id 6, wireType 0 =*/48).int64(message.startTime);\n        if (message.languageCode != null && message.hasOwnProperty(\"languageCode\"))\n            writer.uint32(/* id 7, wireType 2 =*/58).string(message.languageCode);\n        if (message.languageIdentification != null && message.languageIdentification.length)\n            for (var i = 0; i < message.languageIdentification.length; ++i)\n                $root.SdkTranscriptLanguageWithScore.encode(message.languageIdentification[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptResult message, length delimited. Does not implicitly {@link SdkTranscriptResult.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkTranscriptResult\n     * @static\n     * @param {ISdkTranscriptResult} message SdkTranscriptResult message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptResult.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkTranscriptResult message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkTranscriptResult\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkTranscriptResult} SdkTranscriptResult\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptResult.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkTranscriptResult();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.alternatives && message.alternatives.length))\n                    message.alternatives = [];\n                message.alternatives.push($root.SdkTranscriptAlternative.decode(reader, reader.uint32()));\n                break;\n            case 2:\n                message.channelId = reader.string();\n                break;\n            case 3:\n                message.endTime = reader.int64();\n                break;\n            case 4:\n                message.isPartial = reader.bool();\n                break;\n            case 5:\n                message.resultId = reader.string();\n                break;\n            case 6:\n                message.startTime = reader.int64();\n                break;\n            case 7:\n                message.languageCode = reader.string();\n                break;\n            case 8:\n                if (!(message.languageIdentification && message.languageIdentification.length))\n                    message.languageIdentification = [];\n                message.languageIdentification.push($root.SdkTranscriptLanguageWithScore.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkTranscriptResult message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkTranscriptResult\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkTranscriptResult} SdkTranscriptResult\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptResult.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkTranscriptResult message.\n     * @function verify\n     * @memberof SdkTranscriptResult\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkTranscriptResult.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.alternatives != null && message.hasOwnProperty(\"alternatives\")) {\n            if (!Array.isArray(message.alternatives))\n                return \"alternatives: array expected\";\n            for (var i = 0; i < message.alternatives.length; ++i) {\n                var error = $root.SdkTranscriptAlternative.verify(message.alternatives[i]);\n                if (error)\n                    return \"alternatives.\" + error;\n            }\n        }\n        if (message.channelId != null && message.hasOwnProperty(\"channelId\"))\n            if (!$util.isString(message.channelId))\n                return \"channelId: string expected\";\n        if (message.endTime != null && message.hasOwnProperty(\"endTime\"))\n            if (!$util.isInteger(message.endTime) && !(message.endTime && $util.isInteger(message.endTime.low) && $util.isInteger(message.endTime.high)))\n                return \"endTime: integer|Long expected\";\n        if (message.isPartial != null && message.hasOwnProperty(\"isPartial\"))\n            if (typeof message.isPartial !== \"boolean\")\n                return \"isPartial: boolean expected\";\n        if (message.resultId != null && message.hasOwnProperty(\"resultId\"))\n            if (!$util.isString(message.resultId))\n                return \"resultId: string expected\";\n        if (message.startTime != null && message.hasOwnProperty(\"startTime\"))\n            if (!$util.isInteger(message.startTime) && !(message.startTime && $util.isInteger(message.startTime.low) && $util.isInteger(message.startTime.high)))\n                return \"startTime: integer|Long expected\";\n        if (message.languageCode != null && message.hasOwnProperty(\"languageCode\"))\n            if (!$util.isString(message.languageCode))\n                return \"languageCode: string expected\";\n        if (message.languageIdentification != null && message.hasOwnProperty(\"languageIdentification\")) {\n            if (!Array.isArray(message.languageIdentification))\n                return \"languageIdentification: array expected\";\n            for (var i = 0; i < message.languageIdentification.length; ++i) {\n                var error = $root.SdkTranscriptLanguageWithScore.verify(message.languageIdentification[i]);\n                if (error)\n                    return \"languageIdentification.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkTranscriptResult message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkTranscriptResult\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkTranscriptResult} SdkTranscriptResult\n     */\n    SdkTranscriptResult.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkTranscriptResult)\n            return object;\n        var message = new $root.SdkTranscriptResult();\n        if (object.alternatives) {\n            if (!Array.isArray(object.alternatives))\n                throw TypeError(\".SdkTranscriptResult.alternatives: array expected\");\n            message.alternatives = [];\n            for (var i = 0; i < object.alternatives.length; ++i) {\n                if (typeof object.alternatives[i] !== \"object\")\n                    throw TypeError(\".SdkTranscriptResult.alternatives: object expected\");\n                message.alternatives[i] = $root.SdkTranscriptAlternative.fromObject(object.alternatives[i]);\n            }\n        }\n        if (object.channelId != null)\n            message.channelId = String(object.channelId);\n        if (object.endTime != null)\n            if ($util.Long)\n                (message.endTime = $util.Long.fromValue(object.endTime)).unsigned = false;\n            else if (typeof object.endTime === \"string\")\n                message.endTime = parseInt(object.endTime, 10);\n            else if (typeof object.endTime === \"number\")\n                message.endTime = object.endTime;\n            else if (typeof object.endTime === \"object\")\n                message.endTime = new $util.LongBits(object.endTime.low >>> 0, object.endTime.high >>> 0).toNumber();\n        if (object.isPartial != null)\n            message.isPartial = Boolean(object.isPartial);\n        if (object.resultId != null)\n            message.resultId = String(object.resultId);\n        if (object.startTime != null)\n            if ($util.Long)\n                (message.startTime = $util.Long.fromValue(object.startTime)).unsigned = false;\n            else if (typeof object.startTime === \"string\")\n                message.startTime = parseInt(object.startTime, 10);\n            else if (typeof object.startTime === \"number\")\n                message.startTime = object.startTime;\n            else if (typeof object.startTime === \"object\")\n                message.startTime = new $util.LongBits(object.startTime.low >>> 0, object.startTime.high >>> 0).toNumber();\n        if (object.languageCode != null)\n            message.languageCode = String(object.languageCode);\n        if (object.languageIdentification) {\n            if (!Array.isArray(object.languageIdentification))\n                throw TypeError(\".SdkTranscriptResult.languageIdentification: array expected\");\n            message.languageIdentification = [];\n            for (var i = 0; i < object.languageIdentification.length; ++i) {\n                if (typeof object.languageIdentification[i] !== \"object\")\n                    throw TypeError(\".SdkTranscriptResult.languageIdentification: object expected\");\n                message.languageIdentification[i] = $root.SdkTranscriptLanguageWithScore.fromObject(object.languageIdentification[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkTranscriptResult message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkTranscriptResult\n     * @static\n     * @param {SdkTranscriptResult} message SdkTranscriptResult\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkTranscriptResult.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.alternatives = [];\n            object.languageIdentification = [];\n        }\n        if (options.defaults) {\n            object.channelId = \"\";\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.endTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.endTime = options.longs === String ? \"0\" : 0;\n            object.isPartial = false;\n            object.resultId = \"\";\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.startTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.startTime = options.longs === String ? \"0\" : 0;\n            object.languageCode = \"\";\n        }\n        if (message.alternatives && message.alternatives.length) {\n            object.alternatives = [];\n            for (var j = 0; j < message.alternatives.length; ++j)\n                object.alternatives[j] = $root.SdkTranscriptAlternative.toObject(message.alternatives[j], options);\n        }\n        if (message.channelId != null && message.hasOwnProperty(\"channelId\"))\n            object.channelId = message.channelId;\n        if (message.endTime != null && message.hasOwnProperty(\"endTime\"))\n            if (typeof message.endTime === \"number\")\n                object.endTime = options.longs === String ? String(message.endTime) : message.endTime;\n            else\n                object.endTime = options.longs === String ? $util.Long.prototype.toString.call(message.endTime) : options.longs === Number ? new $util.LongBits(message.endTime.low >>> 0, message.endTime.high >>> 0).toNumber() : message.endTime;\n        if (message.isPartial != null && message.hasOwnProperty(\"isPartial\"))\n            object.isPartial = message.isPartial;\n        if (message.resultId != null && message.hasOwnProperty(\"resultId\"))\n            object.resultId = message.resultId;\n        if (message.startTime != null && message.hasOwnProperty(\"startTime\"))\n            if (typeof message.startTime === \"number\")\n                object.startTime = options.longs === String ? String(message.startTime) : message.startTime;\n            else\n                object.startTime = options.longs === String ? $util.Long.prototype.toString.call(message.startTime) : options.longs === Number ? new $util.LongBits(message.startTime.low >>> 0, message.startTime.high >>> 0).toNumber() : message.startTime;\n        if (message.languageCode != null && message.hasOwnProperty(\"languageCode\"))\n            object.languageCode = message.languageCode;\n        if (message.languageIdentification && message.languageIdentification.length) {\n            object.languageIdentification = [];\n            for (var j = 0; j < message.languageIdentification.length; ++j)\n                object.languageIdentification[j] = $root.SdkTranscriptLanguageWithScore.toObject(message.languageIdentification[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkTranscriptResult to JSON.\n     * @function toJSON\n     * @memberof SdkTranscriptResult\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkTranscriptResult.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkTranscriptResult;\n})();\n\n$root.SdkTranscript = (function() {\n\n    /**\n     * Properties of a SdkTranscript.\n     * @exports ISdkTranscript\n     * @interface ISdkTranscript\n     * @property {Array.<ISdkTranscriptResult>|null} [results] SdkTranscript results\n     */\n\n    /**\n     * Constructs a new SdkTranscript.\n     * @exports SdkTranscript\n     * @classdesc Represents a SdkTranscript.\n     * @implements ISdkTranscript\n     * @constructor\n     * @param {ISdkTranscript=} [properties] Properties to set\n     */\n    function SdkTranscript(properties) {\n        this.results = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkTranscript results.\n     * @member {Array.<ISdkTranscriptResult>} results\n     * @memberof SdkTranscript\n     * @instance\n     */\n    SdkTranscript.prototype.results = $util.emptyArray;\n\n    /**\n     * Creates a new SdkTranscript instance using the specified properties.\n     * @function create\n     * @memberof SdkTranscript\n     * @static\n     * @param {ISdkTranscript=} [properties] Properties to set\n     * @returns {SdkTranscript} SdkTranscript instance\n     */\n    SdkTranscript.create = function create(properties) {\n        return new SdkTranscript(properties);\n    };\n\n    /**\n     * Encodes the specified SdkTranscript message. Does not implicitly {@link SdkTranscript.verify|verify} messages.\n     * @function encode\n     * @memberof SdkTranscript\n     * @static\n     * @param {ISdkTranscript} message SdkTranscript message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscript.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.results != null && message.results.length)\n            for (var i = 0; i < message.results.length; ++i)\n                $root.SdkTranscriptResult.encode(message.results[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkTranscript message, length delimited. Does not implicitly {@link SdkTranscript.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkTranscript\n     * @static\n     * @param {ISdkTranscript} message SdkTranscript message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscript.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkTranscript message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkTranscript\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkTranscript} SdkTranscript\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscript.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkTranscript();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.results && message.results.length))\n                    message.results = [];\n                message.results.push($root.SdkTranscriptResult.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkTranscript message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkTranscript\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkTranscript} SdkTranscript\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscript.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkTranscript message.\n     * @function verify\n     * @memberof SdkTranscript\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkTranscript.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.results != null && message.hasOwnProperty(\"results\")) {\n            if (!Array.isArray(message.results))\n                return \"results: array expected\";\n            for (var i = 0; i < message.results.length; ++i) {\n                var error = $root.SdkTranscriptResult.verify(message.results[i]);\n                if (error)\n                    return \"results.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkTranscript message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkTranscript\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkTranscript} SdkTranscript\n     */\n    SdkTranscript.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkTranscript)\n            return object;\n        var message = new $root.SdkTranscript();\n        if (object.results) {\n            if (!Array.isArray(object.results))\n                throw TypeError(\".SdkTranscript.results: array expected\");\n            message.results = [];\n            for (var i = 0; i < object.results.length; ++i) {\n                if (typeof object.results[i] !== \"object\")\n                    throw TypeError(\".SdkTranscript.results: object expected\");\n                message.results[i] = $root.SdkTranscriptResult.fromObject(object.results[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkTranscript message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkTranscript\n     * @static\n     * @param {SdkTranscript} message SdkTranscript\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkTranscript.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.results = [];\n        if (message.results && message.results.length) {\n            object.results = [];\n            for (var j = 0; j < message.results.length; ++j)\n                object.results[j] = $root.SdkTranscriptResult.toObject(message.results[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkTranscript to JSON.\n     * @function toJSON\n     * @memberof SdkTranscript\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkTranscript.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkTranscript;\n})();\n\n$root.SdkTranscriptionStatus = (function() {\n\n    /**\n     * Properties of a SdkTranscriptionStatus.\n     * @exports ISdkTranscriptionStatus\n     * @interface ISdkTranscriptionStatus\n     * @property {SdkTranscriptionStatus.Type|null} [type] SdkTranscriptionStatus type\n     * @property {number|Long|null} [eventTime] SdkTranscriptionStatus eventTime\n     * @property {string|null} [transcriptionRegion] SdkTranscriptionStatus transcriptionRegion\n     * @property {string|null} [transcriptionConfiguration] SdkTranscriptionStatus transcriptionConfiguration\n     * @property {string|null} [message] SdkTranscriptionStatus message\n     */\n\n    /**\n     * Constructs a new SdkTranscriptionStatus.\n     * @exports SdkTranscriptionStatus\n     * @classdesc Represents a SdkTranscriptionStatus.\n     * @implements ISdkTranscriptionStatus\n     * @constructor\n     * @param {ISdkTranscriptionStatus=} [properties] Properties to set\n     */\n    function SdkTranscriptionStatus(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkTranscriptionStatus type.\n     * @member {SdkTranscriptionStatus.Type} type\n     * @memberof SdkTranscriptionStatus\n     * @instance\n     */\n    SdkTranscriptionStatus.prototype.type = 1;\n\n    /**\n     * SdkTranscriptionStatus eventTime.\n     * @member {number|Long} eventTime\n     * @memberof SdkTranscriptionStatus\n     * @instance\n     */\n    SdkTranscriptionStatus.prototype.eventTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * SdkTranscriptionStatus transcriptionRegion.\n     * @member {string} transcriptionRegion\n     * @memberof SdkTranscriptionStatus\n     * @instance\n     */\n    SdkTranscriptionStatus.prototype.transcriptionRegion = \"\";\n\n    /**\n     * SdkTranscriptionStatus transcriptionConfiguration.\n     * @member {string} transcriptionConfiguration\n     * @memberof SdkTranscriptionStatus\n     * @instance\n     */\n    SdkTranscriptionStatus.prototype.transcriptionConfiguration = \"\";\n\n    /**\n     * SdkTranscriptionStatus message.\n     * @member {string} message\n     * @memberof SdkTranscriptionStatus\n     * @instance\n     */\n    SdkTranscriptionStatus.prototype.message = \"\";\n\n    /**\n     * Creates a new SdkTranscriptionStatus instance using the specified properties.\n     * @function create\n     * @memberof SdkTranscriptionStatus\n     * @static\n     * @param {ISdkTranscriptionStatus=} [properties] Properties to set\n     * @returns {SdkTranscriptionStatus} SdkTranscriptionStatus instance\n     */\n    SdkTranscriptionStatus.create = function create(properties) {\n        return new SdkTranscriptionStatus(properties);\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptionStatus message. Does not implicitly {@link SdkTranscriptionStatus.verify|verify} messages.\n     * @function encode\n     * @memberof SdkTranscriptionStatus\n     * @static\n     * @param {ISdkTranscriptionStatus} message SdkTranscriptionStatus message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptionStatus.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);\n        if (message.eventTime != null && message.hasOwnProperty(\"eventTime\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).int64(message.eventTime);\n        if (message.transcriptionRegion != null && message.hasOwnProperty(\"transcriptionRegion\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.transcriptionRegion);\n        if (message.transcriptionConfiguration != null && message.hasOwnProperty(\"transcriptionConfiguration\"))\n            writer.uint32(/* id 4, wireType 2 =*/34).string(message.transcriptionConfiguration);\n        if (message.message != null && message.hasOwnProperty(\"message\"))\n            writer.uint32(/* id 5, wireType 2 =*/42).string(message.message);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptionStatus message, length delimited. Does not implicitly {@link SdkTranscriptionStatus.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkTranscriptionStatus\n     * @static\n     * @param {ISdkTranscriptionStatus} message SdkTranscriptionStatus message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptionStatus.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkTranscriptionStatus message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkTranscriptionStatus\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkTranscriptionStatus} SdkTranscriptionStatus\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptionStatus.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkTranscriptionStatus();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.type = reader.int32();\n                break;\n            case 2:\n                message.eventTime = reader.int64();\n                break;\n            case 3:\n                message.transcriptionRegion = reader.string();\n                break;\n            case 4:\n                message.transcriptionConfiguration = reader.string();\n                break;\n            case 5:\n                message.message = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkTranscriptionStatus message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkTranscriptionStatus\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkTranscriptionStatus} SdkTranscriptionStatus\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptionStatus.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkTranscriptionStatus message.\n     * @function verify\n     * @memberof SdkTranscriptionStatus\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkTranscriptionStatus.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            switch (message.type) {\n            default:\n                return \"type: enum value expected\";\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n                break;\n            }\n        if (message.eventTime != null && message.hasOwnProperty(\"eventTime\"))\n            if (!$util.isInteger(message.eventTime) && !(message.eventTime && $util.isInteger(message.eventTime.low) && $util.isInteger(message.eventTime.high)))\n                return \"eventTime: integer|Long expected\";\n        if (message.transcriptionRegion != null && message.hasOwnProperty(\"transcriptionRegion\"))\n            if (!$util.isString(message.transcriptionRegion))\n                return \"transcriptionRegion: string expected\";\n        if (message.transcriptionConfiguration != null && message.hasOwnProperty(\"transcriptionConfiguration\"))\n            if (!$util.isString(message.transcriptionConfiguration))\n                return \"transcriptionConfiguration: string expected\";\n        if (message.message != null && message.hasOwnProperty(\"message\"))\n            if (!$util.isString(message.message))\n                return \"message: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkTranscriptionStatus message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkTranscriptionStatus\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkTranscriptionStatus} SdkTranscriptionStatus\n     */\n    SdkTranscriptionStatus.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkTranscriptionStatus)\n            return object;\n        var message = new $root.SdkTranscriptionStatus();\n        switch (object.type) {\n        case \"STARTED\":\n        case 1:\n            message.type = 1;\n            break;\n        case \"INTERRUPTED\":\n        case 2:\n            message.type = 2;\n            break;\n        case \"RESUMED\":\n        case 3:\n            message.type = 3;\n            break;\n        case \"STOPPED\":\n        case 4:\n            message.type = 4;\n            break;\n        case \"FAILED\":\n        case 5:\n            message.type = 5;\n            break;\n        }\n        if (object.eventTime != null)\n            if ($util.Long)\n                (message.eventTime = $util.Long.fromValue(object.eventTime)).unsigned = false;\n            else if (typeof object.eventTime === \"string\")\n                message.eventTime = parseInt(object.eventTime, 10);\n            else if (typeof object.eventTime === \"number\")\n                message.eventTime = object.eventTime;\n            else if (typeof object.eventTime === \"object\")\n                message.eventTime = new $util.LongBits(object.eventTime.low >>> 0, object.eventTime.high >>> 0).toNumber();\n        if (object.transcriptionRegion != null)\n            message.transcriptionRegion = String(object.transcriptionRegion);\n        if (object.transcriptionConfiguration != null)\n            message.transcriptionConfiguration = String(object.transcriptionConfiguration);\n        if (object.message != null)\n            message.message = String(object.message);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkTranscriptionStatus message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkTranscriptionStatus\n     * @static\n     * @param {SdkTranscriptionStatus} message SdkTranscriptionStatus\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkTranscriptionStatus.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.type = options.enums === String ? \"STARTED\" : 1;\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.eventTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.eventTime = options.longs === String ? \"0\" : 0;\n            object.transcriptionRegion = \"\";\n            object.transcriptionConfiguration = \"\";\n            object.message = \"\";\n        }\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            object.type = options.enums === String ? $root.SdkTranscriptionStatus.Type[message.type] : message.type;\n        if (message.eventTime != null && message.hasOwnProperty(\"eventTime\"))\n            if (typeof message.eventTime === \"number\")\n                object.eventTime = options.longs === String ? String(message.eventTime) : message.eventTime;\n            else\n                object.eventTime = options.longs === String ? $util.Long.prototype.toString.call(message.eventTime) : options.longs === Number ? new $util.LongBits(message.eventTime.low >>> 0, message.eventTime.high >>> 0).toNumber() : message.eventTime;\n        if (message.transcriptionRegion != null && message.hasOwnProperty(\"transcriptionRegion\"))\n            object.transcriptionRegion = message.transcriptionRegion;\n        if (message.transcriptionConfiguration != null && message.hasOwnProperty(\"transcriptionConfiguration\"))\n            object.transcriptionConfiguration = message.transcriptionConfiguration;\n        if (message.message != null && message.hasOwnProperty(\"message\"))\n            object.message = message.message;\n        return object;\n    };\n\n    /**\n     * Converts this SdkTranscriptionStatus to JSON.\n     * @function toJSON\n     * @memberof SdkTranscriptionStatus\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkTranscriptionStatus.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * Type enum.\n     * @name SdkTranscriptionStatus.Type\n     * @enum {string}\n     * @property {number} STARTED=1 STARTED value\n     * @property {number} INTERRUPTED=2 INTERRUPTED value\n     * @property {number} RESUMED=3 RESUMED value\n     * @property {number} STOPPED=4 STOPPED value\n     * @property {number} FAILED=5 FAILED value\n     */\n    SdkTranscriptionStatus.Type = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[1] = \"STARTED\"] = 1;\n        values[valuesById[2] = \"INTERRUPTED\"] = 2;\n        values[valuesById[3] = \"RESUMED\"] = 3;\n        values[valuesById[4] = \"STOPPED\"] = 4;\n        values[valuesById[5] = \"FAILED\"] = 5;\n        return values;\n    })();\n\n    return SdkTranscriptionStatus;\n})();\n\n$root.SdkTranscriptEvent = (function() {\n\n    /**\n     * Properties of a SdkTranscriptEvent.\n     * @exports ISdkTranscriptEvent\n     * @interface ISdkTranscriptEvent\n     * @property {ISdkTranscriptionStatus|null} [status] SdkTranscriptEvent status\n     * @property {ISdkTranscript|null} [transcript] SdkTranscriptEvent transcript\n     */\n\n    /**\n     * Constructs a new SdkTranscriptEvent.\n     * @exports SdkTranscriptEvent\n     * @classdesc Represents a SdkTranscriptEvent.\n     * @implements ISdkTranscriptEvent\n     * @constructor\n     * @param {ISdkTranscriptEvent=} [properties] Properties to set\n     */\n    function SdkTranscriptEvent(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkTranscriptEvent status.\n     * @member {ISdkTranscriptionStatus|null|undefined} status\n     * @memberof SdkTranscriptEvent\n     * @instance\n     */\n    SdkTranscriptEvent.prototype.status = null;\n\n    /**\n     * SdkTranscriptEvent transcript.\n     * @member {ISdkTranscript|null|undefined} transcript\n     * @memberof SdkTranscriptEvent\n     * @instance\n     */\n    SdkTranscriptEvent.prototype.transcript = null;\n\n    // OneOf field names bound to virtual getters and setters\n    var $oneOfFields;\n\n    /**\n     * SdkTranscriptEvent Event.\n     * @member {\"status\"|\"transcript\"|undefined} Event\n     * @memberof SdkTranscriptEvent\n     * @instance\n     */\n    Object.defineProperty(SdkTranscriptEvent.prototype, \"Event\", {\n        get: $util.oneOfGetter($oneOfFields = [\"status\", \"transcript\"]),\n        set: $util.oneOfSetter($oneOfFields)\n    });\n\n    /**\n     * Creates a new SdkTranscriptEvent instance using the specified properties.\n     * @function create\n     * @memberof SdkTranscriptEvent\n     * @static\n     * @param {ISdkTranscriptEvent=} [properties] Properties to set\n     * @returns {SdkTranscriptEvent} SdkTranscriptEvent instance\n     */\n    SdkTranscriptEvent.create = function create(properties) {\n        return new SdkTranscriptEvent(properties);\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptEvent message. Does not implicitly {@link SdkTranscriptEvent.verify|verify} messages.\n     * @function encode\n     * @memberof SdkTranscriptEvent\n     * @static\n     * @param {ISdkTranscriptEvent} message SdkTranscriptEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptEvent.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.status != null && message.hasOwnProperty(\"status\"))\n            $root.SdkTranscriptionStatus.encode(message.status, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        if (message.transcript != null && message.hasOwnProperty(\"transcript\"))\n            $root.SdkTranscript.encode(message.transcript, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptEvent message, length delimited. Does not implicitly {@link SdkTranscriptEvent.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkTranscriptEvent\n     * @static\n     * @param {ISdkTranscriptEvent} message SdkTranscriptEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptEvent.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkTranscriptEvent message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkTranscriptEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkTranscriptEvent} SdkTranscriptEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptEvent.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkTranscriptEvent();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.status = $root.SdkTranscriptionStatus.decode(reader, reader.uint32());\n                break;\n            case 2:\n                message.transcript = $root.SdkTranscript.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkTranscriptEvent message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkTranscriptEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkTranscriptEvent} SdkTranscriptEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptEvent.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkTranscriptEvent message.\n     * @function verify\n     * @memberof SdkTranscriptEvent\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkTranscriptEvent.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        var properties = {};\n        if (message.status != null && message.hasOwnProperty(\"status\")) {\n            properties.Event = 1;\n            {\n                var error = $root.SdkTranscriptionStatus.verify(message.status);\n                if (error)\n                    return \"status.\" + error;\n            }\n        }\n        if (message.transcript != null && message.hasOwnProperty(\"transcript\")) {\n            if (properties.Event === 1)\n                return \"Event: multiple values\";\n            properties.Event = 1;\n            {\n                var error = $root.SdkTranscript.verify(message.transcript);\n                if (error)\n                    return \"transcript.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkTranscriptEvent message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkTranscriptEvent\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkTranscriptEvent} SdkTranscriptEvent\n     */\n    SdkTranscriptEvent.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkTranscriptEvent)\n            return object;\n        var message = new $root.SdkTranscriptEvent();\n        if (object.status != null) {\n            if (typeof object.status !== \"object\")\n                throw TypeError(\".SdkTranscriptEvent.status: object expected\");\n            message.status = $root.SdkTranscriptionStatus.fromObject(object.status);\n        }\n        if (object.transcript != null) {\n            if (typeof object.transcript !== \"object\")\n                throw TypeError(\".SdkTranscriptEvent.transcript: object expected\");\n            message.transcript = $root.SdkTranscript.fromObject(object.transcript);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkTranscriptEvent message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkTranscriptEvent\n     * @static\n     * @param {SdkTranscriptEvent} message SdkTranscriptEvent\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkTranscriptEvent.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (message.status != null && message.hasOwnProperty(\"status\")) {\n            object.status = $root.SdkTranscriptionStatus.toObject(message.status, options);\n            if (options.oneofs)\n                object.Event = \"status\";\n        }\n        if (message.transcript != null && message.hasOwnProperty(\"transcript\")) {\n            object.transcript = $root.SdkTranscript.toObject(message.transcript, options);\n            if (options.oneofs)\n                object.Event = \"transcript\";\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkTranscriptEvent to JSON.\n     * @function toJSON\n     * @memberof SdkTranscriptEvent\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkTranscriptEvent.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkTranscriptEvent;\n})();\n\n$root.SdkTranscriptFrame = (function() {\n\n    /**\n     * Properties of a SdkTranscriptFrame.\n     * @exports ISdkTranscriptFrame\n     * @interface ISdkTranscriptFrame\n     * @property {Array.<ISdkTranscriptEvent>|null} [events] SdkTranscriptFrame events\n     */\n\n    /**\n     * Constructs a new SdkTranscriptFrame.\n     * @exports SdkTranscriptFrame\n     * @classdesc Represents a SdkTranscriptFrame.\n     * @implements ISdkTranscriptFrame\n     * @constructor\n     * @param {ISdkTranscriptFrame=} [properties] Properties to set\n     */\n    function SdkTranscriptFrame(properties) {\n        this.events = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkTranscriptFrame events.\n     * @member {Array.<ISdkTranscriptEvent>} events\n     * @memberof SdkTranscriptFrame\n     * @instance\n     */\n    SdkTranscriptFrame.prototype.events = $util.emptyArray;\n\n    /**\n     * Creates a new SdkTranscriptFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkTranscriptFrame\n     * @static\n     * @param {ISdkTranscriptFrame=} [properties] Properties to set\n     * @returns {SdkTranscriptFrame} SdkTranscriptFrame instance\n     */\n    SdkTranscriptFrame.create = function create(properties) {\n        return new SdkTranscriptFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptFrame message. Does not implicitly {@link SdkTranscriptFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkTranscriptFrame\n     * @static\n     * @param {ISdkTranscriptFrame} message SdkTranscriptFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.events != null && message.events.length)\n            for (var i = 0; i < message.events.length; ++i)\n                $root.SdkTranscriptEvent.encode(message.events[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptFrame message, length delimited. Does not implicitly {@link SdkTranscriptFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkTranscriptFrame\n     * @static\n     * @param {ISdkTranscriptFrame} message SdkTranscriptFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkTranscriptFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkTranscriptFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkTranscriptFrame} SdkTranscriptFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkTranscriptFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.events && message.events.length))\n                    message.events = [];\n                message.events.push($root.SdkTranscriptEvent.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkTranscriptFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkTranscriptFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkTranscriptFrame} SdkTranscriptFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkTranscriptFrame message.\n     * @function verify\n     * @memberof SdkTranscriptFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkTranscriptFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.events != null && message.hasOwnProperty(\"events\")) {\n            if (!Array.isArray(message.events))\n                return \"events: array expected\";\n            for (var i = 0; i < message.events.length; ++i) {\n                var error = $root.SdkTranscriptEvent.verify(message.events[i]);\n                if (error)\n                    return \"events.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkTranscriptFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkTranscriptFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkTranscriptFrame} SdkTranscriptFrame\n     */\n    SdkTranscriptFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkTranscriptFrame)\n            return object;\n        var message = new $root.SdkTranscriptFrame();\n        if (object.events) {\n            if (!Array.isArray(object.events))\n                throw TypeError(\".SdkTranscriptFrame.events: array expected\");\n            message.events = [];\n            for (var i = 0; i < object.events.length; ++i) {\n                if (typeof object.events[i] !== \"object\")\n                    throw TypeError(\".SdkTranscriptFrame.events: object expected\");\n                message.events[i] = $root.SdkTranscriptEvent.fromObject(object.events[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkTranscriptFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkTranscriptFrame\n     * @static\n     * @param {SdkTranscriptFrame} message SdkTranscriptFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkTranscriptFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.events = [];\n        if (message.events && message.events.length) {\n            object.events = [];\n            for (var j = 0; j < message.events.length; ++j)\n                object.events[j] = $root.SdkTranscriptEvent.toObject(message.events[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkTranscriptFrame to JSON.\n     * @function toJSON\n     * @memberof SdkTranscriptFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkTranscriptFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkTranscriptFrame;\n})();\n\n$root.SdkRemoteVideoUpdateFrame = (function() {\n\n    /**\n     * Properties of a SdkRemoteVideoUpdateFrame.\n     * @exports ISdkRemoteVideoUpdateFrame\n     * @interface ISdkRemoteVideoUpdateFrame\n     * @property {Array.<ISdkVideoSubscriptionConfiguration>|null} [addedOrUpdatedVideoSubscriptions] SdkRemoteVideoUpdateFrame addedOrUpdatedVideoSubscriptions\n     * @property {Array.<string>|null} [removedVideoSubscriptionMids] SdkRemoteVideoUpdateFrame removedVideoSubscriptionMids\n     */\n\n    /**\n     * Constructs a new SdkRemoteVideoUpdateFrame.\n     * @exports SdkRemoteVideoUpdateFrame\n     * @classdesc Represents a SdkRemoteVideoUpdateFrame.\n     * @implements ISdkRemoteVideoUpdateFrame\n     * @constructor\n     * @param {ISdkRemoteVideoUpdateFrame=} [properties] Properties to set\n     */\n    function SdkRemoteVideoUpdateFrame(properties) {\n        this.addedOrUpdatedVideoSubscriptions = [];\n        this.removedVideoSubscriptionMids = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkRemoteVideoUpdateFrame addedOrUpdatedVideoSubscriptions.\n     * @member {Array.<ISdkVideoSubscriptionConfiguration>} addedOrUpdatedVideoSubscriptions\n     * @memberof SdkRemoteVideoUpdateFrame\n     * @instance\n     */\n    SdkRemoteVideoUpdateFrame.prototype.addedOrUpdatedVideoSubscriptions = $util.emptyArray;\n\n    /**\n     * SdkRemoteVideoUpdateFrame removedVideoSubscriptionMids.\n     * @member {Array.<string>} removedVideoSubscriptionMids\n     * @memberof SdkRemoteVideoUpdateFrame\n     * @instance\n     */\n    SdkRemoteVideoUpdateFrame.prototype.removedVideoSubscriptionMids = $util.emptyArray;\n\n    /**\n     * Creates a new SdkRemoteVideoUpdateFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkRemoteVideoUpdateFrame\n     * @static\n     * @param {ISdkRemoteVideoUpdateFrame=} [properties] Properties to set\n     * @returns {SdkRemoteVideoUpdateFrame} SdkRemoteVideoUpdateFrame instance\n     */\n    SdkRemoteVideoUpdateFrame.create = function create(properties) {\n        return new SdkRemoteVideoUpdateFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkRemoteVideoUpdateFrame message. Does not implicitly {@link SdkRemoteVideoUpdateFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkRemoteVideoUpdateFrame\n     * @static\n     * @param {ISdkRemoteVideoUpdateFrame} message SdkRemoteVideoUpdateFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkRemoteVideoUpdateFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.addedOrUpdatedVideoSubscriptions != null && message.addedOrUpdatedVideoSubscriptions.length)\n            for (var i = 0; i < message.addedOrUpdatedVideoSubscriptions.length; ++i)\n                $root.SdkVideoSubscriptionConfiguration.encode(message.addedOrUpdatedVideoSubscriptions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        if (message.removedVideoSubscriptionMids != null && message.removedVideoSubscriptionMids.length)\n            for (var i = 0; i < message.removedVideoSubscriptionMids.length; ++i)\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.removedVideoSubscriptionMids[i]);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkRemoteVideoUpdateFrame message, length delimited. Does not implicitly {@link SdkRemoteVideoUpdateFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkRemoteVideoUpdateFrame\n     * @static\n     * @param {ISdkRemoteVideoUpdateFrame} message SdkRemoteVideoUpdateFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkRemoteVideoUpdateFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkRemoteVideoUpdateFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkRemoteVideoUpdateFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkRemoteVideoUpdateFrame} SdkRemoteVideoUpdateFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkRemoteVideoUpdateFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkRemoteVideoUpdateFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.addedOrUpdatedVideoSubscriptions && message.addedOrUpdatedVideoSubscriptions.length))\n                    message.addedOrUpdatedVideoSubscriptions = [];\n                message.addedOrUpdatedVideoSubscriptions.push($root.SdkVideoSubscriptionConfiguration.decode(reader, reader.uint32()));\n                break;\n            case 2:\n                if (!(message.removedVideoSubscriptionMids && message.removedVideoSubscriptionMids.length))\n                    message.removedVideoSubscriptionMids = [];\n                message.removedVideoSubscriptionMids.push(reader.string());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkRemoteVideoUpdateFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkRemoteVideoUpdateFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkRemoteVideoUpdateFrame} SdkRemoteVideoUpdateFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkRemoteVideoUpdateFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkRemoteVideoUpdateFrame message.\n     * @function verify\n     * @memberof SdkRemoteVideoUpdateFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkRemoteVideoUpdateFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.addedOrUpdatedVideoSubscriptions != null && message.hasOwnProperty(\"addedOrUpdatedVideoSubscriptions\")) {\n            if (!Array.isArray(message.addedOrUpdatedVideoSubscriptions))\n                return \"addedOrUpdatedVideoSubscriptions: array expected\";\n            for (var i = 0; i < message.addedOrUpdatedVideoSubscriptions.length; ++i) {\n                var error = $root.SdkVideoSubscriptionConfiguration.verify(message.addedOrUpdatedVideoSubscriptions[i]);\n                if (error)\n                    return \"addedOrUpdatedVideoSubscriptions.\" + error;\n            }\n        }\n        if (message.removedVideoSubscriptionMids != null && message.hasOwnProperty(\"removedVideoSubscriptionMids\")) {\n            if (!Array.isArray(message.removedVideoSubscriptionMids))\n                return \"removedVideoSubscriptionMids: array expected\";\n            for (var i = 0; i < message.removedVideoSubscriptionMids.length; ++i)\n                if (!$util.isString(message.removedVideoSubscriptionMids[i]))\n                    return \"removedVideoSubscriptionMids: string[] expected\";\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkRemoteVideoUpdateFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkRemoteVideoUpdateFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkRemoteVideoUpdateFrame} SdkRemoteVideoUpdateFrame\n     */\n    SdkRemoteVideoUpdateFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkRemoteVideoUpdateFrame)\n            return object;\n        var message = new $root.SdkRemoteVideoUpdateFrame();\n        if (object.addedOrUpdatedVideoSubscriptions) {\n            if (!Array.isArray(object.addedOrUpdatedVideoSubscriptions))\n                throw TypeError(\".SdkRemoteVideoUpdateFrame.addedOrUpdatedVideoSubscriptions: array expected\");\n            message.addedOrUpdatedVideoSubscriptions = [];\n            for (var i = 0; i < object.addedOrUpdatedVideoSubscriptions.length; ++i) {\n                if (typeof object.addedOrUpdatedVideoSubscriptions[i] !== \"object\")\n                    throw TypeError(\".SdkRemoteVideoUpdateFrame.addedOrUpdatedVideoSubscriptions: object expected\");\n                message.addedOrUpdatedVideoSubscriptions[i] = $root.SdkVideoSubscriptionConfiguration.fromObject(object.addedOrUpdatedVideoSubscriptions[i]);\n            }\n        }\n        if (object.removedVideoSubscriptionMids) {\n            if (!Array.isArray(object.removedVideoSubscriptionMids))\n                throw TypeError(\".SdkRemoteVideoUpdateFrame.removedVideoSubscriptionMids: array expected\");\n            message.removedVideoSubscriptionMids = [];\n            for (var i = 0; i < object.removedVideoSubscriptionMids.length; ++i)\n                message.removedVideoSubscriptionMids[i] = String(object.removedVideoSubscriptionMids[i]);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkRemoteVideoUpdateFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkRemoteVideoUpdateFrame\n     * @static\n     * @param {SdkRemoteVideoUpdateFrame} message SdkRemoteVideoUpdateFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkRemoteVideoUpdateFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.addedOrUpdatedVideoSubscriptions = [];\n            object.removedVideoSubscriptionMids = [];\n        }\n        if (message.addedOrUpdatedVideoSubscriptions && message.addedOrUpdatedVideoSubscriptions.length) {\n            object.addedOrUpdatedVideoSubscriptions = [];\n            for (var j = 0; j < message.addedOrUpdatedVideoSubscriptions.length; ++j)\n                object.addedOrUpdatedVideoSubscriptions[j] = $root.SdkVideoSubscriptionConfiguration.toObject(message.addedOrUpdatedVideoSubscriptions[j], options);\n        }\n        if (message.removedVideoSubscriptionMids && message.removedVideoSubscriptionMids.length) {\n            object.removedVideoSubscriptionMids = [];\n            for (var j = 0; j < message.removedVideoSubscriptionMids.length; ++j)\n                object.removedVideoSubscriptionMids[j] = message.removedVideoSubscriptionMids[j];\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkRemoteVideoUpdateFrame to JSON.\n     * @function toJSON\n     * @memberof SdkRemoteVideoUpdateFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkRemoteVideoUpdateFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkRemoteVideoUpdateFrame;\n})();\n\n$root.SdkVideoSubscriptionConfiguration = (function() {\n\n    /**\n     * Properties of a SdkVideoSubscriptionConfiguration.\n     * @exports ISdkVideoSubscriptionConfiguration\n     * @interface ISdkVideoSubscriptionConfiguration\n     * @property {string} mid SdkVideoSubscriptionConfiguration mid\n     * @property {string|null} [attendeeId] SdkVideoSubscriptionConfiguration attendeeId\n     * @property {number|null} [streamId] SdkVideoSubscriptionConfiguration streamId\n     */\n\n    /**\n     * Constructs a new SdkVideoSubscriptionConfiguration.\n     * @exports SdkVideoSubscriptionConfiguration\n     * @classdesc Represents a SdkVideoSubscriptionConfiguration.\n     * @implements ISdkVideoSubscriptionConfiguration\n     * @constructor\n     * @param {ISdkVideoSubscriptionConfiguration=} [properties] Properties to set\n     */\n    function SdkVideoSubscriptionConfiguration(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkVideoSubscriptionConfiguration mid.\n     * @member {string} mid\n     * @memberof SdkVideoSubscriptionConfiguration\n     * @instance\n     */\n    SdkVideoSubscriptionConfiguration.prototype.mid = \"\";\n\n    /**\n     * SdkVideoSubscriptionConfiguration attendeeId.\n     * @member {string} attendeeId\n     * @memberof SdkVideoSubscriptionConfiguration\n     * @instance\n     */\n    SdkVideoSubscriptionConfiguration.prototype.attendeeId = \"\";\n\n    /**\n     * SdkVideoSubscriptionConfiguration streamId.\n     * @member {number} streamId\n     * @memberof SdkVideoSubscriptionConfiguration\n     * @instance\n     */\n    SdkVideoSubscriptionConfiguration.prototype.streamId = 0;\n\n    /**\n     * Creates a new SdkVideoSubscriptionConfiguration instance using the specified properties.\n     * @function create\n     * @memberof SdkVideoSubscriptionConfiguration\n     * @static\n     * @param {ISdkVideoSubscriptionConfiguration=} [properties] Properties to set\n     * @returns {SdkVideoSubscriptionConfiguration} SdkVideoSubscriptionConfiguration instance\n     */\n    SdkVideoSubscriptionConfiguration.create = function create(properties) {\n        return new SdkVideoSubscriptionConfiguration(properties);\n    };\n\n    /**\n     * Encodes the specified SdkVideoSubscriptionConfiguration message. Does not implicitly {@link SdkVideoSubscriptionConfiguration.verify|verify} messages.\n     * @function encode\n     * @memberof SdkVideoSubscriptionConfiguration\n     * @static\n     * @param {ISdkVideoSubscriptionConfiguration} message SdkVideoSubscriptionConfiguration message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkVideoSubscriptionConfiguration.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        writer.uint32(/* id 1, wireType 2 =*/10).string(message.mid);\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.attendeeId);\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.streamId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkVideoSubscriptionConfiguration message, length delimited. Does not implicitly {@link SdkVideoSubscriptionConfiguration.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkVideoSubscriptionConfiguration\n     * @static\n     * @param {ISdkVideoSubscriptionConfiguration} message SdkVideoSubscriptionConfiguration message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkVideoSubscriptionConfiguration.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkVideoSubscriptionConfiguration message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkVideoSubscriptionConfiguration\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkVideoSubscriptionConfiguration} SdkVideoSubscriptionConfiguration\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkVideoSubscriptionConfiguration.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkVideoSubscriptionConfiguration();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.mid = reader.string();\n                break;\n            case 2:\n                message.attendeeId = reader.string();\n                break;\n            case 3:\n                message.streamId = reader.uint32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        if (!message.hasOwnProperty(\"mid\"))\n            throw $util.ProtocolError(\"missing required 'mid'\", { instance: message });\n        return message;\n    };\n\n    /**\n     * Decodes a SdkVideoSubscriptionConfiguration message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkVideoSubscriptionConfiguration\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkVideoSubscriptionConfiguration} SdkVideoSubscriptionConfiguration\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkVideoSubscriptionConfiguration.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkVideoSubscriptionConfiguration message.\n     * @function verify\n     * @memberof SdkVideoSubscriptionConfiguration\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkVideoSubscriptionConfiguration.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (!$util.isString(message.mid))\n            return \"mid: string expected\";\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            if (!$util.isString(message.attendeeId))\n                return \"attendeeId: string expected\";\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            if (!$util.isInteger(message.streamId))\n                return \"streamId: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkVideoSubscriptionConfiguration message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkVideoSubscriptionConfiguration\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkVideoSubscriptionConfiguration} SdkVideoSubscriptionConfiguration\n     */\n    SdkVideoSubscriptionConfiguration.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkVideoSubscriptionConfiguration)\n            return object;\n        var message = new $root.SdkVideoSubscriptionConfiguration();\n        if (object.mid != null)\n            message.mid = String(object.mid);\n        if (object.attendeeId != null)\n            message.attendeeId = String(object.attendeeId);\n        if (object.streamId != null)\n            message.streamId = object.streamId >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkVideoSubscriptionConfiguration message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkVideoSubscriptionConfiguration\n     * @static\n     * @param {SdkVideoSubscriptionConfiguration} message SdkVideoSubscriptionConfiguration\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkVideoSubscriptionConfiguration.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.mid = \"\";\n            object.attendeeId = \"\";\n            object.streamId = 0;\n        }\n        if (message.mid != null && message.hasOwnProperty(\"mid\"))\n            object.mid = message.mid;\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            object.attendeeId = message.attendeeId;\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            object.streamId = message.streamId;\n        return object;\n    };\n\n    /**\n     * Converts this SdkVideoSubscriptionConfiguration to JSON.\n     * @function toJSON\n     * @memberof SdkVideoSubscriptionConfiguration\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkVideoSubscriptionConfiguration.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkVideoSubscriptionConfiguration;\n})();\n\n$root.SdkPrimaryMeetingJoinFrame = (function() {\n\n    /**\n     * Properties of a SdkPrimaryMeetingJoinFrame.\n     * @exports ISdkPrimaryMeetingJoinFrame\n     * @interface ISdkPrimaryMeetingJoinFrame\n     * @property {ISdkMeetingSessionCredentials|null} [credentials] SdkPrimaryMeetingJoinFrame credentials\n     */\n\n    /**\n     * Constructs a new SdkPrimaryMeetingJoinFrame.\n     * @exports SdkPrimaryMeetingJoinFrame\n     * @classdesc Represents a SdkPrimaryMeetingJoinFrame.\n     * @implements ISdkPrimaryMeetingJoinFrame\n     * @constructor\n     * @param {ISdkPrimaryMeetingJoinFrame=} [properties] Properties to set\n     */\n    function SdkPrimaryMeetingJoinFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkPrimaryMeetingJoinFrame credentials.\n     * @member {ISdkMeetingSessionCredentials|null|undefined} credentials\n     * @memberof SdkPrimaryMeetingJoinFrame\n     * @instance\n     */\n    SdkPrimaryMeetingJoinFrame.prototype.credentials = null;\n\n    /**\n     * Creates a new SdkPrimaryMeetingJoinFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkPrimaryMeetingJoinFrame\n     * @static\n     * @param {ISdkPrimaryMeetingJoinFrame=} [properties] Properties to set\n     * @returns {SdkPrimaryMeetingJoinFrame} SdkPrimaryMeetingJoinFrame instance\n     */\n    SdkPrimaryMeetingJoinFrame.create = function create(properties) {\n        return new SdkPrimaryMeetingJoinFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkPrimaryMeetingJoinFrame message. Does not implicitly {@link SdkPrimaryMeetingJoinFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkPrimaryMeetingJoinFrame\n     * @static\n     * @param {ISdkPrimaryMeetingJoinFrame} message SdkPrimaryMeetingJoinFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkPrimaryMeetingJoinFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.credentials != null && message.hasOwnProperty(\"credentials\"))\n            $root.SdkMeetingSessionCredentials.encode(message.credentials, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkPrimaryMeetingJoinFrame message, length delimited. Does not implicitly {@link SdkPrimaryMeetingJoinFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkPrimaryMeetingJoinFrame\n     * @static\n     * @param {ISdkPrimaryMeetingJoinFrame} message SdkPrimaryMeetingJoinFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkPrimaryMeetingJoinFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkPrimaryMeetingJoinFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkPrimaryMeetingJoinFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkPrimaryMeetingJoinFrame} SdkPrimaryMeetingJoinFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkPrimaryMeetingJoinFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkPrimaryMeetingJoinFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.credentials = $root.SdkMeetingSessionCredentials.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkPrimaryMeetingJoinFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkPrimaryMeetingJoinFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkPrimaryMeetingJoinFrame} SdkPrimaryMeetingJoinFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkPrimaryMeetingJoinFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkPrimaryMeetingJoinFrame message.\n     * @function verify\n     * @memberof SdkPrimaryMeetingJoinFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkPrimaryMeetingJoinFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.credentials != null && message.hasOwnProperty(\"credentials\")) {\n            var error = $root.SdkMeetingSessionCredentials.verify(message.credentials);\n            if (error)\n                return \"credentials.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkPrimaryMeetingJoinFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkPrimaryMeetingJoinFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkPrimaryMeetingJoinFrame} SdkPrimaryMeetingJoinFrame\n     */\n    SdkPrimaryMeetingJoinFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkPrimaryMeetingJoinFrame)\n            return object;\n        var message = new $root.SdkPrimaryMeetingJoinFrame();\n        if (object.credentials != null) {\n            if (typeof object.credentials !== \"object\")\n                throw TypeError(\".SdkPrimaryMeetingJoinFrame.credentials: object expected\");\n            message.credentials = $root.SdkMeetingSessionCredentials.fromObject(object.credentials);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkPrimaryMeetingJoinFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkPrimaryMeetingJoinFrame\n     * @static\n     * @param {SdkPrimaryMeetingJoinFrame} message SdkPrimaryMeetingJoinFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkPrimaryMeetingJoinFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.credentials = null;\n        if (message.credentials != null && message.hasOwnProperty(\"credentials\"))\n            object.credentials = $root.SdkMeetingSessionCredentials.toObject(message.credentials, options);\n        return object;\n    };\n\n    /**\n     * Converts this SdkPrimaryMeetingJoinFrame to JSON.\n     * @function toJSON\n     * @memberof SdkPrimaryMeetingJoinFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkPrimaryMeetingJoinFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkPrimaryMeetingJoinFrame;\n})();\n\n$root.SdkPrimaryMeetingJoinAckFrame = (function() {\n\n    /**\n     * Properties of a SdkPrimaryMeetingJoinAckFrame.\n     * @exports ISdkPrimaryMeetingJoinAckFrame\n     * @interface ISdkPrimaryMeetingJoinAckFrame\n     */\n\n    /**\n     * Constructs a new SdkPrimaryMeetingJoinAckFrame.\n     * @exports SdkPrimaryMeetingJoinAckFrame\n     * @classdesc Represents a SdkPrimaryMeetingJoinAckFrame.\n     * @implements ISdkPrimaryMeetingJoinAckFrame\n     * @constructor\n     * @param {ISdkPrimaryMeetingJoinAckFrame=} [properties] Properties to set\n     */\n    function SdkPrimaryMeetingJoinAckFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Creates a new SdkPrimaryMeetingJoinAckFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkPrimaryMeetingJoinAckFrame\n     * @static\n     * @param {ISdkPrimaryMeetingJoinAckFrame=} [properties] Properties to set\n     * @returns {SdkPrimaryMeetingJoinAckFrame} SdkPrimaryMeetingJoinAckFrame instance\n     */\n    SdkPrimaryMeetingJoinAckFrame.create = function create(properties) {\n        return new SdkPrimaryMeetingJoinAckFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkPrimaryMeetingJoinAckFrame message. Does not implicitly {@link SdkPrimaryMeetingJoinAckFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkPrimaryMeetingJoinAckFrame\n     * @static\n     * @param {ISdkPrimaryMeetingJoinAckFrame} message SdkPrimaryMeetingJoinAckFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkPrimaryMeetingJoinAckFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkPrimaryMeetingJoinAckFrame message, length delimited. Does not implicitly {@link SdkPrimaryMeetingJoinAckFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkPrimaryMeetingJoinAckFrame\n     * @static\n     * @param {ISdkPrimaryMeetingJoinAckFrame} message SdkPrimaryMeetingJoinAckFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkPrimaryMeetingJoinAckFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkPrimaryMeetingJoinAckFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkPrimaryMeetingJoinAckFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkPrimaryMeetingJoinAckFrame} SdkPrimaryMeetingJoinAckFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkPrimaryMeetingJoinAckFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkPrimaryMeetingJoinAckFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkPrimaryMeetingJoinAckFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkPrimaryMeetingJoinAckFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkPrimaryMeetingJoinAckFrame} SdkPrimaryMeetingJoinAckFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkPrimaryMeetingJoinAckFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkPrimaryMeetingJoinAckFrame message.\n     * @function verify\n     * @memberof SdkPrimaryMeetingJoinAckFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkPrimaryMeetingJoinAckFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkPrimaryMeetingJoinAckFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkPrimaryMeetingJoinAckFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkPrimaryMeetingJoinAckFrame} SdkPrimaryMeetingJoinAckFrame\n     */\n    SdkPrimaryMeetingJoinAckFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkPrimaryMeetingJoinAckFrame)\n            return object;\n        return new $root.SdkPrimaryMeetingJoinAckFrame();\n    };\n\n    /**\n     * Creates a plain object from a SdkPrimaryMeetingJoinAckFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkPrimaryMeetingJoinAckFrame\n     * @static\n     * @param {SdkPrimaryMeetingJoinAckFrame} message SdkPrimaryMeetingJoinAckFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkPrimaryMeetingJoinAckFrame.toObject = function toObject() {\n        return {};\n    };\n\n    /**\n     * Converts this SdkPrimaryMeetingJoinAckFrame to JSON.\n     * @function toJSON\n     * @memberof SdkPrimaryMeetingJoinAckFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkPrimaryMeetingJoinAckFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkPrimaryMeetingJoinAckFrame;\n})();\n\n$root.SdkPrimaryMeetingLeaveFrame = (function() {\n\n    /**\n     * Properties of a SdkPrimaryMeetingLeaveFrame.\n     * @exports ISdkPrimaryMeetingLeaveFrame\n     * @interface ISdkPrimaryMeetingLeaveFrame\n     */\n\n    /**\n     * Constructs a new SdkPrimaryMeetingLeaveFrame.\n     * @exports SdkPrimaryMeetingLeaveFrame\n     * @classdesc Represents a SdkPrimaryMeetingLeaveFrame.\n     * @implements ISdkPrimaryMeetingLeaveFrame\n     * @constructor\n     * @param {ISdkPrimaryMeetingLeaveFrame=} [properties] Properties to set\n     */\n    function SdkPrimaryMeetingLeaveFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Creates a new SdkPrimaryMeetingLeaveFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkPrimaryMeetingLeaveFrame\n     * @static\n     * @param {ISdkPrimaryMeetingLeaveFrame=} [properties] Properties to set\n     * @returns {SdkPrimaryMeetingLeaveFrame} SdkPrimaryMeetingLeaveFrame instance\n     */\n    SdkPrimaryMeetingLeaveFrame.create = function create(properties) {\n        return new SdkPrimaryMeetingLeaveFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkPrimaryMeetingLeaveFrame message. Does not implicitly {@link SdkPrimaryMeetingLeaveFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkPrimaryMeetingLeaveFrame\n     * @static\n     * @param {ISdkPrimaryMeetingLeaveFrame} message SdkPrimaryMeetingLeaveFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkPrimaryMeetingLeaveFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkPrimaryMeetingLeaveFrame message, length delimited. Does not implicitly {@link SdkPrimaryMeetingLeaveFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkPrimaryMeetingLeaveFrame\n     * @static\n     * @param {ISdkPrimaryMeetingLeaveFrame} message SdkPrimaryMeetingLeaveFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkPrimaryMeetingLeaveFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkPrimaryMeetingLeaveFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkPrimaryMeetingLeaveFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkPrimaryMeetingLeaveFrame} SdkPrimaryMeetingLeaveFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkPrimaryMeetingLeaveFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkPrimaryMeetingLeaveFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkPrimaryMeetingLeaveFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkPrimaryMeetingLeaveFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkPrimaryMeetingLeaveFrame} SdkPrimaryMeetingLeaveFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkPrimaryMeetingLeaveFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkPrimaryMeetingLeaveFrame message.\n     * @function verify\n     * @memberof SdkPrimaryMeetingLeaveFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkPrimaryMeetingLeaveFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkPrimaryMeetingLeaveFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkPrimaryMeetingLeaveFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkPrimaryMeetingLeaveFrame} SdkPrimaryMeetingLeaveFrame\n     */\n    SdkPrimaryMeetingLeaveFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkPrimaryMeetingLeaveFrame)\n            return object;\n        return new $root.SdkPrimaryMeetingLeaveFrame();\n    };\n\n    /**\n     * Creates a plain object from a SdkPrimaryMeetingLeaveFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkPrimaryMeetingLeaveFrame\n     * @static\n     * @param {SdkPrimaryMeetingLeaveFrame} message SdkPrimaryMeetingLeaveFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkPrimaryMeetingLeaveFrame.toObject = function toObject() {\n        return {};\n    };\n\n    /**\n     * Converts this SdkPrimaryMeetingLeaveFrame to JSON.\n     * @function toJSON\n     * @memberof SdkPrimaryMeetingLeaveFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkPrimaryMeetingLeaveFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkPrimaryMeetingLeaveFrame;\n})();\n\n$root.SdkMeetingSessionCredentials = (function() {\n\n    /**\n     * Properties of a SdkMeetingSessionCredentials.\n     * @exports ISdkMeetingSessionCredentials\n     * @interface ISdkMeetingSessionCredentials\n     * @property {string|null} [attendeeId] SdkMeetingSessionCredentials attendeeId\n     * @property {string|null} [externalUserId] SdkMeetingSessionCredentials externalUserId\n     * @property {string|null} [joinToken] SdkMeetingSessionCredentials joinToken\n     */\n\n    /**\n     * Constructs a new SdkMeetingSessionCredentials.\n     * @exports SdkMeetingSessionCredentials\n     * @classdesc Represents a SdkMeetingSessionCredentials.\n     * @implements ISdkMeetingSessionCredentials\n     * @constructor\n     * @param {ISdkMeetingSessionCredentials=} [properties] Properties to set\n     */\n    function SdkMeetingSessionCredentials(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkMeetingSessionCredentials attendeeId.\n     * @member {string} attendeeId\n     * @memberof SdkMeetingSessionCredentials\n     * @instance\n     */\n    SdkMeetingSessionCredentials.prototype.attendeeId = \"\";\n\n    /**\n     * SdkMeetingSessionCredentials externalUserId.\n     * @member {string} externalUserId\n     * @memberof SdkMeetingSessionCredentials\n     * @instance\n     */\n    SdkMeetingSessionCredentials.prototype.externalUserId = \"\";\n\n    /**\n     * SdkMeetingSessionCredentials joinToken.\n     * @member {string} joinToken\n     * @memberof SdkMeetingSessionCredentials\n     * @instance\n     */\n    SdkMeetingSessionCredentials.prototype.joinToken = \"\";\n\n    /**\n     * Creates a new SdkMeetingSessionCredentials instance using the specified properties.\n     * @function create\n     * @memberof SdkMeetingSessionCredentials\n     * @static\n     * @param {ISdkMeetingSessionCredentials=} [properties] Properties to set\n     * @returns {SdkMeetingSessionCredentials} SdkMeetingSessionCredentials instance\n     */\n    SdkMeetingSessionCredentials.create = function create(properties) {\n        return new SdkMeetingSessionCredentials(properties);\n    };\n\n    /**\n     * Encodes the specified SdkMeetingSessionCredentials message. Does not implicitly {@link SdkMeetingSessionCredentials.verify|verify} messages.\n     * @function encode\n     * @memberof SdkMeetingSessionCredentials\n     * @static\n     * @param {ISdkMeetingSessionCredentials} message SdkMeetingSessionCredentials message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkMeetingSessionCredentials.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.attendeeId);\n        if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.externalUserId);\n        if (message.joinToken != null && message.hasOwnProperty(\"joinToken\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.joinToken);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkMeetingSessionCredentials message, length delimited. Does not implicitly {@link SdkMeetingSessionCredentials.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkMeetingSessionCredentials\n     * @static\n     * @param {ISdkMeetingSessionCredentials} message SdkMeetingSessionCredentials message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkMeetingSessionCredentials.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkMeetingSessionCredentials message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkMeetingSessionCredentials\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkMeetingSessionCredentials} SdkMeetingSessionCredentials\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkMeetingSessionCredentials.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkMeetingSessionCredentials();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.attendeeId = reader.string();\n                break;\n            case 2:\n                message.externalUserId = reader.string();\n                break;\n            case 3:\n                message.joinToken = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkMeetingSessionCredentials message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkMeetingSessionCredentials\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkMeetingSessionCredentials} SdkMeetingSessionCredentials\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkMeetingSessionCredentials.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkMeetingSessionCredentials message.\n     * @function verify\n     * @memberof SdkMeetingSessionCredentials\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkMeetingSessionCredentials.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            if (!$util.isString(message.attendeeId))\n                return \"attendeeId: string expected\";\n        if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\"))\n            if (!$util.isString(message.externalUserId))\n                return \"externalUserId: string expected\";\n        if (message.joinToken != null && message.hasOwnProperty(\"joinToken\"))\n            if (!$util.isString(message.joinToken))\n                return \"joinToken: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkMeetingSessionCredentials message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkMeetingSessionCredentials\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkMeetingSessionCredentials} SdkMeetingSessionCredentials\n     */\n    SdkMeetingSessionCredentials.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkMeetingSessionCredentials)\n            return object;\n        var message = new $root.SdkMeetingSessionCredentials();\n        if (object.attendeeId != null)\n            message.attendeeId = String(object.attendeeId);\n        if (object.externalUserId != null)\n            message.externalUserId = String(object.externalUserId);\n        if (object.joinToken != null)\n            message.joinToken = String(object.joinToken);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkMeetingSessionCredentials message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkMeetingSessionCredentials\n     * @static\n     * @param {SdkMeetingSessionCredentials} message SdkMeetingSessionCredentials\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkMeetingSessionCredentials.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.attendeeId = \"\";\n            object.externalUserId = \"\";\n            object.joinToken = \"\";\n        }\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            object.attendeeId = message.attendeeId;\n        if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\"))\n            object.externalUserId = message.externalUserId;\n        if (message.joinToken != null && message.hasOwnProperty(\"joinToken\"))\n            object.joinToken = message.joinToken;\n        return object;\n    };\n\n    /**\n     * Converts this SdkMeetingSessionCredentials to JSON.\n     * @function toJSON\n     * @memberof SdkMeetingSessionCredentials\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkMeetingSessionCredentials.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkMeetingSessionCredentials;\n})();\n\nmodule.exports = $root;\n$util.Long = undefined;\n$protobuf.configure();"],"mappings":"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"},"metadata":{},"sourceType":"script"}