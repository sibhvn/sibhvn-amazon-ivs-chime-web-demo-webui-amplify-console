import BrowserBehavior from './BrowserBehavior';
import ExtendedBrowserBehavior from './ExtendedBrowserBehavior';
export default class DefaultBrowserBehavior implements BrowserBehavior, ExtendedBrowserBehavior {
    private readonly browser;
    private browserSupport;
    private browserName;
    private chromeLike;
    private webkitBrowsers;
    private recreateAudioContextIfNeeded;
    constructor({ recreateAudioContextIfNeeded, }?: {
        enableUnifiedPlanForChromiumBasedBrowsers?: boolean;
        recreateAudioContextIfNeeded?: boolean;
    });
    version(): string;
    majorVersion(): number;
    name(): string;
    hasChromiumWebRTC(): boolean;
    hasWebKitWebRTC(): boolean;
    hasFirefoxWebRTC(): boolean;
    supportsCanvasCapturedStreamPlayback(): boolean;
    supportsBackgroundFilter(): boolean;
    requiresUnifiedPlan(): boolean;
    requiresResolutionAlignment(width: number, height: number): [number, number];
    requiresCheckForSdpConnectionAttributes(): boolean;
    requiresIceCandidateGatheringTimeoutWorkaround(): boolean;
    requiresUnifiedPlanMunging(): boolean;
    requiresSortCodecPreferencesForSdpAnswer(): boolean;
    requiresSimulcastMunging(): boolean;
    requiresBundlePolicy(): RTCBundlePolicy;
    requiresPromiseBasedWebRTCGetStats(): boolean;
    requiresVideoElementWorkaround(): boolean;
    requiresNoExactMediaStreamConstraints(): boolean;
    requiresGroupIdMediaStreamConstraints(): boolean;
    requiresContextRecreationForAudioWorklet(): boolean;
    getDisplayMediaAudioCaptureSupport(): boolean;
    supportsSenderSideBandwidthEstimation(): boolean;
    doesNotSupportMediaDeviceLabels(): boolean;
    screenShareUnsupported(): boolean;
    isSupported(): boolean;
    isSimulcastSupported(): boolean;
    supportDownlinkBandwidthEstimation(): boolean;
    supportString(): string;
    supportedVideoCodecs(): Promise<string[]>;
    supportsSetSinkId(): boolean;
    disableResolutionScaleDown(): boolean;
    disable480pResolutionScaleDown(): boolean;
    requiresDisablingH264Encoding(): boolean;
    private isIOSSafari;
    private isSafari;
    private isFirefox;
    private isIOSFirefox;
    private isIOSChrome;
    private isChrome;
    private isEdge;
    private isSamsungInternet;
    private isAndroid;
    private isPixel3;
    private isUnifiedPlanSupported;
}
